<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>1、AD、LDAP、域、DC等概念</title>
    <url>/posts/1312012375/</url>
    <content><![CDATA[<p>目录服务：存储网络资源的信息并使用户能访问记录在案的资源。</p>
<blockquote>
<p>例：目录服务记录共享文件夹的地址，用户通过目录服务就可以知道共享文件夹的地址，然后去访问共享文件夹</p>
</blockquote>
<p>AD：是存储资源信息的数据库。</p>
<blockquote>
<p>windows下使用AD来实现目录服务。</p>
<p>linux下使用openldap等来实现目录服务。</p>
</blockquote>
<blockquote>
<p>例：国家用身份证系统来标记每个人，其中记录了姓名、年龄、住址等。我们直接找这个人的话不知道他家地址，</p>
</blockquote>
<blockquote>
<p>我们可以通过查看身份证上面的住址来找到这个人。AD就是这个身份证系统的数据库。</p>
</blockquote>
<p>AD的存储结构：</p>
<blockquote>
<p>架构数据：存储所有对象和属性的定义</p>
<p>配置数据：存储所有域、域树、域林的列表，以及域控制器和全局编录的位置</p>
<p>域数据：包含域中对象的有关信息</p>
</blockquote>
<p>LDAP：访问活动目录的协议。</p>
<blockquote>
<p>ldap管理、查找、定位活动目录中的资源信息。</p>
</blockquote>
<p>AD的逻辑结构：域林-域树-域-OU-对象</p>
<blockquote>
<p>OU：AD中的最小管理单元。OU下面还可以有OU。例：OU：生产部，OU：车间1</p>
<p>Domain：一个管理的范围。并存储范围内所有对象的信息。例：公司</p>
<p>域树：例：总公司+各个分公司组成域树</p>
<p>域林：例：本公司+合并的公司组成域林。</p>
<p>-—————————————-</p>
<p>跨域访问：添加 信任/可传递信任</p>
<p>全局编录：一个总目录，记录对象中最常用的属性信息。</p>
<blockquote>
<p>一个域林使用相同的全局编录信息</p>
</blockquote>
</blockquote>
<p>AD的物理结构：站点—DC</p>
<blockquote>
<p>DC：安装了AD的服务器就是DC。用于存储资源信息、提供验证、提供查找信息任务。</p>
<p>站点：DC之间要相互复制域的信息。而站点用于优化这种复制任务。</p>
</blockquote>
<blockquote>
</blockquote>
<p>DNS和活动目录</p>
<blockquote>
<p>活动目录工作条件：</p>
</blockquote>
<blockquote>
<blockquote>
<p>使用DNS，并且该DNS必须要支持SRV(服务资源记录)。DNS最好还要支持动态升级以自动更新记录</p>
</blockquote>
</blockquote>
<blockquote>
<p>SRV记录：它记录了哪台计算机提供了哪个服务</p>
</blockquote>
<blockquote>
<p>SRV记录包括：服务器主机名、IP地址、提供哪些服务等。</p>
</blockquote>
<blockquote>
<p>SRV记录用途：</p>
</blockquote>
<blockquote>
<blockquote>
<p>SRV把服务名字映射为提供服务的服务器名字。</p>
</blockquote>
<blockquote>
<p>活动目录客户和域控制器使用SRV资源记录决定域控制器的IP地址。</p>
</blockquote>
</blockquote>
<blockquote>
<p>SRV记录使用：</p>
</blockquote>
<blockquote>
<blockquote>
<p>DC启动时自动向DNS注册SRV记录。</p>
</blockquote>
<blockquote>
<p>用户通过SRV记录查找到DC服务器。</p>
</blockquote>
</blockquote>
<blockquote>
<p>参考：<a href="http://www.sudu.cn/info/html/edu/dns_server/20070820/4175.html">http://www.sudu.cn/info/html/edu/dns_server/20070820/4175.html</a></p>
</blockquote>
<blockquote>
</blockquote>
<p>AD应用于账户管理过程：</p>
<blockquote>
<p>1、用户登录计算机时，输入账户和密码。</p>
<p>2、计算机首先访问DNS来获取域控制器的IP地址</p>
<p>3、计算机访问域控制器</p>
<p>4、域控制器使用ldap协议来访问AD数据库</p>
<p>5、AD数据库提供账户密码给域控制器来进行核对</p>
<p>6、核对无误则允许用户登录计算机。</p>
</blockquote>
<p>地址：<a href="http://wenku.baidu.com/view/604b3285d4d8d15abe234e4a.html">http://wenku.baidu.com/view/604b3285d4d8d15abe234e4a.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>1、shell摘记</title>
    <url>/posts/4203053353/</url>
    <content><![CDATA[<p>括号扩展<br>()<br>[]：<br>{}：  </p>
<p>系统默认开启的文件  </p>
<blockquote>
<p>系统默认开启stdin stdout stderr 并以0、1、2的文件代码做连接  </p>
</blockquote>
<p>转向的运行优先级  </p>
<blockquote>
<p>先运行&lt; &lt;&lt;，然后运行&gt; &gt;&gt;  </p>
</blockquote>
<p>shell排错<br>bash -v 检查语法<br>bash -x 追踪程序运行  </p>
<p>记录命令所产生的记录  </p>
<blockquote>
<p>/usr/bin/script 1.txt   </p>
<blockquote>
<p>命令  </p>
</blockquote>
<p>exit  </p>
</blockquote>
<p>变量  </p>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>1、基础概念，文件说明</title>
    <url>/posts/348685666/</url>
    <content><![CDATA[<p>SMC芯片<br>-———————-  </p>
<blockquote>
<p>用来认证是否为苹果电脑的芯片。  </p>
</blockquote>
<p>VendorID、DeviceID<br>-————————-  </p>
<blockquote>
<p>系统中的每个设备都有他的VendorID（厂商ID）和DevieID（设备ID）  </p>
</blockquote>
<p>内核缓存<br>-———————  </p>
<blockquote>
<p>内核缓存可以加快启动速度，它使内核不用一个一个的加载驱动，所以启动速度快  </p>
<p>重建缓存<br>安装了新的kext要重建缓存，如果不重建缓存，新kext将无效  </p>
</blockquote>
<p>KEXT<br>-———————-  </p>
<blockquote>
<p>Kext是Kernel extension（内核拓展）的缩写，相当于Win下的驱动，linux的模块<br>通常是在/System/Library/Extensions目录下  </p>
</blockquote>
<p>QE/CI<br>-———————-  </p>
<blockquote>
<p>Quartz Extreme and Core Image。Mac系统里两种用来保证显卡加速的技术<br>作用：<br>没有开启QE/CI时，CPU是唯一承担全部运算任务的组件。<br>你将不能观赏高清电影例如DVD，DivX，而且系统运行将变得迟缓</p>
</blockquote>
<blockquote>
</blockquote>
<p>-———————————————  </p>
<blockquote>
<blockquote>
<p>黑苹果相关  </p>
</blockquote>
</blockquote>
<p>-——————————————–<br>引导软件：  </p>
<blockquote>
<p>HJMAC、XPC、变色龙、CLover。这些都是引导软件，选一种使用即可  </p>
</blockquote>
<p>org.apple.Boot.plist：变色龙配置文件  </p>
<p>DSDT.aml<br>-———————-  </p>
<blockquote>
<p>提供硬件配置信息,为mac自动加载驱动做准备。<br>要通过变色龙加载，即写入org.apple.Boot.plist  </p>
</blockquote>
<blockquote>
<p>.aml<br>ACPI Machine Language：ACPI机器语言，后缀为.aml<br>当从系统中提取出DSDT以及其他ACPI表时，为该格式  </p>
<p>.dsl<br>要修改的话，DSDT需要先反编译成.dsl文件才能修改<br>DSDT_editor可以加载aml文件，它直接反编译了  </p>
</blockquote>
<p>smbios.plist  </p>
<blockquote>
<p>提供机型信息来设定机型，设定什么机型mac就按照什么机型去管理电脑。<br>根据CPU的类型来挑选一个模板（IntelCPU）<br>要通过变色龙加载，即写入org.apple.Boot.plist</p>
</blockquote>
<blockquote>
</blockquote>
<p>Fakesmc.kext  </p>
<blockquote>
<p>模拟smc芯片的驱动，必备。<br>FakeSMC文件设置的机型必须与smbios.plist相对应  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>1、数据库理论基础</title>
    <url>/posts/1608323361/</url>
    <content><![CDATA[<p>数据库技术</p>
<blockquote>
<p>-数据库系统</p>
</blockquote>
<blockquote>
<blockquote>
<p>数据库</p>
</blockquote>
<blockquote>
<p>数据库管理系统</p>
</blockquote>
<blockquote>
<p>应用开发工具</p>
</blockquote>
<blockquote>
<p>应用系统</p>
</blockquote>
</blockquote>
<blockquote>
<p>-SQL语言</p>
</blockquote>
<blockquote>
<blockquote>
<p>数据定义语言DDL：定义数据类型</p>
</blockquote>
<blockquote>
<p>数据操纵语言DML：更改、查询数据</p>
</blockquote>
<blockquote>
<p>数据控制语言DCL：设置用户访问权限</p>
</blockquote>
</blockquote>
<blockquote>
<p>-数据库访问技术</p>
</blockquote>
<blockquote>
<blockquote>
<p>ODBC：安装Connector/ODBC驱动</p>
</blockquote>
<blockquote>
<p>JDBC： 安装Connector/J驱动</p>
</blockquote>
<blockquote>
<p>ADO.NET：安装Connector/Net驱动</p>
</blockquote>
<blockquote>
<p>PHP模块：mysqli接口</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>Python：安装Connector/Python驱动</p>
</blockquote>
</blockquote>
<p>关系数据库范式</p>
<blockquote>
<p>第一范式：没有重复字段，每个字段不能再拆分。唯一和最基层的元素</p>
<p><a href="http://baike.baidu.com/view/402020.htm">http://baike.baidu.com/view/402020.htm</a></p>
<p><a href="http://zikao.b2cedu.com/200701/zikao_325513.shtml">http://zikao.b2cedu.com/200701/zikao_325513.shtml</a></p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>1、计算机概述</title>
    <url>/posts/633176423/</url>
    <content><![CDATA[<p>CPU的组成：</p>
<blockquote>
<p>执行单元</p>
<p>程序计数器（PC）：确定在内存的那一段开始计数</p>
<p>指令寄存器（IR）：存放正要被执行的指令</p>
</blockquote>
<blockquote>
<p>存储器地址寄存器：确定下一次要读/写的存储器地址</p>
</blockquote>
<blockquote>
<p>储存器缓冲寄存器：存放读出的/要被写入存储器的数据</p>
</blockquote>
<blockquote>
<p>I/O地址寄存器：确定一个I/O设备</p>
</blockquote>
<blockquote>
<p>I/O缓冲寄存器：存放读出的/要被写入I/O的数据</p>
</blockquote>
<blockquote>
</blockquote>
<p>中断：</p>
<blockquote>
<p>1、中断是为了提高效率而引入的机制。</p>
<p>由于CPU比I/O设备快很多，如果CPU一直等的话会浪费很多CPU时间。</p>
</blockquote>
<blockquote>
<blockquote>
<p>中断可以让I/O设备运行期间，允许CPU去做其他事，这样就提高了CPU的利用率</p>
</blockquote>
</blockquote>
<blockquote>
<p>2、中断的时候，CPU会把在执行的所有数据存到内存指定处，结束中断再调出来</p>
</blockquote>
<blockquote>
<p>3、多个中断处理：</p>
</blockquote>
<blockquote>
<blockquote>
<p>1、不允许多个中断，只能一个一个来</p>
</blockquote>
<blockquote>
<p>2、定义中断优先级，允许高优先级打断低优先</p>
</blockquote>
</blockquote>
<p>存储的层次结构：</p>
<blockquote>
<p>存储器的结构是：寄存器，一级缓存，二级缓存，三级缓存，内存</p>
<p>这里：复制一块数据副本供CPU读取，如没有要用的数据，则顺序读入下一块数据</p>
<p>层次结构的原理是：利用了局部性原理，来提高命中率</p>
</blockquote>
<blockquote>
<blockquote>
<p>空间局部性：一旦一个存储单元中的一个指令被访问，那么它附近的单元也将很快被访问</p>
</blockquote>
<blockquote>
<p>时间局部性：一旦一个指令被执行了，则在不久的将来，它可能再被执行</p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>DMA：</p>
<blockquote>
<p>就是处理I/O传送的工作，解放CPU在数据传送过程中的监管工作。</p>
</blockquote>
<blockquote>
<p>CPU的影响：</p>
</blockquote>
<blockquote>
<blockquote>
<p>在开始传送和结束传送需要CPU参与</p>
</blockquote>
<blockquote>
<p>CPU用总线的时候，需要等待DMA传送一个bit的时间</p>
</blockquote>
<blockquote>
</blockquote>
</blockquote>
<p>SMP和多核处理器</p>
<blockquote>
<p>SMP是多个CPU。SMP的每个CPU也可以是多核处理器</p>
<p>而多核处理器是一个CPU，里面有多个CPU核心。</p>
<p>使用SMP的好处是，一个CPU挂了，另一个还可以用；另外就是提高速度。</p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>20091105今天开始只用linux了</title>
    <url>/posts/384823097/</url>
    <content><![CDATA[<p><img src="http://img1.kaixin001.com.cn/i/caogao.gif" alt="20091105今天开始只用linux了 - ywz_306 - ------坚持雅操------" title="此篇为草稿，还未正式发表"></p>
<p>我用的发行版是Ubuntu 9.10<br>感觉挺好，挺顺手的<br>虽然也碰到些问题<br>只有碰到问题才能进步嘛<br>打算一直用linux了  </p>
<p>真正决定用linux的时候还是有点担心的。不过终于迈出第一步了</p>
]]></content>
  </entry>
  <entry>
    <title>20100804 来公司两个月了</title>
    <url>/posts/1537476297/</url>
    <content><![CDATA[<p>2个月了，一无所得，毫无进展。。。<br>事业、学业、情感  </p>
<p>情感：虽然她可以不理我，作为曾今爱过的人，尽量照顾她、帮助她<br>学业：一本书多没掌握，时间不多了，3个月不到了，要在linux、网络、教师证、题库 四个方面有所成就<br>事业 ：为人处世、掌握公司管理  </p>
<p>首先：计划没做好，安排不细致，没有补救机制，没有反思机制<br>由于没有坚持到最后，又没有复习机制，导致前期的工作多白费掉了，让人感觉一直在浪费时间，没学到什么东西  </p>
<p>要做的事情：<br>教师证、linux、网络、股票、英语、事业单位                   其他事务推迟到明年</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>20100809 股票操作总结</title>
    <url>/posts/3789571371/</url>
    <content><![CDATA[<p>1、股票盘整了三周 多空多消耗的很厉害，肯定会有转折<br>1、大盘周线又一次逼近半年线，会有回调  </p>
<p>2、光大网上申购，会有大量资金流出</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>2012.07.07动车晚点2个多小时</title>
    <url>/posts/3698678189/</url>
    <content><![CDATA[<p>买的是19：43分的D365，等到21：56分才开，我K！</p>
<p>就一站路，本来10多分钟就到了，做公交车的话要2个小时，所以多坐动车。</p>
<p>本来应该想到的：每次下雨，动车都会晚点。没想到晚点2个多小时！</p>
<p>当天下午1点半开始下大雨，下了好几个小时。</p>
<p>铁道部的设备就是垃圾，不抗雨！每次大雨都晚点！多成惯例了！</p>
<p><img src="http://img2.ph.126.net/DAnag92bqYepK7eY-Y2iMQ==/2799831593358538052.jpg" alt="2012.07.07动车晚点2个多小时 - leaf - ------坚持雅操------" title="2012.07.07动车晚点2个多小时 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>2、安装MYSQL</title>
    <url>/posts/2087554151/</url>
    <content><![CDATA[<p><img src="http://img1.ph.126.net/VubMu0xT4WjNt626stNtYQ==/6597662403425101030.png" alt="2、安装MYSQL - leaf - ------坚持雅操------" title="2、安装MYSQL - leaf - ------坚持雅操------">  </p>
<p>mysql：安装文件<br>MYSQLStartup：开机启动软件<br>mysql-workbench-gpl：图形管理工具  </p>
<blockquote>
</blockquote>
<p>相关设置：  </p>
<blockquote>
<p>1、添加PATH参数：(同linux)</p>
</blockquote>
<blockquote>
<blockquote>
<p>echo “export PATH=$PATH:/usr/local/mysql/bin” &gt;&gt; .bash_profile</p>
</blockquote>
<p>2、添加root密码</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo mysqladmin -u root password “123456”</p>
</blockquote>
<blockquote>
</blockquote>
<p>3、登陆</p>
</blockquote>
<blockquote>
<blockquote>
<p>mysql -h 127.0.0.1 -u root -p</p>
</blockquote>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/sEv40uenQWEd3iO-2enZhA==/6597778951657646825.png" alt="2、安装MYSQL - leaf - ------坚持雅操------" title="2、安装MYSQL - leaf - ------坚持雅操------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>3、相关工具、kext说明</title>
    <url>/posts/3969467101/</url>
    <content><![CDATA[<p>下载地址：<a href="http://pan.baidu.com/share/link?shareid=436698&amp;uk=336411764">http://pan.baidu.com/share/link?shareid=436698&amp;uk=336411764</a><br>按照制作过程列出<br>-————————–<br>1、制作启动盘工具  </p>
<blockquote>
<p>DiskGenius：用于分区、格式化<br>BOOTICE：制作引导盘，用来引导mac镜像<br>硬盘安装助手：制作镜像盘，用来将mac镜像写入U盘，使U盘成为安装盘<br>Mac Drive：windows下读写HFS分区，用于修改镜像盘。<br>HFSExploer：也是windows下读写HFS分区，用于修改镜像盘。</p>
</blockquote>
<p>2、修改镜像  </p>
<blockquote>
<p>NullCPUPowerManagement.kext  关闭ACPI电源管理的驱动<br>AppleACPIPS2Nub.kext                用于支持PS2的鼠标键盘<br>ApplePS2Controller.kext               用于支持PS2的鼠标键盘<br>FakeSMC.kext（2.5版）<br>-——<br>myfix：用于修复文件权限<br>-————–<br>安装过程要增删kext，在win下操作的话win下的读写工具就用上了。  </p>
</blockquote>
<p>3、第一次进系统  </p>
<blockquote>
<p>Chameleon_2.2svn_r2187_trunk.pkg 变色龙引导工具，使硬盘自己引导启动<br>把/E/E下的kext拷到/S/L/E下  </p>
</blockquote>
<p>4、安装驱动工具  </p>
<blockquote>
<p>一般工具  </p>
<blockquote>
<p>MultiBeast ：一些工具和驱动集合<br>System Info.app 检查系统驱动了那些硬件，加载了那些kext<br>ShowAllFiles.app：查看隐藏文件<br>Chameleon Wizard ：创建org.apple.Boot.plist、SMBIOS等  </p>
</blockquote>
<p>Kext工具  </p>
<blockquote>
<p>Kext Wizard ：安装kext驱动工具<br>ATI Tools ：导出端口参数的工具<br>HexEdit ：修改端口参数的工具<br>PlistEditPro：修改plist文件的工具  </p>
</blockquote>
<p>DSDT相关工具  </p>
<blockquote>
<p>aida64extreme：导出主板和gpu的SMBIOS工具<br>IORegistryExplorer：查看系统加载的kext工具<br>DSDTFixer.app ：修复原始aml文件  </p>
</blockquote>
<blockquote>
<p>DSDT_Editor：编辑、修复、导出DSDT.AML工具<br>iDSDT：添加显卡、声卡信息到aml文件。(亦可手动添加)  </p>
</blockquote>
</blockquote>
<p>5、查看日志  </p>
<blockquote>
<p>bdmesg：查看变色龙的运行日志<br>Chameleon Wizard：也内置了bdmesg，也可以很方便的查看<br>dmesg：查看mac启动记录<br>控制台：点kernel.log</p>
</blockquote>
<p>KEXT说明<br>-——————  </p>
<blockquote>
<p>FakeSMC.kext：                              黑苹果必要kext，模拟苹果设备<br>NullCPUPowerManagement.kext     禁用电源管理的kext<br>AppleACPIPS2Nub.kext                   PS2键盘鼠标驱动<br>ApplePS2Controller.kext                   PS2键盘鼠标驱动<br>-—————————<br>AppleIntelPIIXATA.kext　　　Intel免AHCI专用kext<br>AppleATIATA.kext　　　　　AMD芯片组专用kext(2009.12.30)<br>AppleATIPATA.kext　　　　  AMD芯片组专用kext<br>AppleNForceATA.kext　　　 NForce芯片组专用kext<br>AppleVIAATA.kext　　　　　VIA芯片组专用kext<br>JMicronATA.kext　　　　　  JMicron芯片组专用kext<br>AppleVIAATA.kext.for.sis　　SIS芯片组专用kext<br>-————————–<br>ElliottForceLegacyRTC.kext或者LegacyAppleRTC.kext   防止主板BIOS的CMOS重置（2选1，不可共用）<br>OpenHaltRestart.kext或者EvOreboot.kext              解决重启/关机时遇到无法断电问题（2选1，不可共用）<br>PlatformUUID.kext　　　　　解决Unable to determine UUID for host. Error : 35的问题<br>AppleACPIPlatform.kext         据说能解决：DSMOS has arrived错误<br>待续。。。。  </p>
</blockquote>
<p>推荐网站  </p>
<blockquote>
<p><a href="http://www.osx86.net/">http://www.osx86.net/</a>  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>4、制作U盘引导盘、镜像盘</title>
    <url>/posts/185197236/</url>
    <content><![CDATA[<p>-——————————————————————————————–<br>说明：以下都是windows下制作。我用了2个U盘，一个做引导，一个做镜像<br>-——————————————————————————————–<br><strong>一：制作U盘引导盘</strong>  </p>
<blockquote>
<p>0、格式化U盘为FAT32<br>1、启动bootice.EXE<br>2、点选第二个按钮：应该是主引导记录  </p>
<p><img src="http://img1.ph.126.net/endDUBAcyw6iFCptzr1SGg==/6597721777052643871.png" alt="制作U盘引导盘 - leaf - ------坚持雅操------" title="4、制作U盘引导盘、镜像盘 - leaf - ------坚持雅操------"></p>
<p> <br>3、选择GRUB4DOS，然后点安装/配置  </p>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/o8snrXk8Hsdw4KOCfO1RdQ==/6598105506610529377.png" alt="制作U盘引导盘 - leaf - ------坚持雅操------" title="4、制作U盘引导盘、镜像盘 - leaf - ------坚持雅操------"></p>
</blockquote>
<blockquote>
<p>4、写入磁盘  </p>
<p><img src="http://img1.ph.126.net/7rLPXIoM2PKieVAGW_2DFA==/6597712980959617657.png" alt="制作U盘引导盘 - leaf - ------坚持雅操------" title="4、制作U盘引导盘、镜像盘 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>   </p>
<blockquote>
<p>5、复制文件到U盘即可  </p>
<p><img src="http://img1.ph.126.net/KkcYUKqPdVBI7wjyLs1qUQ==/6598270433354694421.png" alt="制作U盘引导盘 - leaf - ------坚持雅操------" title="4、制作U盘引导盘、镜像盘 - leaf - ------坚持雅操------"></p>
</blockquote>
<blockquote>
<p> 6、更新<br>如出了最新版，可将iso文件复制进U盘替换掉即可  </p>
</blockquote>
<p><strong>二：制作镜像盘</strong>  </p>
<blockquote>
<p>1、U盘格式化为exfat格式<br>2、选择镜像文件，选择U盘，取消下面的3个勾，然后点开始即可<br><img src="http://img0.ph.126.net/8TED0RQh7T_pLQm31SNF8g==/6597970266680595363.jpg" alt="2、制作U盘引导盘、镜像盘 - leaf - ------坚持雅操------" title="4、制作U盘引导盘、镜像盘 - leaf - ------坚持雅操------">  </p>
</blockquote>
<blockquote>
<p>注意：如果不能写入，可以不格式化U盘，只分配盘符。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>5、系统安装记录</title>
    <url>/posts/3260580697/</url>
    <content><![CDATA[<p>1、制作安装盘  </p>
<p>2、修改安装盘  </p>
<blockquote>
<p>镜像盘制作好之后，我们直接把安装会碰到的问题提前解决掉(win下操作)  </p>
<blockquote>
<p>一、根目录下建文件夹/Extra/Extensions，放入以下驱动：  </p>
<blockquote>
<p>FakeSMC.kext，一定要2.5版本。系统运行正常后，可再换新版本以获得其他功能<br>NullCPUPowerManagement.kext<br>AppleACPIPS2Nub.kext<br>ApplePS2Controller.kext<br>/usr/sbin/myfix        用于修复权限  </p>
</blockquote>
</blockquote>
<blockquote>
<p>二：移出/System/Library/Extensions/目录下的文件：  </p>
<blockquote>
<p>AppleIntelCPUPowerManagementClient.kext<br>AppleIntelCPUPowerManagement.kext<br>IOBluetoothFamily.kext<br>IOBluetoothHIDDriver.kext<br>备注：其实有些主板是支持原声ACPI驱动的  </p>
<blockquote>
<p>  移出是为了防止进不了安装界面  </p>
</blockquote>
</blockquote>
<p>三、可选  </p>
<blockquote>
<p>删除S/L/E/AppleGraphicsControl.kext/Contents/PlugIns/ApplePolicyControl.kext  </p>
</blockquote>
<blockquote>
<p>删除/System/Library/Coreservices/PlatformSupport.plist<br>删除S/L/E/AppleHDA.kext  </p>
</blockquote>
</blockquote>
</blockquote>
<p>3、安装  </p>
<blockquote>
<p>安装应该不会出现什么问题，如出现白屏也不要马上重启，只要硬盘闪着红灯都是在安装的<br>安装完成后，终端下将/E/E下面的kext放入/S/L/E下面  </p>
</blockquote>
<p>4、重启  </p>
<blockquote>
<p>用U盘引导进入，进入的时候也许会出现五国<br>参考远景的五国解决：<a href="http://bbs.pcbeta.com/viewthread-863656-1-1.html">http://bbs.pcbeta.com/viewthread-863656-1-1.html</a>  </p>
</blockquote>
<p>5、第一次进系统  </p>
<blockquote>
<p>1、把/Extra/Extensions下面的kext都复制到/S/L/E下面去<br>2、安装变色龙引导<br>备注：DSMOS has arrived是正常的，正常启动都有这句，一般到这句就快进桌面了。  </p>
</blockquote>
<p>6、重启，使用参数-v-x  -f  进入   (选择盘符界面直接输入即可)  </p>
<blockquote>
<p>如遇到五国，参考远景的五国解决<br>参数说明：  </p>
<blockquote>
<p>-v：Verbose模式，即调试模式。该模式显示所有启动日志，用于查找错误。<br>-x：安全模式，加载全部kext以解决兼容性问题。<br>-s：单用户模式<br>-f ：启动时修复磁盘，一般在更换过kext后第一次重启时使用。  </p>
</blockquote>
<p>备注：  </p>
<blockquote>
<p>变色龙选择启动盘的时候直接输入即可  </p>
</blockquote>
</blockquote>
<p>7、驱动的安装  </p>
<blockquote>
<p>1、网卡驱动：一般论坛会提供pkg文件，安装上即可</p>
</blockquote>
<blockquote>
<p>2、声卡驱动：使用MultiBeast把声卡驱动安装上，也可以使用万能声卡<br>3、显卡驱动：  </p>
<blockquote>
<p>修改kext，并用kext wizard安装和修复权限。<br>创建DSDT.aml (可选)  </p>
</blockquote>
<p>4、完善驱动功能<br>备注：  </p>
<blockquote>
<p>mac驱动是被动加载，识别了会自动添加驱动，不识别就安装不了。  </p>
</blockquote>
</blockquote>
<p>8、添加其他功能</p>
<blockquote>
<p>新版FakeSMC：可以自动降频，检测风扇转速，温度等。<br>添加SSDT.aml：节能有关。<br>完善DSDT.aml文件。<br>创建org.apple.Boot.plist、SMBIOS：用Chameleon Wizard添加。</p>
</blockquote>
<p>效果图如下：<img src="http://img0.ph.126.net/sIfZQDOR10BlGEZpyJHAFQ==/6598234149471041607.jpg" alt="3、黑苹果安装记录 - leaf - ------坚持雅操------" title="5、系统安装记录 - leaf - ------坚持雅操------"></p>
<p><img src="http://img0.ph.126.net/NarArQbQtjLg3DNoK5n2VQ==/6598285826517552612.jpg" alt="3、黑苹果安装记录 - leaf - ------坚持雅操------" title="5、系统安装记录 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>60种生活小窍门，分享</title>
    <url>/posts/3696908557/</url>
    <content><![CDATA[<p>1.吃了辣的东西，感觉就要被辣死了，就往嘴里放上少许盐，含一下，吐掉，漱下口，就不辣了；<br>2.牙齿黄，可以把花生嚼碎后含在嘴里，并刷牙三分钟，很有效；<br>3.若有小面积皮肤损伤或者烧伤、烫伤，抹上少许牙膏，可立即止血止痛；<br>4.经常装茶的杯子里面留下难看的茶渍，用牙膏洗之，非常干净；<br>5.仰头点眼药水时微微张嘴，这样眼睛就不会乱眨了；<br>6.嘴里有溃疡，就用维生素C贴在溃疡处，等它溶化后溃疡基本就好了；<br>7.眼睛进了小灰尘，闭上眼睛用力咳嗽几下，灰尘就会自己出来；<br>8.洗完脸后，用手指沾些细盐在鼻头两侧轻轻按摩，然后再用清水冲洗，黑头和粉刺就会清除干净，毛细孔也会变小；<br>9.刚刚被蚊子咬完时，涂上肥皂就不会痒了；<br>10.如果嗓子、牙龈发炎了，在晚上把西瓜切成小块，沾着盐吃，记得一定要是晚上，当时症状就会减轻，第二天就好了；<br>11.吹风机对着标签吹，等吹到商标的胶热了，就可以很容易的把标签撕下来；<br>12.旅行带衣服时如果怕压起褶皱，可以把每件衣服都卷成卷；<br>13.打打嗝时就喝点醋，立杆见影；<br>14.吃了有异味的东西，如大蒜、臭豆腐，吃几颗花生米就好了；<br>15.治疗咳嗽，特别是干咳，晚上睡觉前，用纯芝麻香油煎鸡蛋，油放稍多些，什么调味料都不要放，趁热吃过就去睡觉，连吃几天效果很明显；<br>16.手腕长粗的MM想带较细的手镯，就不能硬带，应把手上套上一个塑料袋再带上手镯，非常好带，也不会把手弄疼，取下也是同样的方法；<br>17.栗子皮难剥，先把外壳剥掉，再把它放进微波炉转一下，拿出后趁热一搓，皮就掉了；<br>18.插花时，在水里滴上一滴洗洁精，可以维持好几天；<br>19.把核桃放进锅里蒸十分钟，取出放在凉水里再砸开，就能取出完整的桃核仁了；<br>20.把虾仁放进碗里，加一点精盐、食用碱粉，用手抓搓一会儿后用清水浸泡，然后再用清水冲洗，即能使炒出的虾仁透明如水晶，爽嫩可口；<br>21.炒肉时，先把肉用小苏打水浸泡十几分钟，倒掉水，再入味，炒出来会很嫩滑；<br>22.将残茶叶浸入水中数天后，浇在植物根部，可促进植物生长；<br>23.把残茶叶晒干，放到厕所或者沟渠里燃熏，可消除恶臭，具有驱除蚊子苍蝇的功能；<br>24.夹生饭重煮法：可用筷子在饭内扎些直通锅底的孔，洒入少许黄酒重焖，<br>25.若只表面夹生，只要将表层翻到中间再焖即可；<br>26.巧除纱窗油腻：将洗衣粉、吸烟剩下的烟头一起放在水里，待溶解后，拿来擦玻璃窗、纱窗，效果真不错；<br>27.只要在珠宝盒中放上一节小小的粉笔，即可让首饰常保光泽；<br>28.桌子、瓶子表面的不干胶痕迹用风油精可以擦拭；<br>29.出门时随时在包里带一节小的干电池，若裙子带静电，就把电池的正极在裙子上面擦几下即可去掉静电；<br>30.不管是鞋子的哪个地方磨到了你的脚，你就在鞋子磨脚的地方涂一点点白酒，保证就不磨脚了；<br>31.亨调蔬菜时，如果必须要焯，焯好菜的水最好尽量利用。如做水饺的菜，焯好的水可适量放在肉馅里，这样既保证营养，又使水饺馅味美有汤；<br>32.夏天足部容易出汗，每天用淡盐水泡脚可有效应对汗脚；<br>33.夏天游泳后晒晒太阳，可防肌肤劳损等疾病发生；<br>34.夏天枕头易受潮滋生霉菌，时常曝晒枕芯有利健康；<br>35.多吃薏米小豆粥等潮湿健脾，可防暑湿；<br>36.防失眠：睡前少讲太多话，忌饮浓茶，睡前勿大用脑，可用热水加醋洗脚；<br>37.金银花有疏散风湿功效，金银花水煎取汁凉后与蜂蜜冲调可解暑；<br>38.吃过于肥腻的食物后喝茶，能刺激自律神经，促进脂肪代谢；<br>39.睡眠不足会变笨，一天需要睡眠八小时，有午睡习惯可延缓衰老；<br>40.双手易变得干燥粗糙，用醋泡手十分钟可护肤；<br>41.夏天擦拭凉席，用滴加了花露水的清水擦拭凉席，可使凉席保持清爽洁净。当然，擦拭时最好沿着凉席纹路进行，以便花露水渗透到凉席的纹路缝隙，这样清凉舒适的感觉会更持久；<br>42.早餐多食西红柿、柠檬酸等酸性蔬菜和水果，有益于养肝；<br>43.爽身止痒洗头或洗澡时，在水中加五六滴花露水，能起到很好的清凉除菌、祛痱止痒作用；<br>44.葡萄含有睡眠辅助激素，常食有助睡眠；<br>45.夏天多喝番茄汤既可获得养料，又能补充水分，番茄汤应烧好并冷却后再喝，所含番茄红素有一定的抗前列腺癌和保护心肌的功效，最适合于男子；吃酸性物质马上刷牙会损害牙齿健康；<br>46.因外伤碰破皮肉时，在伤处涂上牙膏进行消炎、止血，再包扎，作为临时急救药，以药物牙膏效果最为显著；<br>47.将白醋喷洒在菜板上，放上半小时后再洗，不但能杀菌，还能除味；<br>48.喝酸奶能解酒后烦躁，酸奶能保护胃黏膜、延缓酒精吸收，并且含钙丰富，对缓解酒后烦躁尤其有效；<br>49.皮鞋包皮放久了发霉时，可用软布蘸酒精加水（1：1）溶液擦拭即可；<br>50.发生头痛、头晕时，可在太阳穴涂上牙膏，因为牙膏含有薄荷脑、丁香油可镇痛；<br>51.蜡烛冷冻二十四小时后，再插到生日蛋糕上，点燃时不会流下烛油；<br>52.白色衣裤洗后易泛黄，可取一盆清水，滴上二三滴蓝墨水，将洗过的衣裤在浸泡一刻钟，不必拧干，就放在太阳下晒，即可洁白干净；<br>53.过多食用生葱蒜会刺激口腔肠胃， 不利健康，最好加一点醋再食用；<br>54.及时补充水分但应少喝果汁、可乐、雪碧、汽水等饮料，含有较多的糖精和电解质，喝多了会对肠胃产生不良刺激，影响消化和食欲。因此夏天应多喝白开水或淡盐（糖）水；<br>55.每天早晨用豆腐摩擦面部几分钟，坚持一个月，面部会变得很滋润；<br>56.空调室内温差不宜超过五度，即使天气再热，空调室内温度也不宜到24度以下；<br>57.加酶洗衣粉剂放在温水中需要较长的分解时间才能使洗衣效果更佳；<br>58.夏天，人的活动时间变长，出汗多，耗能过大，应适当多吃鸡、鸭、瘦肉、鱼类、蛋类等营养食品，以满足人体的代谢需要；<br>59.头痛时把苹果磨成泥状涂在纱布上，贴在头痛处，症状可减轻；<br>60.皮包上有污渍，可以用棉花蘸风油精擦拭。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>64位系统安装32位软件</title>
    <url>/posts/2239015480/</url>
    <content><![CDATA[<p>sudo apt-get install ia32-libs*     （用官方源）  </p>
<p>安装<br>sudo dpkg –force-architecture -i FoxitReader_1.1.0_i386.deb  </p>
<p>卸载<br>sudo dpkg -P FoxitReader  </p>
<p>帮助<br>dpkg –help  </p>
<p>不用多忘光了</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>6、修改KEXT</title>
    <url>/posts/2385987775/</url>
    <content><![CDATA[<p>驱动ATI显卡的一般步骤  </p>
<blockquote>
<p>1、确认你的显卡ID，可以通过win下的GPU-Z确定  </p>
</blockquote>
<blockquote>
<p>2、添加ID到相关kext里的Info.plist里面<br>3、提取rom修改你的接口信息<br>4、修改ATIx000Contrller.kext&gt;Contents&gt;MacOS&gt; ATIx000Contrller文件 (解决输出问题)<br>5、加载你修改的FB</p>
</blockquote>
<blockquote>
</blockquote>
<p>第2步说明：  </p>
<blockquote>
<p>ATI显卡必备驱动<br>　　ATI4600Controller.kext （加入ID）<br>　　ATIFramebuffer.kext<br>　　ATISupport.kext<br>　　ATIRadeonX2000.kext （确认有ID）<br>　　ATIRadeonX2000GA.plugin<br>　　ATIRadeonX2000GLDriver.bundle<br>　　ATIRadeonX2000VADriver.bundle  </p>
</blockquote>
<blockquote>
<p>参考：<br><a href="http://bbs.pcbeta.com/viewthread-1017396-1-1.html">Thinkpad E40 ML 完善过程分享</a><br><a href="http://bbs.pcbeta.com/viewthread-1196057-1-1.html">ThinkPad E40黑苹果折腾大结局</a>  </p>
</blockquote>
<blockquote>
</blockquote>
<p>第4步说明：  </p>
<blockquote>
<p>各接口代码前端：  </p>
</blockquote>
<blockquote>
<blockquote>
<p>LVDS：02 00 00 00 40 00 00 00 09 01 00 00<br>HDMI：00 08 00 00 04 02 00 00 00 71 00 00<br>VGA： 10 00 00 00 10 00 00 00 00 01 00 00<br>DVI：   04 00 00 00 14 02 00 00 00 01 00 00<br>DP：    00 04 00 00 04 06 00 00 00 71 00 00  </p>
</blockquote>
<p>后端：  </p>
<blockquote>
<p>txmit enc hotplugin senseid 还有8位  </p>
</blockquote>
</blockquote>
<blockquote>
<p>代码生成器：  </p>
<blockquote>
<p>BuildFramebuffer.app  </p>
</blockquote>
<p>参考：  </p>
</blockquote>
<blockquote>
<p><a href="http://bbs.pcbeta.com/viewthread-1060313-1-1.html">ATI 5系和6系显卡驱动&amp;修改FB探讨</a><br><a href="http://bbs.pcbeta.com/viewthread-991835-1-1.html">从零开始完美玩转苹果ATI驱动+QE/CI+多屏</a> ：这篇讲原理，不懂可以看下面<br><a href="http://bbs.pcbeta.com/viewthread-937823-1-1.html">可以驱动所有ATI 4330</a>  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>7、修改DSDT.aml</title>
    <url>/posts/1528618337/</url>
    <content><![CDATA[<p>-————————————————————————<br>DSDT.aml其实就是BIOS的SMBIOS文件。非SMBIOS.plist<br>-————————————————————————  </p>
<p>一、导出DSDT、rom、SSDT等文件  </p>
<blockquote>
<p><img src="http://img0.ph.126.net/Hkeiwfr8E2D2xJrDqtVT9Q==/6597780051168992133.jpg" alt="7、修改DSDT.aml - leaf - ------坚持雅操------" title="7、修改DSDT.aml - leaf - ------坚持雅操------">  </p>
<p> <img src="http://img0.ph.126.net/tmoDqi_-R75xXbrSFGmAFQ==/6597540357634133052.jpg" alt="7、修改DSDT.aml - leaf - ------坚持雅操------" title="7、修改DSDT.aml - leaf - ------坚持雅操------"><br>1、ACPI tool 可以导出DSDT.bin 和多个SSDT.bin。我们直接把后缀改位aml即可<br>2、video debug可以调出：显卡.rom  </p>
</blockquote>
<p>二、修改DSDT.aml  </p>
<blockquote>
<p>我一般直接用这个软件修复，也可以使用DSDTFixer先修复，再用DSDT_editor修复<br>1、点open打开DSDT.aml文件  </p>
<blockquote>
<p>备注：DSDT_editor也可以直接导出DSDT的原始文件。  </p>
</blockquote>
<p><img src="http://img2.ph.126.net/bReZkoDf67zj1mwdF2AXDA==/6597947176936422335.jpg" alt="7、修改DSDT.aml - leaf - ------坚持雅操------" title="7、修改DSDT.aml - leaf - ------坚持雅操------"></p>
<p> 打开后显示如下：  </p>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/CdLWiuHPi2jp10c3b4S3FA==/6597929584750368650.jpg" alt="7、修改DSDT.aml - leaf - ------坚持雅操------" title="7、修改DSDT.aml - leaf - ------坚持雅操------"></p>
<p>2、 先自动修复,点fixerrors  </p>
<p><img src="http://img0.ph.126.net/qDKCGKFcOn21ltMW0v7mAA==/6597716279494574346.jpg" alt="7、修改DSDT.aml - leaf - ------坚持雅操------" title="7、修改DSDT.aml - leaf - ------坚持雅操------"></p>
<p> 3、我碰到了3种警告  </p>
<blockquote>
<p>1&gt; 把 _T_0  替换为T_0即可<br>2&gt;Possible operator timeout is ignored  </p>
</blockquote>
<blockquote>
<blockquote>
<p>将 Acquire (MUTE, 0x03E8)改为Acquire (MUTE, 0xFFFF)</p>
</blockquote>
</blockquote>
<blockquote>
<p>3&gt;not all control paths return a value (SIOS)  </p>
<blockquote>
<p>最下面的}之前插入一行，添加 Return (Zero)</p>
</blockquote>
</blockquote>
<p>    错误修复参考：<a href="http://roderickvincent.com/post/2012-03-11/40031714899">http://roderickvincent.com/post/2012-03-11/40031714899</a>  </p>
<p>4、打补丁，DSDT_editor里面包含很多补丁了。</p>
<p><img src="http://img2.ph.126.net/kQqqjra1PrQ6IowItxIRIw==/6597538158610877708.jpg" alt="7、修改DSDT.aml - leaf - ------坚持雅操------" title="7、修改DSDT.aml - leaf - ------坚持雅操------"></p>
<p>   </p>
<p>5、手动添加修改信息<br>通过IORegisryExplorer看接口信息，然后在DSDT_editor里面找到位置进行更改  </p>
<p><img src="http://img1.ph.126.net/9kwWBagc4x_BMCE_AQNNpQ==/6597754762401552568.jpg" alt="7、修改DSDT.aml - leaf - ------坚持雅操------" title="7、修改DSDT.aml - leaf - ------坚持雅操------"></p>
<p>参考：<a href="http://bbs.pcbeta.com/viewthread-1020621-1-1.html">http://bbs.pcbeta.com/viewthread-1020621-1-1.html</a>  </p>
<p>6、导出aml文件即完成DSDT.aml  </p>
</blockquote>
<p>三、添加显卡信息、声卡信息  </p>
<blockquote>
<p>用iDSDT导入DSDT.aml 和显卡.rom文件，声卡coder信息<br>iDSDT会自动帮我们导出aml文件。  </p>
<p><img src="http://img1.ph.126.net/AdfJVcEiujL8f2M1158a2Q==/6597292967517383413.jpg" alt="7、修改DSDT.aml - leaf - ------坚持雅操------" title="7、修改DSDT.aml - leaf - ------坚持雅操------"></p>
<p>注意：iDSDT导出来的文件是放在桌面上的，若名字相同导出来的aml文件就没用了  </p>
<p>推荐：<br><a href="http://bbs.pcbeta.com/viewthread.php?tid=832974">http://bbs.pcbeta.com/viewthread.php?tid=832974</a><br><a href="http://bbs.pcbeta.com/viewthread-826965-1-1.html">http://bbs.pcbeta.com/viewthread-826965-1-1.html</a>  </p>
</blockquote>
<p>四、修改SSDT.aml  </p>
<blockquote>
<p>用DSDT_editor文件修复好即可。导出aml文件  </p>
</blockquote>
<p>五、将这些文件放入/Extra文件夹下，配置变色龙添加文件地址即可。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>8、修改FakeSMC</title>
    <url>/posts/1736323804/</url>
    <content><![CDATA[<p>FakeSMC文件设置的机型必须与smbios.plist相对应  </p>
<p><img src="http://img1.ph.126.net/F37VbXMBZhbqtXX_AOEqSw==/6598098909540862129.png" alt="8、修改FakeSMC - leaf - ------坚持雅操------" title="8、修改FakeSMC - leaf - ------坚持雅操------"></p>
<p> <br>REV值设定：<br>        MacPro3,1                1.25f4        ASUPAAAE<br>        MacPro4,1                1.39f5        ATkPAAAF<br>        MacPro5,1                1.39f11        ATkPAAAR<br>        iMac8,1                1.30f1        ATAPAAAB<br>        iMac9,1                1.45f0        AUUPAAAA<br>        iMac10,1                1.53f13        AVMPAAAT<br>        iMac11,1                1.54f36        AVQPAAA2<br>        iMac12,1                1.72f5        AXIPAAAF   <br>        MacBookPro5,1        1.33f8        ATMPAAAI<br>        MacBookPro5,1        1.33f8        ATMPAAAI<br>        MacBookPro6,1        1.58f16        AVgPAAAW<br>        MacBookPro7,1        1.62f6        AWIPAAAG<br>        MacBookPro8,1        1.68f96        AWgPAACW  </p>
<p>smc-compatible值设定：<br>        MacPro3,1                smc-napa<br>        MacPro4,1                smc-thurley<br>        MacPro5,1                smc-thurley<br>        iMac9,1                smc-napa<br>        iMac10,1                smc-mcp<br>        iMac11,1                smc-piketon<br>        iMac12,1                smc-huronriver   <br>        MacBookPro5,1        smc-mcp<br>        MacBookPro5,5        smc-mcp<br>        MacBookPro6,1        smc-piketon<br>        MacBookPro7,1        smc-mcp<br>        MacBookPro8,1        smc-huronriver  </p>
<p>tjmax值设定：  </p>
<blockquote>
<p>通过aida64extreme查看，CPU最高工作温度  </p>
</blockquote>
<p>参考：  </p>
<blockquote>
<p><a href="http://bbs.pcbeta.com/viewthread-799385-1-1.html">http://bbs.pcbeta.com/viewthread-799385-1-1.html</a><br><a href="http://bbs.pcbeta.com/viewthread-973896-1-1.html">http://bbs.pcbeta.com/viewthread-973896-1-1.html</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ACL设置单IP访问网段</title>
    <url>/posts/884278273/</url>
    <content><![CDATA[<p>acl 3005</p>
<p>rule permit ip source 10.1.11.0 0.0.0.255 destination 10.1.21.0 0.0.0.255</p>
<p>rule permit ip source 10.1.11.0 0.0.0.255 destination 10.1.22.0 0.0.0.255</p>
<p>rule permit ip source 10.1.11.0 0.0.0.255 destination 10.1.31.0 0.0.0.15</p>
<p>rule permit ip source 10.1.11.0 0.0.0.255 destination 10.1.32.0 0.0.0.15</p>
<p>rule permit ip source 10.1.11.0 0.0.0.255 destination 10.1.252.0 0.0.0.63</p>
<p>acl 3006</p>
<p>rule permit ip source 10.1.11.21 0 destination 10.1.21.0 0.0.0.255</p>
<p>rule permit ip source 10.1.11.21 0 destination 10.1.22.0 0.0.0.255</p>
<p>rule permit ip source 10.1.11.21 0 destination 10.1.31.0 0.0.0.15</p>
<p>rule permit ip source 10.1.11.21 0 destination 10.1.32.0 0.0.0.15</p>
<p>rule permit ip source 10.1.11.21 0 destination 10.1.252.0 0.0.0.63</p>
<p>traffic classifier vlan11c1 </p>
<p>if-match acl 3005</p>
<p>traffic classifier vlan11c2 </p>
<p>if-match acl 3006</p>
<p>traffic behavior vlan11b1</p>
<p>deny</p>
<p>traffic behavior vlan11b2</p>
<p>permit</p>
<p>traffic policy vlan11p1</p>
<p>classifier vlan11c2 behavior vlan11b2</p>
<p>classifier vlan11c1 behavior vlan11b1</p>
<p>vlan 11</p>
<p>traffic-policy vlan11p1 inbound</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ACL设置网段不能互访</title>
    <url>/posts/760246906/</url>
    <content><![CDATA[<p>vlan21</p>
<p>acl name acl-vlan21 3010</p>
<p>rule deny ip source 10.1.21.0 0.0.0.255 destination 10.1.22.0 0.0.0.255</p>
<p>rule deny ip source 10.1.21.0 0.0.0.255 destination 10.1.31.0 0.0.0.15</p>
<p>rule deny ip source 10.1.21.0 0.0.0.255 destination 10.1.32.0 0.0.0.15</p>
<p>rule deny ip source 10.1.21.0 0.0.0.255 destination 10.1.252.0 0.0.0.63</p>
<p>traffic-filter vlan 21 inbound acl name acl-vlan21</p>
<p>vlan22</p>
<p>acl name acl-vlan22 3015</p>
<p>rule deny ip source 10.1.22.0 0.0.0.255 destination 192.168.1.0 0.0.0.255</p>
<p>rule deny ip source 10.1.22.0 0.0.0.255 destination 10.1.31.0   0.0.0.15</p>
<p>rule deny ip source 10.1.22.0 0.0.0.255 destination 10.1.32.0   0.0.0.15</p>
<p>rule deny ip source 10.1.22.0 0.0.0.255 destination 10.1.128.0  0.0.0.63</p>
<p>rule deny ip source 10.1.22.0 0.0.0.255 destination 10.1.252.0  0.0.0.63</p>
<p>traffic-filter vlan 22 inbound acl name acl-vlan22</p>
<p>vlan31</p>
<p>acl name acl-vlan31 3020</p>
<p>rule deny ip source 10.1.31.0 0.0.0.15 destination 10.1.32.0   0.0.0.15</p>
<p>rule deny ip source 10.1.31.0 0.0.0.15 destination 10.1.128.0  0.0.0.63</p>
<p>rule deny ip source 10.1.31.0 0.0.0.15 destination 10.1.252.0  0.0.0.63</p>
<p>traffic-filter vlan 31 inbound acl name acl-vlan31</p>
<p>vlan32</p>
<p>acl name acl-vlan32 3025</p>
<p>rule deny ip source 10.1.32.0 0.0.0.15 destination 10.1.128.0  0.0.0.63</p>
<p>rule deny ip source 10.1.32.0 0.0.0.15 destination 10.1.252.0  0.0.0.63</p>
<p>traffic-filter vlan 32 inbound acl name acl-vlan32</p>
<p>vlan128</p>
<p>acl name acl-vlan128 3030</p>
<p>rule deny ip source 10.1.128.0 0.0.0.63 destination 10.1.252.0  0.0.0.63</p>
<p>traffic-filter vlan 128 inbound acl name acl-vlan128</p>
<p>vlan252</p>
<p>无</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ati显卡笔记本接投影只能显示在一个显示屏上</title>
    <url>/posts/67430707/</url>
    <content><![CDATA[<p>公司的是富士通的笔记本，用的是ati的显卡，投影的时候只能显示在投影或者笔记本显示屏上。<br>搜索了以下终于搞定了  </p>
<p>右击桌面-点属性-设置-高级-显卡的控制面板页面-(以ati为例)ati catalyst control center-<br>显示器管理器-在“桌面和显示器设置“里面把“投影仪的显示器“拖上去然后设置“复制画面”即可</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>BLFS-1:补充软件</title>
    <url>/posts/768145412/</url>
    <content><![CDATA[<p>没有wget，下载很不方便，没有openssh，所有代码都要自己输很不方便，所以安装<br>1、wget  </p>
<blockquote>
<p>cd /root/sources<br>ftp ftp.gnu.org  </p>
<blockquote>
<p>用户名：anonymous  </p>
</blockquote>
<blockquote>
<p>cd gnu<br>cd wget<br>get wget-1.11.1.tar.bz2  </p>
</blockquote>
<p>bye<br>cd ../build<br>tar -xvf ../sources/wget-1.11.1.tar.bz2<br>cd wget-1.11.1  </p>
<blockquote>
<p>./configure –prefix=/usr –sysconfdir=/etc<br>make &amp;&amp; make install  </p>
</blockquote>
<p>cd ..  </p>
</blockquote>
<p>2、gdbm  </p>
<blockquote>
<p>按孙海勇的书装了这个。  </p>
</blockquote>
<blockquote>
<p>wget <a href="ftp://ftp.gnu.org/gnu/gdbm/gdbm-1.8.3.tar.gz">ftp://ftp.gnu.org/gnu/gdbm/gdbm-1.8.3.tar.gz</a><br>vi /etc/passwd  </p>
<blockquote>
<p>bin:x:2:2:bin:/bin:/bin/sh  </p>
</blockquote>
<p>./configure –prefix=/usr<br>make &amp;&amp; make install<br>make install-compat  </p>
</blockquote>
<p>3、openssl  </p>
<blockquote>
<p>wget <a href="http://www.openssl.org/source/openssl-0.9.8l.tar.gz">http://www.openssl.org/source/openssl-0.9.8l.tar.gz</a><br>wget <a href="http://www.linuxfromscratch.org/patches/downloads/openssl/openssl-0.9.8l-fix/_manpages-1.patch">http://www.linuxfromscratch.org/patches/downloads/openssl/openssl-0.9.8l-fix\_manpages-1.patch</a>  </p>
</blockquote>
<blockquote>
<p>./config –prefix=/usr \  </p>
<blockquote>
<p>--openssldir=/etc/ssl shared zlib-dynamic  </p>
</blockquote>
<p>make<br>make test<br>make MANDIR=/usr/share/man install<br>install -v -d -m755 /usr/share/doc/openssl-0.9.8l<br>cp -v -r doc/{HOWTO,README,*.{txt,html,gif}} /usr/share/doc/openssl-0.9.8l  </p>
</blockquote>
<p>4、openssh  </p>
<blockquote>
<p>安装<br>openssh需要openssl和  </p>
</blockquote>
<blockquote>
<p>wget <a href="http://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-5.3p1.tar.gz">http://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-5.3p1.tar.gz</a>    #要大写<br>install -v -m700 -d /var/lib/sshd<br>chown -v root:sys /var/lib/sshd<br>groupadd -g 50 sshd<br>useradd -c ‘sshd PrivSep’ -d /var/lib/sshd -g sshd \  </p>
<blockquote>
<p>-s /bin/false -u 50 sshd  </p>
</blockquote>
<p>sed -i.orig ‘s@-lcrypto@/usr/lib/libcrypto.a -ldl@’ configure<br>./configure –prefix=/usr –sysconfdir=/etc/ssh \  </p>
<blockquote>
<p>--datadir=/usr/share/sshd \<br>--libexecdir=/usr/lib/openssh –with-md5-passwords \<br>--with-privsep-path=/var/lib/sshd  </p>
</blockquote>
<p>make<br>make install<br>install -v -m755 -d /usr/share/doc/openssh-5.3p1<br>install -v -m644 INSTALL LICENCE OVERVIEW README* WARNING.RNG /usr/share/doc/openssh-5.3p1<br>配置<br>从livedcd里面拷过来就好了<br>从livedcd启动，位置：/etc/rc.d/init.d/sshd<br>添加系统启动自启动<br>cd /etc/rc.d/init.d &amp;&amp;<br>ln -sf ../init.d/sshd ../rc0.d/K30sshd &amp;&amp;<br>ln -sf ../init.d/sshd ../rc1.d/K30sshd &amp;&amp;<br>ln -sf ../init.d/sshd ../rc2.d/K30sshd &amp;&amp;<br>ln -sf ../init.d/sshd ../rc3.d/S30sshd &amp;&amp;<br>ln -sf ../init.d/sshd ../rc4.d/S30sshd &amp;&amp;<br>ln -sf ../init.d/sshd ../rc5.d/S30sshd &amp;&amp;<br>ln -sf ../init.d/sshd ../rc6.d/K30sshd  </p>
</blockquote>
<p><img src="http://img9.ph.126.net/3LjXwKiwwVW1LWjdc4IFZg==/1647754513681411459.jpg" alt="BLFS-1:安装wget、ssh等软件 - leaf - ------坚持雅操------" title="BLFS-1:安装wget、ssh等软件 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>buffalo nas 安装kms服务器</title>
    <url>/posts/942033720/</url>
    <content><![CDATA[<p>buffalo必须先root</p>
<p>下载vlmcsd</p>
<blockquote>
<p>vlmcsd-svn796-2015-07-18-Hotbird64.7z</p>
</blockquote>
<blockquote>
<p><a href="http://rgho.st/8jnLk5tst">http://rgho.st/8jnLk5tst</a></p>
</blockquote>
<p>使用的是arm5el-glibc</p>
<p>vlmcsd-svn796-2015-07-18-Hotbird64\binaries\Linux\arm\little-endian\glibc\vlmcs-armv5el-glibc</p>
<p>我放的目录是/usr/local/vlmcsd下</p>
<p>ssh进去 ./vlmcsd 即可</p>
<p>备注：1688端口不能被占用</p>
<p>开机启动</p>
<p>echo ‘/usr/local/vlmcsd/vlmcsd -l /var/log/vlmcsd.log &gt; /dev/null 2&gt;&amp;1 ‘ &gt;/etc/init.d/vlmcsd.sh</p>
<p>chmod 755 /etc/init.d/vlmcsd.sh</p>
<p>ln -s /etc/init.d/vlmcsd.sh  /etc/rc.d/sysinit.d/S99vlmcsd.sh </p>
<p>chmod 777 /etc/rc.d/sysinit.d/S99vlmcsd.sh</p>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>buffalo nas 设置web服务器</title>
    <url>/posts/298306700/</url>
    <content><![CDATA[<p>1、新建文件夹：</p>
<p>ph/leaf</p>
<p>ph/data</p>
<p>2、进管理界面开启web和mysql服务，并选择相关文件夹</p>
<p>web 选ph/leaf ，端口设置8080</p>
<p>mysql 选ph/data</p>
<p>这时：</p>
<p>ph/leaf下多出htdocs文件夹</p>
<p>ph/data下多出相关文件</p>
<p>3、点打开phpmyadmin，账号：admin 密码 password 进入</p>
<p>添加数据库：leaf</p>
<p>添加管理该数据库的账号密码</p>
<p>4、下载wordpress，解压放入 ph/leaf/htdocs/ 下</p>
<p>5、浏览器打开 192.168.3.6：8080/wp-admin/install.php 配置一下即可</p>
<p>搞定</p>
<p><img src="http://img2.ph.126.net/-_hee80LfIuYEbJKKWuRHA==/57139420372759511.png" alt="buffalo nas 设置web服务器 - leaf - ------坚持雅操------" title="buffalo nas 设置web服务器 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>buffalo 安装xware</title>
    <url>/posts/796663220/</url>
    <content><![CDATA[<p>首先必须已root</p>
<p>安装过程</p>
<p>1、查buffalo cpu架构_指令集_c库类型</p>
<blockquote>
<p>我的是 arm_v5tel(v5l)_glibc</p>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/uKY8dKq7LBVr4tyOOAbEjw==/6630390466535784962.png" alt="buffalo 安装xware - leaf - ------坚持雅操------" title="buffalo 安装xware - leaf - ------坚持雅操------"></p>
</blockquote>
<p>2、去迅雷下载相应的软件  </p>
<blockquote>
<p>我的是Xware1.0.31_armel_v5te_glibc.zip </p>
</blockquote>
<blockquote>
<p><a href="http://luyou.xunlei.com/thread-12545-1-1.html?%5C_t=1421842121">http://luyou.xunlei.com/thread-12545-1-1.html?\_t=1421842121</a></p>
</blockquote>
<p>3、安装</p>
<blockquote>
<p>我放在/opt下面</p>
<p>先解压，</p>
<p>然后运行目录下的portal文件，</p>
<p>把运行后得到的激活码输入到迅雷远程下载里面</p>
<p>设置一下下载目录即可</p>
</blockquote>
<p>4、随系统自启动</p>
<blockquote>
<p>我这款是linux系统，所以在/etc/init.d里面建一下链接即可</p>
</blockquote>
<blockquote>
<blockquote>
<p>echo ‘/opt/xware/portal’ &gt;/etc/init.d/xunleiyuancheng.sh</p>
</blockquote>
<blockquote>
<p>chmod 755 /etc/init.d/xunleiyuancheng.sh</p>
</blockquote>
<blockquote>
<p>ln -s /etc/init.d/xunleiyuancheng.sh /etc/rc.d/sysinit.d/S99xunleiyuancheng.sh</p>
</blockquote>
<blockquote>
<p>chmod 777 /etc/rc.d/sysinit.d/S99xunleiyuancheng.sh</p>
</blockquote>
</blockquote>
<p><img src="http://img2.ph.126.net/YH452L67KxUXZYl8aqrV0w==/3363907446770522960.png" alt="buffalo 安装xware - leaf - ------坚持雅操------" title="buffalo 安装xware - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA 第一章 网际互连</title>
    <url>/posts/3226235221/</url>
    <content><![CDATA[<p>关于冲突域：全双工也是一个冲突域，只是永远不会有冲突而已。<br>TCP的窗口：是通过计算字节数来量化大小的<br>二层流控和四层流控区别：  </p>
<blockquote>
<p>四层流控是为了保障可靠性做出的流控<br>二层流控是为了避免撑爆缓存而做的流控  </p>
</blockquote>
<p>隧道技术  </p>
<blockquote>
<p>这些都是二层技术，将一种帧封装到其他类型的帧当中，即是隧道技术  </p>
</blockquote>
<p>OSI模型<br>应用层：  </p>
<blockquote>
<p>应用层是指协议而非程序，如ftp协议，http协议等<br>应用层就像一个shell，shell之上的软件都需要shell才能工作，但是哪些软件不是shell  </p>
</blockquote>
<p>表示层：  </p>
<blockquote>
<p>将数据转换为通用格式。  </p>
</blockquote>
<p>会话层：  </p>
<blockquote>
<p>提供通信方式  </p>
</blockquote>
<p>传输层：  </p>
<blockquote>
<p>传输层提供：确认、排序、流量控制  </p>
<blockquote>
<p>流量控制的作用：防止接收主机的缓冲区溢出<br>流量控制的方法：缓冲、窗口机制、拥塞避免。  </p>
</blockquote>
</blockquote>
<blockquote>
<p>TCP/UDP对整个数据段进行校验，所以可以保证数据传之前和到达后的数据是一致的<br>数据是从上往下封装的，所以虽然网络层是不可靠的，但是传到目的地的数据能保证是可靠的  </p>
</blockquote>
<p>网络层：  </p>
<blockquote>
<p>网络层提供的是不可靠的传输，而且不对数据进行校验，所以不能保证数据在IP层的时候没有出错  </p>
<blockquote>
<p>路由器分割广播域是因为路由器丢弃广播包<br>分割广播域的方法：路由器、vlan  </p>
</blockquote>
</blockquote>
<p>数据链路层：  </p>
<blockquote>
<p>提供数据的物理传输，并处理出错通知、网络拓扑、流量控制  </p>
<blockquote>
<p>使用硬件寻址(二层广播:MAC广播)  </p>
</blockquote>
<blockquote>
<p>数据链路层通过ARQ协议实现流量控制  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>LLC的工作就是识别网络层协议，<br>EII已经对网络层协议进行了标记，所以就用不到LLC层  </p>
</blockquote>
<p>桥接是软件实现的，交换是硬件实现的  </p>
</blockquote>
<p>交换机转发速度比路由器快是因为路由器对每个包多要拆帧再封装，而交换机不拆，直接转发  </p>
</blockquote>
<p>物理层：  </p>
<blockquote>
<p>收发比特流，主要是对线路等的要求  </p>
<blockquote>
<p>串扰：电磁干扰</p>
</blockquote>
</blockquote>
<blockquote>
<p>关于MII接口：由于频率跟不上，所以就增加线路来提高传输  </p>
</blockquote>
<blockquote>
<p><a href="http://baike.baidu.com/view/229282.htm#7">MII以4位半字节方式传送数据双向传输，时钟速率25MHz。其工作速率可达100Mb/s</a>  </p>
</blockquote>
<blockquote>
</blockquote>
<p>以太网是对物理层和数据链路层的规范  </p>
<blockquote>
<p>冲突域是发数据之前要发csma/cd进行检测</p>
</blockquote>
<blockquote>
<p>最早是用集线器，要用到CSMA/CD，现在用交换机，一个冲突域就一个主机，用不到CSMA/CD  </p>
</blockquote>
<p>其他摘要  </p>
<blockquote>
<p>度量：metric：用于衡量网络的距离<br>隧道技术：将帧封装到不同类型的帧<br>PDU：就是加在数据前面或后面的报头、报尾</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA第七章</title>
    <url>/posts/4214236176/</url>
    <content><![CDATA[<p>EIGRP  </p>
<blockquote>
<p>能同时提供多种网络层协议的路由选择。<br>EIGRP通过hello包建立邻居关系。  </p>
<blockquote>
<p>邻居关系的三个条件：  </p>
</blockquote>
<blockquote>
<blockquote>
<p>收到hello包或者ack<br>相同的as号<br>相同的度量  </p>
<blockquote>
<p>度量包括：  </p>
<blockquote>
<p>带宽（默认）<br>延迟（默认）<br>负载<br>可靠性<br>MTU尺寸  </p>
</blockquote>
</blockquote>
</blockquote>
<p>建立邻居关系时，会发送整个路由表。之后只发送变化的部分<br>EIGRP通过RTP来传输，RTP是先用组播更新，再和没联系到的用单播更新。16次单播后宣告失效。<br>组播地址：224.0.0.10  </p>
</blockquote>
<p>EIGRP跳数：255<br>EIGRP有3张表：邻居表、拓扑表、路由表<br>EIGRP没有像ospf一样有区域0要求。  </p>
<blockquote>
<p>EIGRP分为内部路由(AD=90)和外部路由(AD=170)  </p>
</blockquote>
<p>EIGRP和RIPv2支持不连续子网的自动汇总，所以默认时图7.1是不通的。  </p>
<blockquote>
<p>因为172.16.10.0/24和172.16.20.0/24多汇总成172.16.0.0/16，所以路由器就把数据发回原路了。  </p>
</blockquote>
<p>EIGRP相关命令  </p>
<blockquote>
<blockquote>
<p>(config)#router eigrp 10<br>(config-router)#network 172.16.0.0<br>(config-router)#network 10.0.0.0  </p>
</blockquote>
</blockquote>
<blockquote>
<p>其他还有  </p>
</blockquote>
<blockquote>
<blockquote>
<p>(config-router)#maximum-paths 6                   最大负载均衡链路支持6条<br>(config-router)#metric maximum-hops 255     最大跳数支持255<br>(config-router)#passive-interface s0/1             不发送或接收路由信息<br>(config-router)#no auto-summary                   不自动汇总  </p>
</blockquote>
<p>再发布命令  </p>
<blockquote>
<p>(config)#router eigrp 10<br>(config-router)#redistribute rip metric 10000000 20000 255 1 1500<br>(config)#router rip<br>(config-router)#redistribute eigrp 10 metric 1  </p>
</blockquote>
<p>验证命令  </p>
<blockquote>
<p>#show ip eitrp neighbors<br>#show ip eitrp topology<br>#show ip route<br>#show ip route eigrp                只显示eigrp项目  </p>
</blockquote>
<p>故障诊断命令  </p>
<blockquote>
<p>debug eigrp packet                  显示hello包数据<br>debug ip eigrp notification        网络变化(出错)时，显示变化的信息  </p>
</blockquote>
<blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>OSPF  </p>
<blockquote>
<p>ospf一定要规定一个主干区域（区域0），然后其他区域必须有一个接口和主干区域链接。  </p>
<blockquote>
<p>ospf只能在代价相同的链路上实现负载均衡，而eigrp可以在不同代价的链路上实现负载均衡<br>路由器最好配置环回接口lo。这样就可以指定DB路由器  </p>
<blockquote>
<p>配置命令：<br>(config)#int loopback 0<br>(config-if)#ip address 172.16.10.1 255.255.255.255    要保证每个路由器的环回接口多是独立网段。  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>邻居和邻接  </p>
<blockquote>
<p>邻居：只要2个路由器有连接，就是邻居关系。  </p>
<blockquote>
<p>  hello包发送地址：224.0.0.5  </p>
</blockquote>
<p>邻接：建立邻居关系后，若发DBD包(用于选DB)，则选好DB后就表明建立了邻接关系。  </p>
<blockquote>
<p>  建立邻接关系后，发LSA(链路状态通告)，交换路由更新数据，共享路由信息。<br>  备注：只有DR和BDR和Dother建立邻接关系，Dother之间不能建链接关系，只能建邻居关系。<br>  参考：<a href="http://www.2cto.com/net/201208/145681.html">OSPF的邻接关系是怎么建立成功的</a><br>            <a href="http://cisco.chinaitlab.com/OSPF/740073.html">OSPF两台路由器之间建立邻接关系过程</a></p>
</blockquote>
</blockquote>
<p>OSPF命令  </p>
<blockquote>
<blockquote>
<p>(config)#router ospf 12         #12只是ospf的标识，跟区域没有关系，随便标多可以<br>(config-router)#network 192.168.10.0    0.0.0.255          area 0  <br>                                                           子网掩码反码      设置区域0  </p>
</blockquote>
<p>在发布命令  </p>
<blockquote>
<p>(config)#router eigrp 10<br>(config-router)#ip summary-address eigrp 10 192.168.10.60 255.255.255.224<br>(config)#router ospf 1<br>(config-router)#area 1 range 192.168.10.64 255.255.255.224  </p>
</blockquote>
</blockquote>
<blockquote>
<p>查看命令  </p>
<blockquote>
<p>show ip ospf                          ospf相关信息<br>show ip ospf interface f0/0    某个接口的ospf信息<br>show ip ospf database          查看路由器各个接口的ID和相邻路由器的ID<br>show ip ospf neighbor           查看邻居和邻接信息，这样DR和BDR也会显示出来  </p>
</blockquote>
<p>调试命令  </p>
<blockquote>
<p>debug ip ospf packet              显示hello包的收发<br>debug ip ospf hello                 显示hello包的收发，比上面的详细<br>debug ip ospf adj                    用于查看选举DR、BDR过程  </p>
</blockquote>
</blockquote>
<blockquote>
<p>DR的选举  </p>
<blockquote>
<p>DR的选举主要看优先级和IP的大小<br>优先级：  </p>
<blockquote>
<p>默认为1，越大就越能当DR，0就只能当Dother<br>(config-if)#ip ospf priority 0  </p>
</blockquote>
<p>IP的大小可以通过lo来设置  </p>
</blockquote>
</blockquote>
</blockquote>
<p>补充及实验：待续</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA第三章 子网</title>
    <url>/posts/2993408280/</url>
    <content><![CDATA[<p>vlsm是为了节省ip地址，达到减少网络流量，有利于汇总的目的<br>支持vlsm的就是无类路由，有类指的是abc类<br>IP寻址除错  </p>
<blockquote>
<p>ping 127.0.0.1 不通  是协议问题<br>ping本机地址不通    是网卡问题  </p>
</blockquote>
<p>子网  </p>
<blockquote>
<p>掩码只能到/30，因为需要1个IP表示网段，1个IP表示广播地址  </p>
<p>/29 知道块地址就好算了  </p>
<blockquote>
<p>主机数量：32-29=3—&gt;2^3=8—&gt;8-2=6<br>子网数量：29-24=5—&gt;2^5=32  或者   256/8=32<br>子网掩码：/29：32-29=3—&gt;2^3=8—&gt;256-8=248<br>反码计算：/29：32-29=3—&gt;2^3=8—&gt;8-1=7  </p>
</blockquote>
</blockquote>
<p>变长子网掩码(VLSM)  </p>
<blockquote>
<p>主要是为了更好的提高网络效率，节省IP资源，用于无类路由协议  </p>
</blockquote>
<p>汇总：用于精简路由表  </p>
<p>IP寻址除错  </p>
<blockquote>
<p>ping 127.0.0.1 不通  是协议问题<br>ping本机地址不通    是网卡问题  </p>
</blockquote>
<p>摘录<br>(config)#ip subnet-zero</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA第二章 TCP/IP简介</title>
    <url>/posts/1805198217/</url>
    <content><![CDATA[<p>TCP标志位：  </p>
<blockquote>
<p>URG 紧急指针，告诉接收<strong>TCP</strong>模块紧要指针域指着紧要数据<br>ACK 置1时表示确认号（1为合法，为0的时候表示数据段不包含确认信息，确认号被忽略。<br>PSH 置1时请求的数据段在接收方得到后就可直接送到应用程序，而不必等到缓冲区满时才传送。<br>RST 置1时重建连接。如果接收到RST位时候，通常发生了某些错误。<br>SYN 置1时用来发起一个连接。<br>FIN 置1时表示发端完成发送任务。用来释放连接，表明发送方已经没有数据发送了。  </p>
</blockquote>
<p>TCP建立连接的3次握手，断开连接的4次握手  </p>
<blockquote>
<p><img src="http://img2.ph.126.net/QNcHRiKnmfp0TzEeZ_gRLg==/6630304704628997765.jpg" alt="CCNA第二章 TCP/IP简介 - leaf - ------勤解万难------" title="CCNA第二章 TCP/IP简介 - leaf - ------勤解万难------">           <img src="http://img0.ph.126.net/P3y0JdiKWn0cXs6lcryJ_g==/6631427306003121585.jpg" alt="CCNA第二章 TCP/IP简介 - leaf - ------勤解万难------" title="CCNA第二章 TCP/IP简介 - leaf - ------勤解万难------">   </p>
</blockquote>
<p>TCP，UDP的校验是对整个数据段的校验。  </p>
<p>虽然三层以下都是不可靠的，但是由于TCP上层就是数据流了，<br>所以TCP层设置了排序，校验，窗口等机制，可保证数据可靠。  </p>
<p>IP层将世界编织成了统一的网。  </p>
<p>二层广播，三层广播<br>二层广播 FF:FF:FF:FF:FF:FF<br>三层广播 255.255.255.255  </p>
<p>DOD模型  </p>
<blockquote>
<p>过程/应用层：Application  </p>
</blockquote>
<blockquote>
<blockquote>
<p>应用层协议，非软件。  </p>
<blockquote>
<p>snmp是通过轮询来获取设备数据：  </p>
<blockquote>
<p>设备正常：接收基线；<br>设备故障：接收陷阱(有陷阱，数据别过来)  </p>
</blockquote>
<p>dhcp：发送2、3层广播  </p>
</blockquote>
</blockquote>
<p>主机到主机层：Host-to-host  </p>
<blockquote>
<p><strong>TCP、UDP数据段格式很重要</strong>  </p>
</blockquote>
<blockquote>
<p>端口号：  </p>
<blockquote>
<p>用于和上层的通信<br>打开多个网页用到端口号，PAT用的也是端口号  </p>
</blockquote>
<blockquote>
<p>0-1023特殊用，1024-65535 自定义<br>TCP：smtp：   25 、http： 80、dns：53<br>UDP：snmp：161、dhcp：67、dns：53  </p>
</blockquote>
</blockquote>
<p>因特网层：Internet  </p>
<blockquote>
<p><strong>IP报头格式很重要</strong><br>协议号：  </p>
<blockquote>
<p>用来确认IP数据包中数据的用途，并将数据提交给该协议使用<br>协议可以定义上层协议和本层协议(网络层协议)  </p>
</blockquote>
<blockquote>
<p>ICMP ：   1<br>TCP：      6<br>UDP：    17<br>IPv6：    41<br>EIGRP：88<br>OSPF： 89<br>STP：  118  </p>
</blockquote>
</blockquote>
<blockquote>
<p>ICMP、ARP、RARP、IP多属于这层<br>ICMP先封装到IP再封装到帧，ARP直接封装到帧  </p>
<blockquote>
<p>ARP发送2层广播<br>ARP：       IP-&gt; MAC<br>RARP：     MAC-&gt;IP<br>代理ARP：解决网关坏了之后的数据发送问题(相当于备用网关)  </p>
</blockquote>
</blockquote>
<p>网络接入层：Network access  </p>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
</blockquote>
<p>DHCP寻址过程  </p>
<blockquote>
<p>客户机发送2层、3层广播<br>由于目的端口：67，路由器将此请求发送到DHCP服务器<br>DHCP服务器发送IP地址给客户机  </p>
<blockquote>
<p>注：DHCP使用udp进行连接  </p>
</blockquote>
</blockquote>
<p>IP地址  </p>
<blockquote>
<p>A类：0<br>B类：10<br>C类：110<br>D类：1110</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA第五章 管理cisco网络</title>
    <url>/posts/3113480854/</url>
    <content><![CDATA[<p>本章主要介绍怎么用cisco  </p>
<p>cisco存储介质  </p>
<blockquote>
<p>ROM：  </p>
<blockquote>
<p>存放POST自检程序 (相当于BIOS)<br>存放bootstrap          (相当于linux的grub，一个启动程序)</p>
</blockquote>
<blockquote>
<p>ROM监控程序，微型IOS(相当于WINPE)  </p>
</blockquote>
<p>NVRAM：  </p>
<blockquote>
<p>16位软件寄存器(相当于设置启动顺序)<br>存放配置文件  </p>
</blockquote>
<p>闪存：  </p>
<blockquote>
<p>保存CISCO IOS (相当于电脑硬盘)  </p>
</blockquote>
<p>RAM：  </p>
<blockquote>
<p>内存(相当于电脑内存)  </p>
</blockquote>
</blockquote>
<p>cisco的启动顺序  </p>
<blockquote>
<p>-&gt;POST自检<br>-&gt;启动bootstrap<br>-&gt;bootstrap调用16位寄存器设置<br>-&gt;bootstrap载入闪存中的IOS/TFTP的IOS/ROM上的微型IOS  </p>
</blockquote>
<blockquote>
<p>-&gt;cisco ios 调用NVRAM上的配置文件  </p>
</blockquote>
<p>CDP cisco发现协议  </p>
<blockquote>
<p>只能看到直连cisco设备<br>绘制拓扑图非常方便<br>不用啥设置，基本上show一下啥都清楚了  </p>
</blockquote>
<p>恢复口令  </p>
<blockquote>
</blockquote>
<p>debug命令  </p>
<blockquote>
<p>检查全面，但是消耗巨大，严重降低性能。<br>#debug all<br>#no debug all  </p>
</blockquote>
<blockquote>
</blockquote>
<p>主要内容：  </p>
<blockquote>
<p>启动过程  </p>
</blockquote>
<blockquote>
<p>恢复口令<br>CDP<br>hosts/DNS名称解析设置  </p>
</blockquote>
<p>1、路由器启动详细过程  </p>
<blockquote>
<p>思科路由器的启动过程和电脑类似<br>首先，开机自检，开机自检程序存在ROM中。  </p>
<blockquote>
<p>ROM存了  |post自检程序  </p>
<blockquote>
<blockquote>
<p>|ROM监控程序<br>|bootstrap，用于加载IOS，IOS相当于linux的内核；bootstrap相当于grub<br>|微型IOS，相当于WINPE  </p>
</blockquote>
</blockquote>
</blockquote>
<p>第二，由bootstrap加载IOS到RAM中  </p>
<blockquote>
<p>IOS存放在flash中，flash相当于硬盘<br>RAM就是内存，这个过程和加载linux内核是一样的  </p>
</blockquote>
<p>第三，加载配置文件  </p>
<blockquote>
<p>加载配置文件就相当于linux中的init程序的操作<br>配置文件存放在NVRAM中，NVRAM中还存放配置寄存器  </p>
<blockquote>
<p>配置寄存器的作用和linux下的inittab差不多<br>inittab可以使linux启动命令行界面或图形界面<br>而配置寄存器可以使IOS加载配置或不加载配置  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>补充：<br>CISCO IFS就是对flash的操作，flash就相当于硬盘  </p>
</blockquote>
<blockquote>
<p>而路由协议啥的就是应用程序  </p>
</blockquote>
<p>2、恢复口令  </p>
<blockquote>
<p>1、开路由器后马上按ctrl+pause|break键，进入ROM监控模式<br>2、设置寄存器&gt;confreg 0x2142<br>3、重启路由器&gt;reset<br>4、修改密码  </p>
<blockquote>
<p>copy startup-config running-config<br>config terminal<br>enable secret 123<br>copy running-config startup-config<br>config-register 0x2102  </p>
</blockquote>
</blockquote>
<p>3、思科CDP  </p>
<blockquote>
<p>就是查看直连设备IP、端口、IOS版本等<br>cdp有2个参数  </p>
<blockquote>
<p>#show cdp  </p>
</blockquote>
<blockquote>
<p>(config)#cdp holdtime 180<br>(config)#cdp timer 60  </p>
</blockquote>
<p>cdp相关命令  </p>
<blockquote>
<p>(config)#no cdp run 完全关闭cdp<br>(config-if)#no cdp enable 关闭某个端口的cdp  </p>
<p>#show cdp neighbor<br>#show cdp neighbor detail<br>#show cdp entry * protocols<br>#show cdp entry * version<br>#show cdp traffic<br>#show cdp interface (显示接口的CDP状态)  </p>
</blockquote>
</blockquote>
<p>4、利用dns解析主机表  </p>
<blockquote>
<p>前提是网络上有DNS服务器<br>ip domain-lookup<br>ip name-server 192.168.1.1<br>ip domain-name 123.com  </p>
<p>直接自己输入：<br>ip host R1 10.2.2.2  相当于在hosts文件里面写主机表  </p>
</blockquote>
<p>5、对远程连接的操作  </p>
<blockquote>
<p>telnet 10.1.1.1<br>本地的操作  </p>
<blockquote>
<p>show sessions<br>disconnect 2  </p>
</blockquote>
<p>远程设备上的操作  </p>
<blockquote>
<p>show users<br>exit  /  chlar line 2  </p>
</blockquote>
</blockquote>
<p>其他摘录  </p>
<blockquote>
<p>boot system flash rom ftp tftp  </p>
<p>show processes 相当于进程管理器  </p>
<p>debug all  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA第六章 静态路由、默认路由、RIPv2</title>
    <url>/posts/4109131716/</url>
    <content><![CDATA[<p>路由详细过程</p>
<p>静态路由</p>
<blockquote>
<p>(config)#ip route 目标网段 子网掩码 下一路由接口 管理距离AD</p>
<p>(config)#ip route 10.0.0.0 255.0.0.0 192.168.1.10 150</p>
<p>-——-[R1]-192.168.1.1———–192.168.1.10-[R2]—–10.0.0.0——– </p>
<p>AD越小越好越可信，直连为0</p>
</blockquote>
<p>默认路由</p>
<blockquote>
<p>只有1条出去的道路才能用默认路由</p>
<p>(config)#ip route     0.0.0.0    0.0.0.0             10.1.11.1</p>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>所有的IP，所有的子网掩码 下一路由接口地址</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>RIP</p>
<blockquote>
<p>对相同开销的链路直接实现负载均衡，最多6条</p>
<p>RIPv2组播整个路由表到相邻路由器上</p>
<p>防路由回路：</p>
</blockquote>
<blockquote>
<blockquote>
<p>最大跳计数15，</p>
</blockquote>
<blockquote>
<p>水平分割(不像接收方向发送网段信息)，</p>
</blockquote>
<blockquote>
<p>路由中毒(对故障网段设置最大跳为16)，</p>
</blockquote>
<blockquote>
<p>保持关闭(设置定时，一段时间内不能恢复)</p>
</blockquote>
<p>(config)#router rip</p>
<p>(config-router)#network 10.0.0.0</p>
<p>(config-router)#version 2</p>
</blockquote>
<p>一个星期没看了。。。唉，三天打鱼，两天撒网  </p>
<p>摘录  </p>
<blockquote>
<p>发送destination unreachable 只可能是出故障(接口被关闭)的那个路由器。这可以判断哪个位置出故障  </p>
<p>show ip route  </p>
<blockquote>
<p>C:直接连接<br>S：静态路由<br>R：rip<br>O：ospf  </p>
</blockquote>
<p>防止路由环路  </p>
<blockquote>
<p>最大跳数限制<br>水平分割          发来的信息不能发回原路<br>路由中毒          一旦设置为16，将通告所有这条路由信息<br>保持关闭         设置定时器，一定时间内改不了  </p>
</blockquote>
</blockquote>
<p>无线路由配置  </p>
<blockquote>
<p>(config)#int dot11radio 0/3/0<br>(config-if)#ip address 10.1.8.1 255.255.255.0<br>(config-if)#ssid test<br>(config-if-ssid)#guest-mode                       指此接口将广播这个ssid，若要隐藏就不要设置<br>(config-if-ssid)#authentication open<br>(config-if-ssid)#infrastructure-ssid             指此接口可以与其他接入点进行通信<br>(config-if-ssid)#no shutdown<br>(config-if-ssid)#exit<br>(config-if)#exit  </p>
<p>(config)#ip dhcp pool test  </p>
<p>(dhcp-config)#network 10.1.8.0 255.255.255.0</p>
<p>(dhcp-config)#default-router 10.1.8.1</p>
<p>(dhcp-config)#exit</p>
<p>(config)#ip dhcp excluded-address 10.1.8.1</p>
<p>扩展，如设置无线密码等查看 <a href="http://wan118.sinaapp.com/?p=115">多vlan的AP配置</a>  </p>
</blockquote>
<p>无线AP配置  </p>
<blockquote>
<p>(config)#int bvi 1<br>(config-if)#ip address 10.1.1.2 255.255.255.0<br>(config-if)#no shutdown<br>(config-if)#exit<br>(config)#ip default-gateway 10.1.1.1  </p>
<p>(config)#ip dhcp pool test2  </p>
<p>(dhcp-config)#network 10.1.1.0 255.255.255.0</p>
<p>(dhcp-config)#default-router 10.1.1.1</p>
<p>(dhcp-config)#exit</p>
<p>(config)#ip dhcp excluded-address 10.1.1.1</p>
<p>(config)#ip dhcp excluded-address 10.1.1.2</p>
</blockquote>
<p>静态路由命令  </p>
<blockquote>
<p>(config)#ip route 172.16.3.0       255.255.255.0           192.168.2.4                               150  </p>
</blockquote>
<blockquote>
<p>             下一个网段         子网掩码         通往下一网段的接口IP地址        管理距离，可有可无  </p>
</blockquote>
<p>默认路由命令  </p>
<blockquote>
<p>(config)#ip route 0.0.0.0 0.0.0.0 217.124.6.1<br>或者       ip default-network 217.124.6.0  </p>
</blockquote>
<p>RIP  </p>
<blockquote>
<p>(config)#router rip<br>(config-router)#network 10.0.0.0<br>(config-router)#passive-interface s0/0    s0/0不能向外发送rip信息，但是能接收<br>(config-router)#version 2  </p>
</blockquote>
<p>查看、验证、出错命令  </p>
<blockquote>
<p>show ip route<br>show ip protocols  </p>
<p>debug ip rip  </p>
<blockquote>
<p>debug查看的时候就看进来有哪些信息，出去有哪些信息，就能画出网络图，然后再除错<br>另外一般多是远程连路由器的，所以要输入命令 #terminal monitor 不然看不到debug信息的  </p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA第四章 CISCO IOS</title>
    <url>/posts/529402642/</url>
    <content><![CDATA[<p>本章主要介绍怎么进cisco  </p>
<p>cisco安全层次  </p>
<blockquote>
<p>普通模式-特权模式-编辑模式。<br>跟vim有点像，  </p>
<blockquote>
<p>普通模式就相当于进入vim的时候你可以浏览文档<br>特权模式就相当于vim可以操作dd，wq之类的<br>编辑模式就相当于按下insert之类的命令之后可以开始编辑  </p>
</blockquote>
</blockquote>
<p>cisco的配置文档结构  </p>
<blockquote>
<p>结构就是全局+各个具体项<br>设置用户名，设置路由协议，acl之类的就是全局配置<br>进入各个接口，进入各个line就是具体项配置。  </p>
</blockquote>
<p>主要内容：  </p>
<blockquote>
<p>设置密码<br>设置SSH<br>其他常用命令  </p>
</blockquote>
<p>1、设置口令  </p>
<blockquote>
<p>登录口令：包括aux、console、vty等口令，就是连接路由器的时候要输入的口令  </p>
<blockquote>
<p>(config)#line vty 0 4<br>(config-line)#password 123<br>(config-line)#login  </p>
</blockquote>
<p>特权口令：就是输入 routrer&gt;enable 后要输入的口令  </p>
<blockquote>
<p>(config)#enable password 123  / enable secret 123  </p>
</blockquote>
</blockquote>
<blockquote>
<p>其他：  </p>
<blockquote>
<p>不设置登录口令  </p>
<blockquote>
<p>(config)#line vty 0 4<br>(config-line)#no login  </p>
</blockquote>
<p>控制台的相关设置  </p>
<blockquote>
<p>(config-line)#logging synchronous   阻止控制台信息的显示<br>(config-line)#exec-timeout 0 0         设置无操作时的退出时间  </p>
</blockquote>
<p>加密配置中的密码  </p>
<blockquote>
<p>(config)#service password-encryption  </p>
</blockquote>
<p>对接口进行描述  </p>
<blockquote>
<p>(config-if)#description ******  </p>
</blockquote>
</blockquote>
</blockquote>
<p>2、SSH加密通信  </p>
<blockquote>
<p>(config)#hostname rt                         先设置主机名<br>(config)#ip domain-name rt.com       再设置域名<br>(config)#crypto key generate rsa general-keys modulus 1024   这里用rsa加密，密钥位数1024<br>(config)#ip ssh time-out 60                        自动断开时间60秒<br>(config)#ip ssh authentication-retries 3      密码错误重试3次<br>(config)#transport input ssh telnet              应用到ssh和telnet  </p>
</blockquote>
<p>3、开启路由器的http/https服务  </p>
<blockquote>
<p>略 p185  </p>
</blockquote>
<p>4、其他  </p>
<blockquote>
<p>登录特权模式 router&gt;enable                          当前用户模式：查看统计信息等  </p>
<blockquote>
<p>#show history                                       查看历史命令<br>#show terminal                                     查看终端设置  </p>
<blockquote>
<p>#terminal history size 25              修改历史命令行数  </p>
</blockquote>
<p>#show version                                      查看ios版本  </p>
<p>show interface f0/1                               查看接口配置<br>show ip interface                                  查看接口的IP配置<br>show ip interface brief                          查看接口的详细状态    <br>show protocols                                     查看1、2层状态<br>show controllers                                   查看接口DCE、DTE      </p>
<p>#erase startup-config                           删除启动配置<br>#copy running-config startup-config     保存<br>#reload  (重启)                                     重新加载配置  </p>
</blockquote>
<p>登录全局模式router#configure terminal         当前特权模式：可查看/修改配置，查询路由表等  </p>
<blockquote>
<p>(config)#hostname rt                             更改主机名<br>(config)#banner motd ! *********** !         banner 横幅 ，就是登录或者离开系统时的提示  </p>
</blockquote>
<p>登录功能模式router(config)#interface fastEthernet 0/0     当前全局模式，可改主机名、时钟等</p>
</blockquote>
<blockquote>
<blockquote>
<p>(config-if)#ip address 192.168.1.2 255.255.255.0<br>(config-if)#ip address 192.168.2.2 255.255.255.0 secondary<br>                                                              一般不会用到，同一个端口设置第二个子网地址  </p>
</blockquote>
</blockquote>
<blockquote>
<p>interface s0/0  </p>
<blockquote>
<p>(config-if)#clock rate 1000000<br>(config-if)#bandwidth 100000</p>
</blockquote>
</blockquote>
<p>5、除错  </p>
<blockquote>
<p>serial0/0 is up,line protocol is down <br>正常的话物理层和数据链路层都应该是up，如果数据链路层down的话考虑时钟等，这种问题一般出现在串口上  </p>
</blockquote>
<blockquote>
<p>错误提示  </p>
</blockquote>
<blockquote>
<blockquote>
<p>%incomplete command                            一行命令没输完整<br>%invalid input detected at ‘^’ marker        输入错误<br>%ambiguous command                            产生歧义，命令不唯一</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA，到现在还没看完。。</title>
    <url>/posts/2441116169/</url>
    <content><![CDATA[<p>年初开始看的，计划4月底考出来的。<br>到现在还没看完。有时候好几个星期没碰书了。。。  </p>
<p>看书刚开始总是简单的，看的也快，越到后面要强化的地方越多，学习就越慢<br>只有强烈的学习欲望才能持续的学习下去，不然总是会半途而废的。<br>真正学进去了，也许就会感受到学习的乐趣  </p>
<p>我要做的，就是要保持这样的心！</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7最小化安装kvm</title>
    <url>/posts/2474284125/</url>
    <content><![CDATA[<p>1、升级到最新版  </p>
<blockquote>
<p>yum update -y  </p>
</blockquote>
<p>2、安装必要软件  </p>
<blockquote>
<p>yum install pciutils net-tools  </p>
</blockquote>
<p>3、安装kvm相关软件  </p>
<blockquote>
<p> yum install libvirt*<br>yum install ipxe-roms-qemu<br>yum install python-virtinst<br>yum install qemu-kvm<br>yum install virt-manager<br>yum install virt-viewer<br>yum install virt-top<br>yum install virt-what<br>yum install qemu-img<br>yum install virt-install<br>yum install libguest*  </p>
</blockquote>
<p>4、设置网络  </p>
<blockquote>
<p>nano /etc/sysctl.conf  </p>
<blockquote>
<p>net.ipv4.ip_forward = 1  </p>
</blockquote>
<p>cd /etc/sysconfig/network-scripts/  </p>
<blockquote>
<p>cp ifcfg-enp0s25 ifcfg-br0<br>nano ifcfg-br0  </p>
<blockquote>
<p>TYPE=”Bridge”<br>BOOTPROTO=”static”<br>DEFROUTE=”yes”<br>IPV4_FAILURE_FATAL=”no”<br>NAME=”br0”<br>UUID=”1eb3d327-b535-44d1-8558-b369c6db3a80”<br>DEVICE=”br0”<br>ONBOOT=”yes”<br>IPADDR=”192.168.3.128”<br>PREFIX=”24”<br>GATEWAY=”192.168.3.1”<br>DNS1=”192.168.3.1”  </p>
</blockquote>
<p>nano ifcfg-enp0s25  </p>
<blockquote>
<p>NAME=”enp0s25”<br>DEVICE=”enp0s25”<br>ONBOOT=”yes”<br>BRIDGE=br0  </p>
</blockquote>
</blockquote>
<p>关闭SELINUX  </p>
<blockquote>
<p>nano /etc/selinux/config<br>SELINUX=disabled  </p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>5、用virt-manager远程管理kvm虚拟机  </p>
<blockquote>
<p><img src="http://img2.ph.126.net/N4N0xNRH578sApZUEmfWKg==/6598296821694261878.png" alt="centos7最小化安装kvm - leaf - ------勤解万难------" title="centos7最小化安装kvm - leaf - ------勤解万难------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CHDK 安装及使用</title>
    <url>/posts/3009292535/</url>
    <content><![CDATA[<p>待续。。。</p>
<p><a href="http://www.alexgao.com/2008/05/27/chdk/">http://www.alexgao.com/2008/05/27/chdk/</a></p>
<p><a href="http://www.alexgao.com/2008/05/27/chdk/"></a><a href="http://scratchpad.wikia.com/wiki/CHDK">http://scratchpad.wikia.com/wiki/CHDK</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>compiz用法</title>
    <url>/posts/4056534827/</url>
    <content><![CDATA[<p>Ctrl+Alt+鼠标左键：将各虚拟桌面变成正立方体的四个面<br>Ctrl+Alt+左方向键：滚动正立方体以切换至左方虚拟桌面<br>Ctrl+Alt+右方向键：滚动正立方体以切换至右方虚拟桌面<br>Alt+Tab              ：切换至同一个桌面的下个窗口</p>
<p>Win+Tab             ：绚丽的窗口切换效果</p>
<p>Win+E                ：平铺排列虚拟桌面</p>
<p>Win+W               ：平铺窗口</p>
<p>Win+鼠标滚轮      ：放大或者缩小屏幕<br>Alt+鼠标滚轮        ：改变窗口的透明度  </p>
<p>Win+鼠标左键             ：截图</p>
<p>CTRL+ALT+D             ：显示桌面  </p>
<p>参考：</p>
<p><a href="http://wiki.compiz.org/CommonKeyboardShortcuts">http://wiki.compiz.org/CommonKeyboardShortcuts</a></p>
<p><a href="http://ulyssesonline.com/2007/10/25/compiz-fusion-keyboard-shortcuts/">http://ulyssesonline.com/2007/10/25/compiz-fusion-keyboard-shortcuts/</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>CONKY配置</title>
    <url>/posts/77642516/</url>
    <content><![CDATA[<p><img src="http://img128.ph.126.net/B6XKezhP09_iTUMhkmgO3A==/1621858815808469013.jpg" alt="CONKY配置 - leaf - ------坚持雅操------" title="CONKY配置 - leaf - ------坚持雅操------"></p>
<p> 备注：有几个字体要下载的  </p>
<p>#<a href="http://conky.sourceforge.net/docs.html">http://conky.sourceforge.net/docs.html</a></p>
<p>#<a href="http://forum.ubuntu.org.cn/viewtopic.php?f=33&amp;t=173214">http://forum.ubuntu.org.cn/viewtopic.php?f=33&amp;t=173214</a></p>
<p>#全局设置—————————————————————————</p>
<p>cpu_avg_samples         1   #监控几个CPU状况</p>
<p>net_avg_samples         1   #监控几个网络状况</p>
<p>double_buffer         yes   #双倍缓存，用Ubuntu，不想看闪屏就这样写</p>
<p>no_buffers            yes   #使用内存缓冲区</p>
<p>update_interval       1.0   #定时更新时间,以秒为单位，Conky需要定时读取系统状态</p>
<p>total_run_times         0   #开起来之后一直运行</p>
<p>background            yes   #是否嵌入桌面</p>
<p>override_utf8_locale  yes   #强制用UTF8解码，谁都不想看乱码</p>
<p>out_to_console         no   #是否将Conky出错情况输出到终端</p>
<p>minimum_size        170 5   #设定Conky的长宽，最小宽度为170像素，最小高度为5像素</p>
<p>maximum_width         170   #设定Conky的长宽，最大宽度为170像素</p>
<p>default_shade_color   black #默认底纹颜色和边框的颜色底纹</p>
<p>default_outline_color white #默认轮廓色</p>
<p>use_xft                yes  #指示conky用x字体，这样才能调用你安装的字体</p>
<p>xftalpha               0.1  #Alpha of Xft font  ??</p>
<p>xftfont Bitstream Charter:bold:size=9  #定义默认字体</p>
<p>default_color        white  #定义默认字体颜色</p>
<p>uppercase               no  #如果值设为“yes”则所有输出的文字都变成大写字母</p>
<p>use_spacer            none  #???</p>
<p>#全局设置—————————————————————————</p>
<p>#窗体设置—————————————————————————</p>
<p>own_window              yes  #自己的窗口，这样可以不闪</p>
<p>own_window_transparent  yes  #背景透明</p>
<p>own_window_type    override  #不受WM控制</p>
<p>own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager  </p>
<p>    #不装饰窗口（我们定义了他是个独立的窗口），</p>
<p>    #永远在根窗口上（也就是屏幕），</p>
<p>    #粘滞起来（不能让他乱跑）</p>
<p>    #无视一切1，无视一切2</p>
<p>#窗体设置—————————————————————————</p>
<p>#边框设置—————————————————————————</p>
<p>draw_borders            no   #不要边框，当然个人喜好 </p>
<p>border_margin            0   #边框宽度 0</p>
<p>draw_graph_borders      no   #不要边框图标      </p>
<p>draw_shades             no   #字体绘制阴影</p>
<p>draw_outline            no   #不要下划线</p>
<p>#边框设置—————————————————————————</p>
<p>#位置设置—————————————————————————</p>
<p>#alignment        top_left   #设置最开始的位置</p>
<p>#alignment      top_middle</p>
<p>alignment        top_right        </p>
<p>#alignment     bottom_left</p>
<p>#alignment   bottom_middle</p>
<p>#alignment    bottom_right</p>
<p>#alignment            none</p>
<p>gap_x                    0   #相对屏幕边界的位置调横向位移，这里是相对屏幕右上方调位置</p>
<p>gap_y                   26   #相对屏幕边界的位置调纵向位移，这里是相对屏幕右上方调位置</p>
<p>#位置设置—————————————————————————</p>
<p>###——功能模块备份——###</p>
<p>#图表显示硬盘实时读写状况————————————————————–</p>
<p>#${color }Disk Read:${alignr}${color}$diskio_read</p>
<p>#${color}${diskiograph_read /dev/sda 10,160 000000 ffffff}</p>
<p>#${color }Disk Write:${alignr}${color}$diskio_write</p>
<p>#${color}${diskiograph_write /dev/sda 10,160 000000 ffffff}</p>
<p>#显示显卡型号————————————————————————</p>
<p>#Video Card: ${color #cdc8b1}${execi 20 glxinfo | grep “OpenGL renderer” | cut -c 25-39}</p>
<p>#GPUtemp:${execi 20 nvidia-settings -q gpucoretemp | grep “Attribute” | cut -d” “ -f6 | cut -c -2} °C</p>
<p>#nvidia-settings -q gpucoretemp</p>
<p>#显示系统信息————————————————————————</p>
<p>#${font Microsoft YaHei:size=10}${color #F6E80C}主机:${font Bitstream Charter:bold:size=9}${color #c0ff3e} $alignr$nodename</p>
<p>#${font Microsoft YaHei:size=10}${color #F6E80C}用户: ${font Bitstream Charter:bold:size=9}${color #c0ff3e} $alignr${execi 9999 whoami}</p>
<p>###——功能模块备份——###</p>
<p>#${font}:设字体</p>
<p>#${color}:设字体颜色</p>
<p>#${offset}:横向偏移，+向右</p>
<p>#${voffset}：纵向偏移，+向下</p>
<p>#${execi}:运行外部命令</p>
<p>#功能设置—————————————————————————-</p>
<p>TEXT</p>
<p>${color }$stippled_hr</p>
<p>${font Bitstream Charter:bold:size=10}${color #F6E80C}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=CN}</p>
<p>${font Weather:size=44}${color gold}${offset 16}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=WF}</p>
<p>${font Microsoft YaHei:bold:size=9}${color #ffe7ba}${voffset -96}${offset 90}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=CC}</p>
<p>${font Bitstream Charter:bold:size=9}${color #ffe7ba}${offset 90}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=HT}</p>
<p>${font Bitstream Charter:bold:size=9}${color #ffe7ba}${offset 90}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=WS}${font Arrows:size=10}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=BF}</p>
<p>${font Microsoft YaHei:size=9}${color #ffe7ba}${offset 12}白天时间: ${color #ffe7ba}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=SR}-${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=SS}</p>
<p>${font Microsoft YaHei:bold:size=9}${color #F6E80C}${offset 15}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=DW –startday=1 –endday=4 –spaces=3 –shortweekday}</p>
<p>${font Weather:size=26}${color white}${offset 16}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=WF –startday=1 –endday=4 –spaces=0}</p>
<p>${font Weather:size=16}${color white}${voffset -20}z${font}:${color white}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=HT –startday=1 –endday=4 –spaces=5}</p>
<p>${font Weather:size=16}${color white}i${font}:${color white}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=PC –startday=1 –endday=4 –spaces=4}</p>
<p>${font Weather:size=16}${color white}v${font}:${color white}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=WS –startday=1 –endday=4 –spaces=1}</p>
<p>${font Arrows:size=10}${color gold}${voffset -15}${offset 38}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=BF –startday=1 –endday=1 –spaces=0}${offset 27}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=BF –startday=2 –endday=2 –spaces=0}${offset 30}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=BF –startday=3 –endday=3 –spaces=0}${offset 22}${execi 3600 python ~/.conky-rc/conkyForecast.py –location=CHXX0044 –datatype=BF –startday=4 –endday=4 –spaces=0}${font}${color}</p>
<p>${stippled_hr 1}</p>
<p>${font Microsoft YaHei:size=9}${color #F6E80C}系统: ${font Bitstream Charter:bold:size=9}${color #c0ff3e} $alignr${execi 99999 lsb_release -d -s -c | tr -s “\n” “ “}</p>
<p>${font Microsoft YaHei:size=9}${color #F6E80C}内核: ${font Bitstream Charter:bold:size=9}${color #c0ff3e}$alignr$kernel</p>
<p>${font Microsoft YaHei:size=9}${color #F6E80C}用时: ${font Bitstream Charter:bold:size=9}${color #c0ff3e}$alignr$uptime</p>
<p>${color }$stippled_hr</p>
<p>${font Microsoft YaHei:size=9}${color #F6E80C}CPU温度:${font Bitstream Charter:bold:size=9}${color #c0ff3e}$alignr${acpitemp}°C</p>
<p>${color white}CPU us:$alignr${color } $cpu% </p>
<p>${cpubar 4}</p>
<p>${color white}MEM:${color} $mem/$memmax$alignr$memperc%</p>
<p>${membar 4}</p>
<p>${color white}SWAP:${color} $swap/$swapmax$alignr$swapperc%</p>
<p>${swapbar 4}</p>
<p>${color }$stippled_hr</p>
<p>${font Microsoft YaHei:size=9}${color #F6E80C}进程:${font Bitstream Charter:bold:size=9}${color #c0ff3e}$alignr$processes  ($running_processes running)</p>
<p>${color #ffe7ba}Top Processes$alignr   CPU%  MEM%$color</p>
<p>${top name 1}${color #FB0808}$alignr${top cpu 1}   ${top mem 1}$color</p>
<p>${top name 2}${color #F6620C}$alignr${top cpu 2}   ${top mem 2}$color</p>
<p>${top name 3}${color #F6E80C}$alignr${top cpu 3}   ${top mem 3}$color</p>
<p>${top name 4}${color #08CB2F}$alignr${top cpu 4}   ${top mem 4}$color</p>
<p>${top name 5}${color #0DBCCE}$alignr${top cpu 5}   ${top mem 5}$color</p>
<p>${top name 6}${color #2758CF}$alignr${top cpu 6}   ${top mem 6}$color</p>
<p>${top name 7}${color #8A11CB}$alignr${top cpu 6}   ${top mem 7}$color</p>
<p>${color }$stippled_hr</p>
<p>${font Microsoft YaHei:size=9}${color #F6E80C}硬盘温度:${font Bitstream Charter:bold:size=9}${color #c0ff3e}$alignr${hddtemp /dev/sda}°C</p>
<p>${color white}Boot: ${alignr}${fs_free /boot} / ${fs_size /boot}</p>
<p>${fs_bar 4 /boot}</p>
<p>Root: ${alignr}${fs_free /} / ${fs_size /}</p>
<p>${fs_bar 4 /}</p>
<p>Home: ${alignr}${fs_free /home} / ${fs_size /home}</p>
<p>${fs_bar 4 /home}</p>
<p>Usr: ${alignr}${fs_free /usr} / ${fs_size /usr}</p>
<p>${fs_bar 4 /usr}</p>
<p>Var: ${alignr}${fs_free /var} / ${fs_size /var}</p>
<p>${fs_bar 4 /var}</p>
<p>Tmp: ${alignr}${fs_free /tmp} / ${fs_size /tmp}</p>
<p>${fs_bar 4 /tmp}</p>
<p>${color }$stippled_hr</p>
<p>${font Microsoft YaHei:size=9}${color #F6E80C}WAN地址:${font Bitstream Charter:bold:size=9}${color #c0ff3e} $alignr${execi 3600 wget -O - <a href="http://whatismyip.org/">http://whatismyip.org/</a> | tail}</p>
<p>${font Microsoft YaHei:size=9}${color #F6E80C}IP地址:${font Bitstream Charter:bold:size=9}${color #c0ff3e} ${alignr} ${addr eth0}</p>
<p>${downspeedgraph eth0 25,80 556B2F 9ACD32}${alignr}${upspeedgraph eth0 25,80 556B2F 9ACD32}</p>
<p>${voffset -30}${font Microsoft YaHei:size=8}${color #F6E80C}down:${font Bitstream Charter:bold:size=9}${color white}${downspeed eth0}k/s${alignr}${font Microsoft YaHei:size=8}${color #F6E80C}up:${font Bitstream Charter:bold:size=9}${color white}${upspeed eth0}k/s</p>
<p>${voffset 5}${font Microsoft YaHei:size=8}${color #F6E80C}Total:${font Bitstream Charter:bold:size=9}${color white}${totaldown eth0}${alignr}${font Microsoft YaHei:size=8}${color #F6E80C}Total:${font Bitstream Charter:bold:size=9}${color white}${totalup eth0}</p>
<p>${color }$stippled_hr</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ddns绑定在双线的指定线路上</title>
    <url>/posts/2104355930/</url>
    <content><![CDATA[<p>需求：</p>
<p>1、拉了一根电信20M pppoe拨号宽带和一根移动50M 静态IP。  </p>
<p>      双线接入后DDNS自动绑定在了移动IP上了，需要将DDNS解析到电信IP上面</p>
<p>2、用的DDNS是3322的，DNS服务器IP是members.3322.org和<a href="http://www.3322.org/">www.3322.org</a></p>
<p>华为路由策略</p>
<p>acl name acl-dxddns 3500</p>
<p>rule permit ip destination  118.184.176.13 0</p>
<p>rule permit ip destination  118.184.176.15 0</p>
<p>policy-based-route dxddns permit node 10</p>
<p>if-match acl 3500</p>
<p>apply output-interface Dialer 1</p>
<p>quit</p>
<p>ip local policy-based-route dxddns</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>dell R710 安装win2003</title>
    <url>/posts/3603248865/</url>
    <content><![CDATA[<p>raid卡：6i</p>
<p>网卡BMC5709c</p>
<p><a href="http://zh.community.dell.com/support/_forums/poweredge/f/279/t/2809">http://zh.community.dell.com/support\_forums/poweredge/f/279/t/2809</a></p>
<p>raid驱动从上面的地址下载</p>
<p><a href="http://blog.csdn.net/littlefang/article/details/6851864">http://blog.csdn.net/littlefang/article/details/6851864</a></p>
<p>U盘用winsetupfromusb制作</p>
<p><a href="http://mydown.yesky.com/driver/33918848.html">http://mydown.yesky.com/driver/33918848.html</a></p>
<p>网卡驱动下载地址</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>DELL电脑问题</title>
    <url>/posts/3133175435/</url>
    <content><![CDATA[<p>dell台式电脑<br>1、电脑黑屏，指示灯1在亮，警报声 1长<br>             故障：检测不到内存  </p>
<p>2、电脑黑屏，指示灯3、4亮，报警声<br>             故障：内存松动  </p>
<p>3、显示IDE configure：说明正在初始化，等下即可  </p>
<p>4、进度条满格却进不去，说明读取硬盘有问题，拔掉光驱硬盘线进去  </p>
<p>5、到windows进度条后进不去：<br>           是BIOS设置问题，在RARD这一栏选ata即可(不要选achi)  </p>
<p>dell笔记本<br>1、安装xp时蓝屏，显示0x0000007b<br>          -、bios设置为ata<br>          -、设置为achi，但要选择有sata驱动的安装光盘</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>diskgenius处理坏道</title>
    <url>/posts/3632146375/</url>
    <content><![CDATA[<p>用了6年的笔记本硬盘出现坏道，晚上用diskgenius扫描并处理了一下  </p>
<p><img src="http://img0.ph.126.net/XNWZBY37ncREZ3b4hkcS_A==/200691658495968771.png" alt="diskgenius处理坏道 - leaf - ------勤解万难------" title="diskgenius处理坏道 - leaf - ------勤解万难------">  </p>
<p>1、右击硬盘，点新建分区，点右下角的高级选项<br>2、然后把柱面，磁头号，扇区填一下。  </p>
<blockquote>
<p>3213-0-17至3213-34-43 的区域  </p>
</blockquote>
<blockquote>
<p>6393-0-61至6393-1-12的区域<br>这两块区域不要使用即可<br>我的话直接从3000-0-1到6500-0-1都不使用。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>e5 2675v3一台</title>
    <url>/posts/2281243226/</url>
    <content><![CDATA[<p><img src="http://img0.ph.126.net/_C4Xx8djwYiu8X-hlzarUg==/2834734490471156526.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/phNWxlWW-nX72q6hlc8_5w==/6631319553866412979.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/rKMVFVI5xaD2Z8UvZHqpNQ==/6631201906122241848.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/WEpXKb1O9TYkDDT_hU_LSA==/6598185771018234953.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/gfH-2Fd5Rhvp0BQ_F-dVNQ==/6598131894948473005.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/LNitRGJOGwmCripGv0oJQA==/6631245886587376903.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/7cOyMvhVC4xnSiwswyvRHg==/6630774196097219186.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/C1kILSDoPePYQI5DtVjQ0g==/6631411912843147602.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> <img src="http://img0.ph.126.net/yXl5Ld8Ni-ATwKP9Xhu7Vw==/6598194567111256011.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------">  
 </p>
<p><img src="http://img0.ph.126.net/wLG0_H4nlRC4JmDx_7RLfQ==/6598149487134517788.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/9x98fw8p0IZNYBRwcTKJYQ==/6631432803564101314.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/dJWJIjH-jIhN4TQSALSd2w==/6630616965934457404.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/n8SuLU-LHNvLxXGZuoGfrg==/6598120899832195542.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/kEnZ4P5-8zd-cDcunRZoBg==/6630597174725145197.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/GHfbl9u629BxOpRWXxpsfA==/6598120899832195544.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/hJlCz15mGXd5wEKps994dA==/6631425106982701204.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> <img src="http://img0.ph.126.net/pD1p7fyMoZUxIXiSsisNtw==/6598154984692656699.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------">  
 </p>
<p><img src="http://img2.ph.126.net/UgqrydQp4zq7OUJFRb5NvQ==/6598154984692656710.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/XRVy5yCc8JK25uaV2kc37A==/6630784091701868826.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/n0jxadrvtxN8fzKHRXBRrg==/6598240746599622859.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/UvlcWbIktCQil8tmjUKK1g==/6631369031889691007.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/jwX0LElkRlvc4yI_f_0J4Q==/6631352539215272721.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/N8ZoUSqAYyk3uI3K4Pg_sA==/6631364633843179956.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/5svZ0xcEzzdWVH3dC7Sh1w==/6631407514796660368.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/9e1fL92GbPVkAxOXuNrhiA==/6631369031889691031.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/TwIZeFM8PJatnNtiUbukPQ==/6598138492018240236.jpg" alt="采购新电脑一台 - leaf - ------勤解万难------" title="采购新电脑一台 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>etc目录文件说明</title>
    <url>/posts/771146178/</url>
    <content><![CDATA[<p>参考文档</p>
<p><a href="http://www.freedesktop.org/software/systemd/man/index.html">http://www.freedesktop.org/software/systemd/man/index.html</a></p>
<p>/etc各文件用途</p>
<p>adjtime设置同步时间</p>
<p>alias设置别名</p>
<p>anacrontab系统计划任务的扩展文件：在一个指定时间间隔错过后自动执行任务</p>
<p><a href="http://www.2cto.com/os/201208/146487.html">http://www.2cto.com/os/201208/146487.html</a></p>
<p>asound.conf声卡设置文件，非必须</p>
<p><a href="http://blog.sina.com.cn/s/blog/_a04184c101010kry.html">http://blog.sina.com.cn/s/blog\_a04184c101010kry.html</a></p>
<p>at.deny哪些人不能用at</p>
<p>bashrcbash环境设置，如PS1，umask，</p>
<p>chrony.conf时间同步配置文件</p>
<p><a href="http://os.51cto.com/art/201403/431692.htm">http://os.51cto.com/art/201403/431692.htm</a></p>
<p>chrony.keys时间同步SHA码</p>
<p>cron.deny哪些人不能用cron</p>
<p><a href="http://wuseven.blog.51cto.com/6237275/1098591">http://wuseven.blog.51cto.com/6237275/1098591</a></p>
<p>crontab例行任务设置</p>
<p>crypttab设置启动过程中的块设备的加密</p>
<p><a href="http://www.freedesktop.org/software/systemd/man/crypttab.html">http://www.freedesktop.org/software/systemd/man/crypttab.html</a></p>
<p><a href="http://www.2cto.com/Article/201309/243900.html">http://www.2cto.com/Article/201309/243900.html</a></p>
<p>csh.cshrccsh环境设置</p>
<p>csh.login对启动环境的csh环境设置</p>
<p>DIR_COLORS终端登录后的颜色设置</p>
<p>DIR_COLORS.256color</p>
<p>DIR_COLORS.lightbgcolor</p>
<p>dnsmasqdns和dhcp配置工具</p>
<p><a href="http://www.thekelleys.org.uk/dnsmasq/doc.html">http://www.thekelleys.org.uk/dnsmasq/doc.html</a></p>
<p><a href="http://www.freehao123.com/dnsmasq/">http://www.freehao123.com/dnsmasq/</a></p>
<p>dracut.conf引导镜像配置文件</p>
<p><a href="http://www.360doc.com/content/13/0428/09/12139495/_281449877.shtml">http://www.360doc.com/content/13/0428/09/12139495\_281449877.shtml</a></p>
<p>drirc未知</p>
<p>dumpdates</p>
<p>e2fsck.conf只针对事件错误的修复配置</p>
<p>environment</p>
<p>ethertypes以太网帧类型定义</p>
<p>exports全局变量定义</p>
<p>filesystems支持的文件系统</p>
<p>fprintd.conf<a href="http://www.freedesktop.org/wiki/Software/fprint/fprintd/">http://www.freedesktop.org/wiki/Software/fprint/fprintd/</a></p>
<p>fatab默认挂载的文件系统</p>
<p>fw_env.config内存地址配置</p>
<p>GREP_COLORSgrep显示的颜色设置</p>
<p>group系统组用户</p>
<p>gshadow系统组用户密码</p>
<p>host.conf设置主机名查询顺序</p>
<p><a href="http://lxsym.blog.51cto.com/1364623/311989">http://lxsym.blog.51cto.com/1364623/311989</a></p>
<p><a href="http://www.linuxidc.com/Linux/2010-10/28982.htm">http://www.linuxidc.com/Linux/2010-10/28982.htm</a></p>
<p>hostname主机名</p>
<p>hostsIP地址和主机名映射表</p>
<p>hosts.allow网络服务允许列表</p>
<p>hosts.deny网络服务禁止列表</p>
<p>inittabinit配置文件，现已不需要</p>
<p>inputrc键盘键符设置</p>
<p>issue登录提示</p>
<p>issue.net网络登录提示</p>
<p>jwhois.confwhois客户端配置文件</p>
<p><a href="http://wuhongsheng.com/tag/conf/">http://wuhongsheng.com/tag/conf/</a></p>
<p>krb5.confkerberos认证配置</p>
<p><a href="http://www.freebsd.org/doc/zh/_CN/books/handbook/kerberos5.html">http://www.freebsd.org/doc/zh\_CN/books/handbook/kerberos5.html</a></p>
<p>ld.so.conf动态库文件配置</p>
<p>lftp.conflftp配置文件</p>
<p>libuser.conf</p>
<p>localtime当前时间</p>
<p>login.defs登录密码，uid，gid等设置</p>
<p>logrotate.conf轮替设置</p>
<p>machine-id<a href="http://www.freedesktop.org/software/systemd/man/machine-id.html">http://www.freedesktop.org/software/systemd/man/machine-id.html</a></p>
<p>magic</p>
<p>mail.rcheirloom mail config</p>
<p>mailcap</p>
<p>man_db.confman文件路径设置</p>
<p>mime.types一个mime类型说明文件</p>
<p>mke2fs.conf默认的文件系统参数设置</p>
<p>motd</p>
<p>mtab默认加载的文件系统</p>
<p>mtools.conf模拟许多MS-DOS的指令</p>
<p>nanorcnano配置文件</p>
<p>networks</p>
<p>nsswitch.conf系统数据库和名称服务切换配置文件</p>
<p>oddjobd.confoddjob daemon config</p>
<p>os-release系统版本号</p>
<p>passwd</p>
<p>passwdqc.conf密码规则</p>
<p>pidora-release</p>
<p>pinforc</p>
<p>prelink.conf</p>
<p>printcapcups方面的配置文件</p>
<p>profile系统环境设置</p>
<p>protocols网络协议标识说明</p>
<p>rc0-6.d启动项文件</p>
<p>rearj.cfg压缩文件命令说明</p>
<p>request-key.conf</p>
<p>resolv.confdns设置</p>
<p>rpcrpc相关服务说明</p>
<p>rsyncd.conf同步配置文件</p>
<p>rsyslog.confsyslog配置文件</p>
<p>securetty终端配置</p>
<p>services服务说明文件</p>
<p>sestatus.confselinux状态工具配置</p>
<p>shadow</p>
<p>shellsshell列表</p>
<p>sudoerssudo配置文件</p>
<p>sysctl.conf内核参数设置文件</p>
<p>updatedb.conflocate的db文件</p>
<p>vconsole.conf</p>
<p>wgetrcwget配置文件</p>
<p>yum.confyum配置文件</p>
<p>yumex.confyum配置文件</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>Eth-trunk 配置</title>
    <url>/posts/2739087025/</url>
    <content><![CDATA[<p>二层eth-trunk配置</p>
<p>#switchA</p>
<p>#建eth-trunk端口<br>interface Eth-Trunk11  </p>
<blockquote>
<p> description GE19 GE20 s5720-S5700S48P</p>
<p> port link-type trunk</p>
<p> port trunk allow-pass vlan 2 to 4094</p>
<p>#eth-trunk设置</p>
<p> mode lacp</p>
<p> max active-linknumber 2</p>
<p>#arp保护</p>
<p> arp anti-attack rate-limit enable</p>
<p> arp-miss anti-attack rate-limit enable</p>
</blockquote>
<p>interface GigabitEthernet0/0/19  </p>
<blockquote>
<p> eth-trunk 11</p>
<p> lacp priority 100</p>
</blockquote>
<p>interface GigabitEthernet0/0/20  </p>
<blockquote>
<p> eth-trunk 11</p>
<p> lacp priority 100</p>
</blockquote>
<p>#switchB</p>
<p>#建eth-trunk端口</p>
<p>interface Eth-Trunk11  </p>
<blockquote>
<p> port link-type trunk</p>
<p> port trunk allow-pass vlan 2 to 4094</p>
<p>#eth-trunk设置</p>
<p> mode lacp</p>
<p> max active-linknumber 2</p>
</blockquote>
<p>interface GigabitEthernet0/0/47  </p>
<blockquote>
<p> eth-trunk 11</p>
</blockquote>
<p>interface GigabitEthernet0/0/48  </p>
<blockquote>
<p> eth-trunk 11</p>
</blockquote>
<p>-————————————————————————————————-</p>
<p>三层eth-trunk配置</p>
<p>routeA</p>
<p>interface Eth-Trunk1</p>
<blockquote>
<p> undo portswitch</p>
<p> ip address 10.1.1.1 255.255.255.252</p>
<p> mode lacp-static</p>
<p> max active-linknumber 2</p>
</blockquote>
<p>interface GigabitEthernet0/0/0</p>
<blockquote>
<p> undo portswitch</p>
<p> eth-trunk 1</p>
</blockquote>
<p>interface GigabitEthernet0/0/1</p>
<blockquote>
<p> undo portswitch</p>
<p> eth-trunk 1</p>
</blockquote>
<p>switchB</p>
<p>interface Eth-Trunk1</p>
<blockquote>
<p> undo portswitch</p>
<p> ip address 10.1.1.2 255.255.255.252</p>
<p> mode lacp</p>
<p> max active-linknumber 2</p>
</blockquote>
<p>interface GigabitEthernet0/0/21</p>
<blockquote>
<p> eth-trunk 1</p>
<p> lacp priority 100</p>
</blockquote>
<p>interface GigabitEthernet0/0/22</p>
<blockquote>
<p> eth-trunk 1</p>
<p> lacp priority 100</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>excel编辑后保存自动出现TMP文件，且无法删除</title>
    <url>/posts/1788866578/</url>
    <content><![CDATA[<p>每保存一次就出现一个tmp文件，而且不是隐藏文件，直接删除无法删除，用360解除占用，出现system占用文件的情况  </p>
<p>解决：<br>这个跟杀毒软件有关系，那台电脑用的是360杀毒，关闭后tmp文件就消失了。保护过头了。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>excle超链接被限制</title>
    <url>/posts/542090570/</url>
    <content><![CDATA[<p>问题：由于本机的限制,该操作已被取消。请于系统管理员联系  </p>
<p>解决方法：<br>1、在Excel中选择“工具→自动更正”，单击“键入时自动套用格式”选项卡，勾选“Internet 及网络路径替换为超级链接”复选框（如果已勾选，则取消之）。  </p>
<p>其他可能设置<br>2、在Excel中选择 工具- 选项-编辑-请求制动更新链接处有没打勾  </p>
<p>3、检查IE是否系统默认浏览器，如果不是，进入IE的“Internet 属性”－》“程序”选项卡中，勾选“检查IE是否默认浏览器”，并点击“重置web设置”。  </p>
<p>引自：<br><a href="http://zhidao.baidu.com/question/244737746.html">http://zhidao.baidu.com/question/244737746.html</a>  </p>
<p><a href="http://blog.sina.com.cn/s/blog/_49f78a4b01008hox.html">http://blog.sina.com.cn/s/blog\_49f78a4b01008hox.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>FC4 rc.sysinit启动过程</title>
    <url>/posts/522471707/</url>
    <content><![CDATA[<p>设置3个变量HOSTNAME,HOSTTYPE,unamer</p>
<p>运行. /etc/sysconfig/network</p>
<p>挂载/proc，加载usb模块，加载usb设备，挂载/sys</p>
<p>运行. /etc/init.d/functions</p>
<p>检查SELinux状态</p>
<p>显示欢迎字幕：welcome to red hat …</p>
<p>设置控制台的日志级别</p>
<p>设置codline #ro root=LABEL=/ rhgb quiet</p>
<p>初始化硬件，</p>
<p>加载ide，scsi，network，audio等模块</p>
<p>加载 /etc/sysconfig/modules/ 下的模块 #空</p>
<p>加载 /etc/rc.modules 下设置的模块 #空 </p>
<p>———开始图形化启动界面———</p>
<p>挂载/dev/pts</p>
<p>配置内核参数</p>
<p>设置系统时钟</p>
<p>设置hostname</p>
<p>加载acpi模块</p>
<p>设置zfcp</p>
<p>设置RAID</p>
<p>LVM2初始化</p>
<p>需要的话卸载initrd</p>
<p>需要的话更新quota</p>
<p>以读写模式从新挂载/</p>
<p>清理SELinux</p>
<p>清理mtab</p>
<p>删除mtab的临时文件</p>
<p>把加载的文件系统写入到/etc/mtab下 / /proc /sys /dev/pts /proc/bus/usb</p>
<p>挂载其他文件系统如smbfs等</p>
<p>启动磁盘配额</p>
<p>检查是否有必要设置SElinux？？？  Check to see if a full relabel is needed</p>
<p>开始图形化启动界面</p>
<p>初始化随机数</p>
<p>需要的话从新配置电脑，</p>
<p>从新读取/etc/sysconfig/network,hostname,</p>
<p>删除/目录下的隐藏文件</p>
<p>删除/var/lock/* /var/run/* 下的文件</p>
<p>删除/var/lib/rpm/__db*</p>
<p>删除/var/gdm/.gdmfifo</p>
<p>从新设置pam权限</p>
<p>清理utmp/wtmp</p>
<p>清理/tmp</p>
<p>新建/tmp/.ICE-unix</p>
<p>启用交换分区</p>
<p>挂载/proc/sys/fs/binfmt_misc</p>
<p>运行/etc/rc.serial</p>
<p>需要的话加载ide-cd  ide-scsi模块</p>
<p>配置网络？？？ Boot time profiles. Yes, this should be somewhere else.</p>
<p>——-内核已可用，模块已加载完——</p>
<p>启动记录卸载/var/log/dmesg下</p>
<p>create the crash indicator flag to warn on crashes, offer fsck with timeout</p>
<p>结束rc.sysinit。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>fedora17安装nvidia官方驱动</title>
    <url>/posts/2095604229/</url>
    <content><![CDATA[<p>版本：fedora17 x64位<br>CPU：AMD Athlon(tm) II X4 635 Processor × 4<br>主板：AMD 870 (无板载显卡)<br>内存：DDR3-1333 8G<br>显卡：8500GT  </p>
<p>0、设置了sudoers、yum源  </p>
<blockquote>
<p>sudo gedit /etc/sudoers  </p>
<blockquote>
<p># User privilege specification<br>root    ALL=(ALL) ALL<br>加入   你的账户名   ALL=(ALL) ALL  </p>
</blockquote>
<p>yum源就加163的就好了  </p>
<blockquote>
<p>mirrors.163.com<br>点fedora使用帮助，里面有详细信息  </p>
</blockquote>
</blockquote>
<p>1、安装相关编译包  </p>
<blockquote>
<p>gcc、make、kernel-devel、kernel-headers、dkms<br>sudo yum -y install gcc make dkms<br>kernel-devel和kernel-headers是从DVD安装光盘里找的<br>#也可以把kernel更新到最新版，再用yum下载kernel源码  </p>
</blockquote>
<p>2、相关设置  </p>
<blockquote>
<p>1、阻止nouveau模块的加载  </p>
<blockquote>
<p>sudo gedit /etc/modprobe.d/blacklist.conf<br>添加一行：blacklist nouveau  </p>
</blockquote>
<blockquote>
<p>sudo gedit /boot/grub2/grub.cfg<br>在menuentry ‘Fedora Linux’ 这一段的linux    /boot/vmlinuz 这一行末尾rhgb quiet后面添加 nouveau.modeset=0  </p>
</blockquote>
<p>2、降低selinux级别  </p>
<blockquote>
<p>sudo setsebool -P allow_execstack on  </p>
</blockquote>
<p>3、下载nvidia官方驱动和设置权限  </p>
<blockquote>
<p>下载最新的就可以：NVIDIA-Linux-x86_64-304.51.run<br>chmod a+x NVIDIA-Linux-x86_64-304.51.run  </p>
</blockquote>
</blockquote>
<p>3、操作  </p>
<blockquote>
<p>1、进文本模式  </p>
<blockquote>
<p>重启进菜单后-按e进编辑模式-找到rhgb quiet，输入 3   然后按F10启动  </p>
</blockquote>
<p>2、nvidia安装  </p>
<blockquote>
<p>sh ./NVIDIA-Linux-x86_64-304.51.run</p>
</blockquote>
<blockquote>
<p>里面就是选accept，然后再要不要生成xorg.conf的时候按ok 就好了  </p>
</blockquote>
<p>3、设置分辨率  </p>
<blockquote>
<p>重启后发现分辨率只有640x480<br>1、查看频率  </p>
<blockquote>
<p>gtf 1280 1024 60  -x  </p>
</blockquote>
<p>  # 1280x1024 @ 60.00 Hz (GTF) <strong>hsync: 63.60 kHz; pclk: 108.88 MHz</strong><br>  Modeline “1280x1024_60.00”  108.88  1280 1360 1496 1712  1024 1025 1028 1060  -HSync +Vsync<br>2、设置频率  </p>
</blockquote>
<blockquote>
<p>sudo gedit /etc/X11/xorg.conf  </p>
<blockquote>
<p>Section “Monitor”<br>    Identifier     “Monitor0”<br>    VendorName     “Unknown”<br>    ModelName      “Unknown”<br>    HorizSync       28.0 - <strong>63.60</strong><br>    VertRefresh     43.0 - <strong>108.88</strong><br>    Option         “DPMS”<br>EndSection  </p>
</blockquote>
</blockquote>
</blockquote>
<p>4、查看模块  </p>
<blockquote>
<p>lsmod  </p>
<blockquote>
<p>nvidia              11262717  40<br>nouveau               785691  0  </p>
</blockquote>
<p>modinfo nvidia  </p>
<blockquote>
<p>filename:       /lib/modules/3.3.4-5.fc17.x86_64/extra/nvidia.ko<br>alias:          char-major-195-*<br>version:        304.51<br>supported:      external<br>license:        NVIDIA</p>
</blockquote>
</blockquote>
<p>后记  </p>
<blockquote>
<p>碰到的问题就是屏幕分辨率的问题，没碰到安装不了驱动的问题，也没有黑屏和蓝进度条的问题  </p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
<p>参考：  </p>
<blockquote>
<p><a href="http://www.2cto.com/os/201109/104395.html">fedora15安装nvidia官方驱动</a></p>
</blockquote>
<blockquote>
<p><a href="http://www.xufangxi.cn/Linux/11.html">解决linux低分辨率</a><br><a href="http://www.cnblogs.com/ZJoy/archive/2011/03/15/1984938.html">xorg.conf配置详解</a><br><a href="http://hi.baidu.com/cxkipq/item/99a2229216b58736336eebc2">linux gtf和cvt命令</a>  </p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
<p>效果  </p>
<blockquote>
<p><img src="http://img4.ph.126.net/DvYtJ6ZJGYgSLMun86veQg==/6598258338725711534.jpg" alt="fedora17安装nvidia官方驱动 - leaf - ------坚持雅操------" title="fedora17安装nvidia官方驱动 - leaf - ------坚持雅操------"></p>
</blockquote>
<blockquote>
<p><img src="http://img7.ph.126.net/B1auivZnvejbCt67buGBDQ==/6597256683634379457.jpg" alt="fedora17安装nvidia官方驱动 - leaf - ------坚持雅操------" title="fedora17安装nvidia官方驱动 - leaf - ------坚持雅操------"></p>
<p><img src="http://img5.ph.126.net/74zwresWU4eSY0k7iIXNOA==/2682175053093706855.jpg" alt="fedora17安装nvidia官方驱动 - leaf - ------坚持雅操------" title="fedora17安装nvidia官方驱动 - leaf - ------坚持雅操------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>fedora安装</title>
    <url>/posts/2744993236/</url>
    <content><![CDATA[<p>使用ubuntu很方便，但是linux的书大多以redhat的文件结构来讲的，所以学会用fedora也是必要的。<br>我在vmware里面装了Fedora-17-i686-Live-XFCE.iso  </p>
<p>1、vmware运行不了gnome版本的fedora17，原因是其显示效果vmware支持不了，但是virtualbox能支持  </p>
<p>2、把账户添加到/etc/sudoers，以方便操作  </p>
<blockquote>
<p>su -<br>chmod 600 /etc/sudoers<br>visudo<br>添加  xxx   ALL(ALL)=ALL   xxx为账户名<br>sources /etc/sudoers<br>exit</p>
</blockquote>
<p>3、装了yum源，添加了163的和sohu的源。  </p>
<blockquote>
<p>yum源和apt源不一样，yum是添加文件，然后更新；apt是添加地址，然后再更新<br>yum源下载：  </p>
<blockquote>
<p>mirrors.163.com<br>mirrors.sohu.com<br>……  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>放入 /etc/yum.repos.d/下面</p>
<p>把原先的repo文件删掉，因多个repo会导致同一个包添加删除会有重复</p>
<p>然后运行 yum makecache 来更新</p>
</blockquote>
<p>yum用法：</p>
<p>yum update                        #更新系统</p>
<p>yum install –                      #安转软件</p>
<p>yum remove  –    -y           #删除软件</p>
<p>yum clean all                      #删除多余rpm包</p>
</blockquote>
<p>4、安装第三方软件仓库</p>
<blockquote>
<p><a href="http://rpmfusion.org/">http://rpmfusion.org</a></p>
</blockquote>
<p>5、由于是live版的，所以GCC和linux header多没装  </p>
<blockquote>
<p>sudo yum -y install gcc make kernel-headers kernel-devel  </p>
</blockquote>
<p>6、安装vmware-tools  </p>
<blockquote>
<p>我的linux版本是3.3.4-5.fc17.i686 但是yum下载的却是3.5.4-1.fc17.i686<br>只能自己去下载了安装 kernel-devel-3.3.4-5.fc17.i686.rpm<br>地址：<a href="http://rpmfind.net/linux/rpm2html/search.php?query=kernel-devel">http://rpmfind.net/linux/rpm2html/search.php?query=kernel-devel</a>  </p>
</blockquote>
<p>7、安装easylife  </p>
<blockquote>
<p>地址：<a href="http://easylifeproject.org/">http://easylifeproject.org/</a><br>这个软件可以帮我们安装flash等插件，觉得还可以虽然没有tweak这么好  </p>
</blockquote>
<p>8、安装fedorautils  </p>
<blockquote>
<p>fedorautils比easylife还要多一点，好东西阿～～  </p>
</blockquote>
<blockquote>
<p><a href="http://sourceforge.net/projects/fedorautils/?source=directory">http://sourceforge.net/projects/fedorautils/?source=directory</a></p>
</blockquote>
<p>9、关闭SELINUX  </p>
<blockquote>
<p>默认选项是：permissive<br>更改：sudo vi /etc/selinux/config<br>SELINUX=disabled</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>gentoo安装：2xfce桌面</title>
    <url>/posts/3933523040/</url>
    <content><![CDATA[<p>参考：<br><a href="http://www.gentoo.org/doc/en/xorg-config.xml">http://www.gentoo.org/doc/en/xorg-config.xml</a><br><a href="http://www.gentoo.org/doc/zh/_cn/xorg-config.xml">http://www.gentoo.org/doc/zh\_cn/xorg-config.xml</a><br><a href="http://www.gentoo.org/doc/zh/_cn/xfce-config.xml">http://www.gentoo.org/doc/zh\_cn/xfce-config.xml</a><br><a href="http://blog.csdn.net/fo1/_sky/article/details/6339910">http://blog.csdn.net/fo1\_sky/article/details/6339910</a><br>1、安装Xorg  </p>
<blockquote>
<p>nano -w /etc/portage/make.conf  </p>
<blockquote>
<p>INPUT_DEVICES=”keyboard mouse”<br>VIDEO_CARDS=”vmware”  </p>
</blockquote>
<p>emerge libdrm<br>emerge mesa<br>emerge –autounmask-write  xorg-x11<br>dispatch-conf<br>emerge xorg-x11  </p>
</blockquote>
<blockquote>
<p>#要安装125个包<br>env-update<br>source /etc/profile<br>Xorg -configure<br>X -config /root/xorg.conf.new<br>cp /root/xorg.conf.new /etc/X11/xorg.conf<br>startx 进行测试  </p>
</blockquote>
<p>2、安装xfce  </p>
<blockquote>
<p>由于安装gnome出现问题解决不了，所以安装了xfce<br>libdiscid   rarian(包含在hal下) 这2个软件不知道怎么装。  </p>
<p>USE=”-gnome -kde -minimal -qt4 branding dbus hal jpeg lock session startup-notification thunar X”<br>emerge thunar-volman<br>emerge python<br>emerge pambase<br>emerge -avt xfce4-meta<br>for x in plugdev cdrom cdrw usb ; do gpasswd -a leaf $x ; done<br>env-update &amp;&amp; source /etc/profile<br>echo “exec startxfce4” &gt; ~/.xinitrcemerge xf86-input-evdev  #解决鼠标动不了的问题<br>startx<br>后面的附加程序都没有装  </p>
</blockquote>
<p>界面如下：  </p>
<blockquote>
<p><img src="http://img3.ph.126.net/ybaTpHC0ug5NfXM9OjlNIQ==/6597557949819376093.jpg" alt="gentoo安装：2xfce桌面 - leaf - ------坚持雅操------" title="gentoo安装：2xfce桌面 - leaf - ------坚持雅操------">  </p>
<p>对以后LFS装桌面有好处～。。。  </p>
<p> </p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>gentoo安装：基本系统</title>
    <url>/posts/3915535499/</url>
    <content><![CDATA[<p>环境：<br>宿主：              CPU：amd 4核         内存：DDR3 8G           显卡GT8500<br>vmware 9 ：    CPU：2核                  内存：1G                     硬盘：30G<br>参考：<a href="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml">http://www.gentoo.org/doc/en/handbook/handbook-x86.xml</a><br>下载：<a href="http://distfiles.gentoo.org/releases/x86/autobuilds/current-iso/install-x86-minimal-20120710.iso">http://distfiles.gentoo.org/releases/x86/autobuilds/current-iso/install-x86-minimal-20120710.iso</a>  </p>
<p>1、进光盘系统  </p>
<blockquote>
<p>光盘启动<br>15秒内按F1，然后输入gentoo进系统  </p>
</blockquote>
<p>2、安装网卡驱动  </p>
<blockquote>
<p>ifconfig 只找到lo，没有eth0<br>查看设备：lspci  </p>
<blockquote>
<p>02:01.0 Ethernet controller: Advanced Micro Devices [AMD] 79c970 [PCnet32 LANCE] (rev 10)  </p>
</blockquote>
<p>查看模块：lsmod | grep net  </p>
<blockquote>
<p>pcnet32                23142  0  </p>
</blockquote>
<p>显然模块是有的，就是没加载<br>安装显卡驱动  </p>
<blockquote>
<p>net-setup eth0<br>按照提示选择即可  </p>
</blockquote>
</blockquote>
<p>3、开启ssh  </p>
<blockquote>
<p>/etc/init.d/sshd start<br>passwd root  </p>
</blockquote>
<p>4、宿主开终端，用ssh连接进光盘系统  </p>
<blockquote>
<p>ssh <a href="mailto:&#114;&#111;&#x6f;&#116;&#x40;&#49;&#x37;&#50;&#46;&#49;&#x36;&#46;&#52;&#51;&#46;&#49;&#x34;&#x32;">&#114;&#111;&#x6f;&#116;&#x40;&#49;&#x37;&#50;&#46;&#49;&#x36;&#46;&#52;&#51;&#46;&#49;&#x34;&#x32;</a><br>#dhcp获取的IP地址是172.16.43.142  </p>
</blockquote>
<p>5、分区、格式化、挂载  </p>
<blockquote>
<p>分区  </p>
<blockquote>
<p>cfdisk<br>/dev/sda1     ext2           128M               Boot partition<br>/dev/sda2     (swap)     1024M               Swap partition<br>/dev/sda3     ext3     Rest of the disk      Root partition  </p>
</blockquote>
</blockquote>
<blockquote>
<p>建文件系统  </p>
<blockquote>
<p>mkfs.ext2 /dev/sda1<br>mkfs.ext3 /dev/sda3<br>mkswap /dev/sda2<br>swapon /dev/sda2  </p>
</blockquote>
<p>挂载文件系统  </p>
<blockquote>
<p>mount /dev/sda3 /mnt/gentoo                 #/mnt/gentoo文件夹本身就有<br>mkdir /mnt/gentoo/boot<br>mount /dev/sda1 /mnt/gentoo/boot  </p>
</blockquote>
</blockquote>
<p>6、下载stage3和portage包  </p>
<blockquote>
<p>stage3已经将目标系统的环境全部建好了，就剩下一些软件、linux内核、grub没装了。  </p>
</blockquote>
<blockquote>
<p>0、cd /mnt/gentoo<br>1、links <a href="http://www.gentoo.org/main/en/mirrors.xml">http://www.gentoo.org/main/en/mirrors.xml</a>  </p>
<blockquote>
<p>#Enter：进入，按键D：下载    按键Q：退出  </p>
</blockquote>
<p>2、下载stage3  </p>
<blockquote>
<p>downloads-mirrors-6、Asia-China-sohu.inc(http)-releases/x86/autobuilds/20121016/stage3-i686-20121016.tar.bz2<br>#实际地址<br><a href="http://mirrors.sohu.com/gentoo/releases/x86/autobuilds/20121016/stage3-i686-20121016.tar.bz2">http://mirrors.sohu.com/gentoo/releases/x86/autobuilds/20121016/stage3-i686-20121016.tar.bz2</a>  </p>
</blockquote>
<p>3、下载portage包  </p>
<blockquote>
<p>downloads-mirrors-6、Asia-China-sohu.inc(http)-snapshots/portage-latest.tar.bz2  </p>
</blockquote>
<blockquote>
<p>#实际地址  </p>
</blockquote>
<blockquote>
<p><a href="http://mirrors.sohu.com/gentoo/snapshots/portage-latest.tar.bz2">http://mirrors.sohu.com/gentoo/snapshots/portage-latest.tar.bz2</a>  </p>
</blockquote>
<p>4、解压  </p>
<blockquote>
<p>tar xvjpf stage3-i686-20121016.tar.bz2<br>tar xvjf /mnt/gentoo/portage-latest.tar.bz2 -C /mnt/gentoo/usr  </p>
</blockquote>
<blockquote>
<p>#这里tar参数p：表示按原地址解压  </p>
</blockquote>
<p>这里，可以配置/mnt/gentoo/etc/portage/make.conf 来用多核一起编译软件  </p>
<blockquote>
<p>nano -w /mnt/gentoo/etc/portage/make.conf<br>MAKEOPTS=”-j2”  </p>
</blockquote>
</blockquote>
<p>7、选源、选同步  </p>
<blockquote>
<p>选源<br>mirrorselect -i -o &gt;&gt; /mnt/gentoo/etc/portage/make.conf  </p>
<blockquote>
<p>#这里我选了3个  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>GENTOO_MIRRORS=”<a href="http://mirrors.163.com/gentoo/">http://mirrors.163.com/gentoo/</a>  </p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>  <a href="ftp://mirrors.sohu.com/gentoo/">ftp://mirrors.sohu.com/gentoo/</a><br>  <a href="http://mirrors.sohu.com/gentoo/&quot;">http://mirrors.sohu.com/gentoo/&quot;</a>  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>选同步<br>mirrorselect -i -r -o &gt;&gt; /mnt/gentoo/etc/portage/make.conf  </p>
</blockquote>
<blockquote>
<blockquote>
<p>    SYNC=”rsync://rsync.cn.gentoo.org/gentoo-portage”  </p>
</blockquote>
</blockquote>
<p>8、chroot  </p>
<blockquote>
<p>复制dns信息  </p>
</blockquote>
<blockquote>
<blockquote>
<p>cp -L /etc/resolv.conf /mnt/gentoo/etc/  </p>
</blockquote>
</blockquote>
<blockquote>
<p>加载必需的文件系统  </p>
<blockquote>
<p>mount -t proc none /mnt/gentoo/proc<br>mount –rbind /sys /mnt/gentoo/sys<br>mount –rbind /dev /mnt/gentoo/dev  </p>
</blockquote>
</blockquote>
<blockquote>
<p>chroot操作  </p>
<blockquote>
<p>chroot /mnt/gentoo /bin/bash<br>env-update<br>source /etc/profile<br>export PS1=”(chroot) $PS1”  </p>
</blockquote>
</blockquote>
<p>9、更新portage树，保持安装软件的最新版  </p>
<blockquote>
<p>emerge –sync  </p>
</blockquote>
<blockquote>
<p>如果有些软件包已经更新，则再运行emerge –oneshot portage 更新  </p>
</blockquote>
<blockquote>
</blockquote>
<p>10、自定义安装模式  </p>
<blockquote>
<p>eselect profile list  </p>
<blockquote>
<p>Available profile symlink targets:<br>  [1]   default/linux/x86/10.0 *<br>  [2]   default/linux/x86/10.0/selinux<br>  [3]   default/linux/x86/10.0/desktop<br>  [4]   default/linux/x86/10.0/desktop/gnome<br>  [5]   default/linux/x86/10.0/desktop/kde<br>  [6]   default/linux/x86/10.0/developer<br>  [7]   default/linux/x86/10.0/server<br>  [8]   hardened/linux/x86<br>  [9]   hardened/linux/x86/selinux<br>  [10]  hardened/linux/uclibc/x86  </p>
</blockquote>
<p>eselect profile set 4<br>nano -w /etc/portage/make.conf  </p>
<blockquote>
<p>USE=”gtk gnome -qt4 -kde dvd alsa cdr”</p>
</blockquote>
<blockquote>
<p>USE参数很重要，这里是自定义要安装的软件。  </p>
</blockquote>
<blockquote>
<p>USE参数中文说明：<br><a href="http://linux.chinaunix.net/techdoc/desktop/2007/10/20/970341.shtml">http://linux.chinaunix.net/techdoc/desktop/2007/10/20/970341.shtml</a>  </p>
</blockquote>
</blockquote>
<p>11、安装内核  </p>
<blockquote>
<p>设置时区  </p>
<blockquote>
<p>cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br>echo “Asia/Shanghai” &gt; /etc/timezone  </p>
</blockquote>
</blockquote>
<blockquote>
<p>安装内核源码  </p>
<blockquote>
<p>emerge gentoo-sources<br>安装好后查看ls -l /usr/src/linux<br>会有内核源代码 Linux–&gt;Kernel 3.5.7-gentoo  </p>
</blockquote>
<p>自动安装内核  </p>
<blockquote>
<p>emerge genkernel                          #安装genkernel软件包<br>genkernel all<br>ls /boot/kernel* /boot/initramfs*       #查看是否已经有内核文件  </p>
</blockquote>
<p>手动添加内核模块  </p>
<blockquote>
<p>列：nano -w /etc/conf.d/modules<br>       modules_2_6=”3c59x”  </p>
</blockquote>
</blockquote>
<p>12、设置配置文件  </p>
<blockquote>
<p>nano -w /etc/fstab  </p>
<blockquote>
<p>注释掉全部内容，然后添加<br>/dev/sda1   /boot        ext2    defaults,noatime     0 2<br>/dev/sda2   none         swap    sw                   0 0<br>/dev/sda3   /            ext3    noatime              0 1<br>/dev/cdrom  /mnt/cdrom   auto    noauto,user          0 0  </p>
</blockquote>
</blockquote>
<blockquote>
<p>#设置主机名<br>nano -w /etc/conf.d/hostname          </p>
<blockquote>
<p>hostname=”leaf”  </p>
</blockquote>
<p>#设置域里的计算机名和网络<br>nano -w /etc/conf.d/net  </p>
<blockquote>
<p>dns_domain_lo=”leafnet”<br>config_eth0=”dhcp”  </p>
</blockquote>
<p>#设置网络接口开机启动<br>cd /etc/init.d  </p>
<blockquote>
<p>ln -s net.lo net.eth0<br>rc-update add net.eth0 default   </p>
</blockquote>
<p>#设置hosts<br>nano -w /etc/hosts  </p>
<blockquote>
<p>127.0.0.1     leaf localhost  </p>
</blockquote>
<p>#设置root密码<br>passwd  </p>
<p>#设置时钟<br>nano -w /etc/conf.d/hwclock  </p>
<blockquote>
<p>clock=”local”  </p>
</blockquote>
<p>#设置语言<br>locale -a<br>nano -w /etc/locale.gen  </p>
<blockquote>
<p>en_US.UTF-8 UTF-8  </p>
</blockquote>
<p>nano -w /etc/env.d/02locale  </p>
<blockquote>
<p>LANG=”en_US.UTF-8 UTF-8”<br>LC_COLLATE=”C”  </p>
</blockquote>
</blockquote>
<p>13、安装系统工具  </p>
<blockquote>
<p>#log工具  </p>
</blockquote>
<blockquote>
<p>emerge syslog-ng<br>rc-update add syslog-ng default  </p>
</blockquote>
<blockquote>
<p>#cron  </p>
</blockquote>
<blockquote>
<p>emerge vixie-cron<br>rc-update add vixie-cron default  </p>
<p>#安装mlocate<br>emerge mlocate  </p>
<p>#设置sshd服务开启启动<br>rc-update add sshd default<br>nano -w /etc/inittab  </p>
<blockquote>
<p>s0:12345:respawn:/sbin/agetty 9600 ttyS0 vt100<br>s1:12345:respawn:/sbin/agetty 9600 ttyS1 vt100  </p>
</blockquote>
<p>#安装dhcp客户端<br>emerge dhcpcd  </p>
</blockquote>
<p>14、安装GRUB  </p>
<blockquote>
<p>emerge grub</p>
</blockquote>
<blockquote>
<p>nano -w /boot/grub/grub.conf  </p>
<blockquote>
<p>default 0<br>timeout 30<br>splashimage=(hd0,0)/boot/grub/splash.xpm.gz  </p>
<p>title Gentoo Linux 3.3.7<br>root (hd0,0)<br>kernel /boot/kernel-genkernel-x86-3.5.7-gentoo root=/dev/sda3<br>initrd /boot/initramfs-genkernel-x86-3.5.7-gentoo  </p>
</blockquote>
<p>grep -v rootfs /proc/mounts &gt; /etc/mtab<br>grub-install –no-floppy /dev/sda<br>grub –no-floppy  </p>
<blockquote>
<p>root (hd0,0)<br>setup (hd0)<br>quit   </p>
</blockquote>
</blockquote>
<p>15、重启，至此安装完成  </p>
<blockquote>
<p>exit<br>umount -l /mnt/gentoo/dev{/shm,/pts,}<br>umount -l /mnt/gentoo{/boot,/proc,}<br>reboot  </p>
</blockquote>
<blockquote>
</blockquote>
<p>16、建普通账户和清理文件  </p>
<blockquote>
<p>建账户<br>useradd -m -G users,wheel,audio -s /bin/bash leaf<br>passwd leaf  </p>
</blockquote>
<blockquote>
<p>清理文件<br>rm /stage3-i686-20121016.tar.bz2*<br>rm /portage-latest.tar.bz2*  </p>
</blockquote>
<p>备注：以上是gentoo基本系统，X window 等都没有安装。  </p>
<p><img src="http://img3.ph.126.net/2zpvk_RktRS-X3t2soSQ4w==/6598189069493526073.jpg" alt="vmware安装gentoo - leaf - ------坚持雅操------" title="vmware安装gentoo - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>gpg使用说明</title>
    <url>/posts/841776280/</url>
    <content><![CDATA[<p>转载自：<a href="http://www.alexgao.com/2009/01/24/gpg/">http://www.alexgao.com/2009/01/24/gpg/</a>  </p>
<p><strong>第一部分：生成、传播、作废</strong></p>
<p><strong>1、生成密钥对：</strong></p>
<p> <strong>gpg –gen-key</strong></p>
<p> <strong>信息：solar (solar000)  <a href="mailto:&#115;&#x6f;&#x6c;&#x61;&#x72;&#x31;&#50;&#51;&#x40;&#x73;&#x6f;&#108;&#97;&#114;&#x2e;&#99;&#x6f;&#x6d;">&#115;&#x6f;&#x6c;&#x61;&#x72;&#x31;&#50;&#51;&#x40;&#x73;&#x6f;&#108;&#97;&#114;&#x2e;&#99;&#x6f;&#x6d;</a></strong></p>
<p> <strong>密钥ID：538E9DA1</strong> </p>
<p><strong>2、上传下载公钥：(给别人用)</strong></p>
<p> <strong>gpg –keyserver hkp://keys.gnupg.net –send-keys 538E9DA1   #上传</strong></p>
<p>  <strong>**gpg –keyserver</strong> hkp://keys.gnupg.net –recv** <strong>538E9DA1              #下载</strong></p>
<p><strong>3、生成公钥回收证书： (用于作废密钥)</strong></p>
<p> <strong>1、生成回收证书：    gpg –output revoke.asc –gen-revoke 538E9DA1</strong></p>
<p> <strong>2、上传到服务器上：gpg –keyserver hkp://keys.gnupg.net –send-keys 538E9DA1</strong> </p>
<p><strong>第二部分：导入导出</strong></p>
<p><strong>1、导出公钥：gpg -o solar-pubkey –export 538E9DA1</strong></p>
<p><strong>2、导出私钥：gpg -o solar-subkey –export-secret-keys 538E9DA1</strong></p>
<p><strong>3、使用人导入公钥：gpg –import solar-pubkey</strong></p>
<p><strong>4、查看是否已经导入公钥：gpg –list-keys</strong></p>
<p><strong>第三部分：加密解密</strong></p>
<p><strong>1、加密： gpg -o test.gpg -er solar test</strong></p>
<p><strong>2、解密：gpg -o test -d test.gpg</strong></p>
<p><strong>3、签名+加密：gpg -o test.sig -ser solar test</strong></p>
<p><strong>4、待续。。</strong></p>
<p><strong>对称加解密：</strong></p>
<p><strong>加密：gpg -o test.gpg -c test</strong></p>
<p><strong>解密：gpg -o test -d test.gpg</strong></p>
<p><strong>第四部分：删除密钥</strong></p>
<p><strong>0、作废公钥：gpg –keyserver hkp://keys.gnupg.net –send-keys</strong> <strong>538E9DA1</strong></p>
<p><strong>1、删除私钥：gpg –delete-secret-keys <a href="mailto:&#x73;&#111;&#108;&#x61;&#x72;&#49;&#50;&#x33;&#64;&#115;&#x6f;&#x6c;&#97;&#114;&#46;&#99;&#x6f;&#x6d;">&#x73;&#111;&#108;&#x61;&#x72;&#49;&#50;&#x33;&#64;&#115;&#x6f;&#x6c;&#97;&#114;&#46;&#99;&#x6f;&#x6d;</a></strong></p>
<p><strong>2、删除公钥：gpg –delete-keys <a href="mailto:&#x73;&#111;&#108;&#x61;&#114;&#49;&#50;&#x33;&#64;&#x73;&#111;&#108;&#97;&#114;&#x2e;&#99;&#111;&#109;">&#x73;&#111;&#108;&#x61;&#114;&#49;&#50;&#x33;&#64;&#x73;&#111;&#108;&#97;&#114;&#x2e;&#99;&#111;&#109;</a></strong></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>grub2设置等待时间、设置修改密码</title>
    <url>/posts/4236291604/</url>
    <content><![CDATA[<p>1、设置等待时间：10秒</p>
<blockquote>
<p>修改 /etc/grub.d/30_os-prober 里的一个数字  </p>
</blockquote>
<blockquote>
<p>if keystatus; then<br> if keystatus –shift; then<br> set timeout=-1<br> else<br> set timeout=10 #把0改为10<br> fi<br> else<br> if sleep$verbose –interruptible 3 ; then<br> set timeout=0<br> fi<br> fi</p>
</blockquote>
<blockquote>
<p>保存后，运行 sudo update-grub</p>
</blockquote>
<blockquote>
<p>重启后自动进入grub2界面，不需要再按shift调出来</p>
</blockquote>
<p>2、设置修改grub2时的密码</p>
<p>1\ grub-mkpasswd-pbkdf2生成加密的密码</p>
<p>2\ 向/etc/grub.d/00_head末尾追加:</p>
<p> cat &lt;&lt; EOF</p>
<p>          set superusers=”ywz”</p>
<p>          password_pbkdf2   ywz    grub.pbkdf2.sha512.10000.`````              #即刚才运行命令时显示的代码</p>
<p>          EOF</p>
<p>参考：1、 <a href="http://leonhongchina.blog.163.com/blog/static/1802941172011018450428/">http://leonhongchina.blog.163.com/blog/static/1802941172011018450428/</a></p>
<p>2、<a href="http://www.douban.com/note/64464787/">http://www.douban.com/note/64464787/</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>H3C S3600-SI 配置学习1---telnet登录配置</title>
    <url>/posts/1399434713/</url>
    <content><![CDATA[<p>system-view<br>  interface vlan-interface 3                 #创建vlan-interface 3 接口用于登录所使用的IP地址<br>  ip address 192.168.0.72 24             #24为子网掩码<br>  quit  </p>
<p>user-interface vty 0 4                         #0-4 共5个接口<br>  user privilege level 3                        #可使用所有命令</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>H3C S3600 命令学习-display</title>
    <url>/posts/1735849152/</url>
    <content><![CDATA[<p>查电脑对应的交换机接口  </p>
<p>display mac-address 1c6f-65ae-eae2   </p>
<p>查接口对应的电脑MAC地址  </p>
<p>display mac-address interface Ethernet1/0/3  </p>
<p>而MAC地址可以通过ping 和 arp查，这样就不用跑到每台电脑上测端口了。  </p>
<p>虽然别人多会了，不过我也终于会了</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>IIS+asp+mysql2005实例</title>
    <url>/posts/2377210841/</url>
    <content><![CDATA[<p>网页—IIS———-asp—mysql2005<br>IIS的作用：生成页面<br>asp的作用：在IIS和mysql之间传输数据<br>mysql的作用：存储数据  </p>
<p>0、安装 <a href="http://download.microsoft.com/download/5/6/7/567758a3-759e-473e-bf8f-52154438565a/dotnetfx.exe">framwork2.0</a> 和<a href="http://download.microsoft.com/download/1/B/E/1BE39E79-7E39-46A3-96FF-047F95396215/dotNetFx40_Full_setup.exe">framwork4.0</a><br>1、安装<a href="http://lib.ldsoft.cc/download/iis_setup_xp.rar">IIS for winxp</a> (<a href="http://lib.ldsoft.cc/download/iis_setup_2003.rar">for win2003</a> <a href="http://ldsoft.cc/download/iis7_setup.rar">for win2008</a>)<br>      1、解压，然后用windows的添加/删除程序装，再运行bat文件即可<br>      2、iis相关配置查看安装说明<br>      3、安装好后跳出HTTP 500，  打开IE-菜单–工具–Internet选项–高级–去掉钩显示友好的HTTP错误信息<br>            显示The specified module could not be found 解决方法见<a href="http://www.mycodes.net/78/2387.htm">http://www.mycodes.net/78/2387.htm</a><br>2、安装SQL2005企业版<br>     1、配置看说明书<br>     2、提示 MMC检测到此管理单元发生一个错误。建议关闭并重新启动MMC<br>          要安装SQLServer2005SP3-KB955706-x86-CHS.exe  </p>
<p>待续。。。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>kvm 安装 windows2008</title>
    <url>/posts/3226075993/</url>
    <content><![CDATA[<p>1、建镜像  </p>
<blockquote>
<p>qemu-img create -f qcow2 win2008.qcow2 -opreallocation=metadata 100G  </p>
</blockquote>
<p>2、建虚拟机  </p>
<blockquote>
<p>virt-install -n windows2008 -r 2048 –vcpus=2 –os-type=windows –accelerate -c /home/ywz/ISO/win2008.iso –disk path=/home/ywz/ISO/virtio-win.iso,device=cdrom –disk path=/home/ywz/ISO/windows2008.img,format=qcow2,bus=virtio –network bridge=virbr0 –vnc –vncport=5992 –vnclisten=0.0.0.0 –force –autostart<br>备注：<br>1、安装的时候直接装上virtio驱动。驱动我选的是viostor里面的驱动<br>virtio最新版本是0.1.113<br>2、取消boot分区方法<br>安装完virtio驱动后，显示出硬盘容量，这时候按shift+f10 出来命令行窗口<br>输入 diskpart<br>list disk<br>select disk 0<br>create partition primary<br>active<br>exit<br>exit<br>然后安装windows2008  </p>
</blockquote>
<blockquote>
<p><a href="http://www.mamicode.com/info-detail-126255.html">http://www.mamicode.com/info-detail-126255.html</a>  </p>
</blockquote>
<p>3、windows激活问题  </p>
<blockquote>
<p>网上都是改BIOS之后激活的  </p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>kvm下激活win2012</title>
    <url>/posts/111771363/</url>
    <content><![CDATA[<p>总体思路是改BIOS，然后激活<br>参考：<br><a href="http://zhidao.baidu.com/link?url=CoAMwyW3Bpl4l0kODMu-BqA4YlTHqhdW%5C_kTfd9PKZ8oaTuySxBawbt39CWtNLO76SaPOAYGrqzHkXfbjyrcRE70H76BEQDs6kz7%5C_kjvD6P3">http://zhidao.baidu.com/link?url=CoAMwyW3Bpl4l0kODMu-BqA4YlTHqhdW\_kTfd9PKZ8oaTuySxBawbt39CWtNLO76SaPOAYGrqzHkXfbjyrcRE70H76BEQDs6kz7\_kjvD6P3</a>  </p>
<p>0、所需文件  </p>
<blockquote>
<p>DELL[PE_SC3]2.2.7z<br>seabios-1.9.1.tar.gz (我用1.7.2.3版有错误，1.9.1是当前最新版)  </p>
</blockquote>
<p>1、实验环境  </p>
<blockquote>
<p>宿主机：centos7.2<br>虚拟机：win2012  </p>
</blockquote>
<p>2、BIOS制作说明  </p>
<blockquote>
<p>解压DELL[PE_SC3]2.2.7z 并将DELL-SLIC.bin文件放到随便哪个目录下。(如/opt/)<br>tar -xvf seabios-1.9.1.tar.gz<br>yum -y install git iasl      #安装依赖包<br>mkdir bios<br>cd bios<br>git clone git://github.com/ghuntley/seaslic<br>cd seaslic<br>rmdir seabios.submodule<br>mv seabios-1.9.1 seabios.submodule     <br>#将下载的seabios放到seaslic目录下并改名为seabios.submodule<br>cd seabios.submmodule<br>make distclean<br>cd ..<br>nano patch.sh  </p>
<blockquote>
<p>将xxd这行的/sys改成DELL-SLIC.bin存放位置<br>备注：xxd这行是把slic文件转换为c语言格式  </p>
<p><img src="http://img2.ph.126.net/vHqZkuK1gyxpMo9glz3rTw==/6598196766136289105.png" alt="kvm下激活win2012 - leaf - ------勤解万难------" title="kvm下激活win2012 - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>./patch.sh    #然后直接运行就行<br>备注：seabios.patch就是打了如下三处补丁</p>
<p><img src="http://img1.ph.126.net/LnPUW6l-gqrZID6HmrtZag==/6598128596415370666.png" alt="kvm下激活win2012 - leaf - ------勤解万难------" title="kvm下激活win2012 - leaf - ------勤解万难------"></p>
<p>-——-BIOS制作完毕——–<br>将./seabios.submodule/out/bios.bin 替换掉/usr/share/seabios/bios.bin<br>重启宿主机  </p>
</blockquote>
<p>3、安装win2012  </p>
<blockquote>
<p>virt-install –name=win2012-lvm –ram=4096 –vcpus=4 –os-type=windows  –hvm \<br>--cdrom=/home/ywz/iso/win2012.iso \<br>--file=/dev/kvmvg/kvmlvm \<br>--network bridge=br0  \<br>--vnc –vncport=5992 –vnclisten=0.0.0.0 –force –autostart  </p>
<p><img src="http://img0.ph.126.net/JrPU0VFLQBpJRkZe-hfrCA==/1629458640279273318.png" alt="kvm下激活win2012 - leaf - ------勤解万难------" title="kvm下激活win2012 - leaf - ------勤解万难------"></p>
</blockquote>
<p>4、导入DELL证书  </p>
<blockquote>
<p>slmgr -ilc DELL2.2.XRM-MS  </p>
<p><img src="http://img2.ph.126.net/U-LMLd6m0hC-Icc1Eeqb_Q==/1993968735119613899.png" alt="kvm下激活win2012 - leaf - ------勤解万难------" title="kvm下激活win2012 - leaf - ------勤解万难------"></p>
</blockquote>
<p>5、填入注册号激活  </p>
<blockquote>
<p><img src="http://img2.ph.126.net/zJrnz8iDWIFgVVq_eKurag==/6598085715461889824.png" alt="kvm下激活win2012 - leaf - ------勤解万难------" title="kvm下激活win2012 - leaf - ------勤解万难------"></p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS中使用rpm有关问题</title>
    <url>/posts/326245325/</url>
    <content><![CDATA[<p>转载：<br><a href="http://www.linuxfromscratch.org/hints/downloads/files/rpm.txt">http://www.linuxfromscratch.org/hints/downloads/files/rpm.txt</a><br><a href="http://hi.baidu.com/manbuzhe2009/item/94ba0f2af1bff4c6ee10f139">http://hi.baidu.com/manbuzhe2009/item/94ba0f2af1bff4c6ee10f139</a><br><a href="http://zhidao.baidu.com/question/101700893.html&__bd_tkn__=6ea61a343c69dc25571ba779eca42cf6bd1388fd8078338d51fed8133ea5c69d362ad36bb4bcda3b39bb3949f6bbe47087ac3af56e60b1f4e7eb6015795cfc359d67a1f15d0f03de01252778dc32be0a4a739e7e0a2fba88a03f37087d2e372ecf6f7f323cb5a8a8e97d89accbdc8d02ce3226fe4faa">百度知道</a>  </p>
<p>LFS虽然能安装rpm之类的包管理软件，但是由于建LFS是源码建的，所以rpm数据库中就不包含这些源码建的包，<br>这就导致用软件包管理系统在安装软件包的时候，会因为依赖关系不足而无法安装。  </p>
<p>做好临时系统后直接勇rpm或者deb进行制作目标系统不知道是不是可以做出含包管理软件的目标系统</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作-1、准备工作</title>
    <url>/posts/3703381300/</url>
    <content><![CDATA[<p>平台配置  </p>
<blockquote>
<p>虚拟机：vmware workstation 9<br>配置：    4核、1G内存、20G IDE硬盘(强烈建议用IDE硬盘)、软驱、IDE光驱  </p>
</blockquote>
<p>宿主版本：lfslivecd-x86-6.3-r2145.iso<br>LFS目标版本：LFS 6.3<br>包下载地址：<a href="http://ftp.lfs-matrix.net/pub/lfs/lfs-packages/lfs-packages-6.3.tar">http://ftp.lfs-matrix.net/pub/lfs/lfs-packages/lfs-packages-6.3.tar</a><br>操作方式：ssh<br>参考手册：  </p>
<blockquote>
<p><a href="http://www.linuxfromscratch.org/lfs/view/6.3/">http://www.linuxfromscratch.org/lfs/view/6.3/</a><br><a href="http://blog.chinaunix.net/uid-436750-id-2123580.html">http://blog.chinaunix.net/uid-436750-id-2123580.html</a><br>lfs6.2中文版  </p>
</blockquote>
<p>制作流程<br>宿主——————-&gt;临时系统———————&gt;目标系统  </p>
<blockquote>
<blockquote>
<p>|                    |                                          |  </p>
</blockquote>
<p>  预工具链    kernel-header                     kernel-header<br>   binutils            glibc                                    glibc<br>     gcc              binutils                                binutils</p>
<blockquote>
<blockquote>
<blockquote>
<p>gcc                                      gcc</p>
</blockquote>
<p>     其他工具                              其他工具</p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>       kernel<br>  设置配置文件  </p>
</blockquote>
<p>        引导信息写入扇区  </p>
<blockquote>
<blockquote>
<p>   |<br>重启  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>学习目的：  </p>
<blockquote>
<p>1、了解制作详细流程<br>2、读懂每条制作命令<br>3、学习linux是如何组织、构建起来的。<br>4、学习linux如何运作的<br>5、了解每个包的作用，及包含的命令和函数的作用，存放位置  </p>
</blockquote>
<p>其他说明：  </p>
<blockquote>
<p>1、强烈建议用IDE硬盘，SCSI有可能导致不识别，我编译核心后还是识别不了。<br>2、建议多编译几遍。<br>      我第一次编译的时候所有代码都是手动输入，而且还是按照孙海勇的那本书上输入的，花了整整2周时间。<br>      而按照LFS说明书手动输入，花了13个小时。而SSH连入操作的话，8小时就差不多了。  </p>
</blockquote>
<p>0、ssh连接  </p>
<blockquote>
<p>1、进livecd，passwd root<br>2、/etc/rc.d/init.d/sshd restart 即可使用ssh连接了  </p>
</blockquote>
<blockquote>
<p>引自：<a href="http://zouyi.ixiezi.com/2009/08/18/%E6%90%AD%E5%BB%BAlfs%E4%B9%8Bssh%E8%BF%9E%E6%8E%A5%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84livecd/">搭建LFS之ssh连接虚拟机的livecd</a></p>
</blockquote>
<p>-—————————————————————————————————<br>准备工作  </p>
<blockquote>
<p>分区  </p>
<blockquote>
<p>cfdisk<br>/dev/hda1，设置boot标志<br>dev/hda5  </p>
</blockquote>
<p>格式化  </p>
<blockquote>
<p>mke2fs -jv /dev/hda1<br>mkswap /dev/hda5  </p>
</blockquote>
<p>设置全局目录变量  </p>
<blockquote>
<p>export LFS=/mnt/lfs  </p>
</blockquote>
<p>新建并挂载目录  </p>
<blockquote>
<p>mkdir -pv $LFS<br>mkdir -pv $LFS/tools $LFS/sources  $LFS/build<br>mount -v -t ext3 /dev/hda1 $LFS<br>swapon -v /dev/hda5<br>cd $LFS<br>chmod a+wt tools sources build  </p>
</blockquote>
<p>下载软件包和补丁  </p>
<blockquote>
<p>cd $LFS/sources  </p>
</blockquote>
<blockquote>
<p>wget <a href="http://ftp.lfs-matrix.net/pub/lfs/lfs-packages/lfs-packages-6.3.tar">http://ftp.lfs-matrix.net/pub/lfs/lfs-packages/lfs-packages-6.3.tar</a><br>tar -xvf lfs-packages-6.3.tar<br>#<a href="http://ftp.lfs-matrix.net/pub/lfs/lfs-packages/">http://ftp.lfs-matrix.net/pub/lfs/lfs-packages/</a> ，每个版本都有<br>#如果用wget-list下载  </p>
<blockquote>
<p>wget -i wget-list &amp;  </p>
</blockquote>
<blockquote>
<p>#用正则表达式把下载列表和wget-list核对一下  </p>
<blockquote>
<p>#cat wget-list | sed ‘s/^.*\///g’ |sort  &gt; 1<br>#ls ./sources | sort &gt;2<br>#diff 1 2  </p>
</blockquote>
</blockquote>
</blockquote>
<p>最后的准备工作  </p>
<blockquote>
<p>ln -sv $LFS/tools /  </p>
</blockquote>
<blockquote>
<p>groupadd lfs<br>useradd -s /bin/bash -g lfs -m -k /dev/null lfs  </p>
</blockquote>
<blockquote>
<p>passwd lfs<br>chown -v lfs $LFS/tools $LFS/sources $LFS/build<br>su - lfs  </p>
<blockquote>
<p>cat &gt; ~/.bash_profile &lt;&lt; “EOF”<br><code>exec env -i HOME=$HOME TERM=$TERM PS1=&#39;\u:\w\$ &#39; /bin/bash</code><br>#不知道TERM变量什么用<br>EOF</p>
</blockquote>
<p>-——————–  </p>
<blockquote>
<p>cat &gt; ~/.bashrc &lt;&lt; “EOF”<br><code>set +h</code><br>#关闭bash的hash功能，hash是建hash表来记录命令的路径，以免每次都从PATH里搜索<br><code>umask 022</code><br><code>LFS=/mnt/lfs</code><br><code>LC_ALL=POSIX</code><br><code>PATH=/tools/bin:/bin:/usr/bin</code><br>#设置tool路径的话，每建好一个命令就能直接用，不需要再用宿主的命令<br><code>export LFS LC_ALL PATH</code><br>EOF  </p>
</blockquote>
<p>-———————  </p>
<blockquote>
<p>source ~/.bash_profile  </p>
</blockquote>
</blockquote>
<p>备注：编译文件时使用“make -j4”来使编译时使用4个核心一起编译，编译目标系统时不建议用</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作-2、预工具链</title>
    <url>/posts/1578739451/</url>
    <content><![CDATA[<p>预工具链的作用就是用来编译临时系统的glibc，使临时系统摆脱宿主系统的依赖关系  </p>
<p>说明：<br>1、解压命令就不输了，全部都解压在build下面了。<br>2、如lfs说明里面要求另建编译目录，则另建目录  </p>
<blockquote>
</blockquote>
<p>1、编译binutils-2.17</p>
<blockquote>
<p>cd $LFS/build<br>tar -xvf ../sources/binutils-2.17.tar.bz2<br>mkdir -v binutils-build<br>cd binutils-build</p>
<blockquote>
<p>CC=”gcc -B/usr/bin/“ ../binutils-2.17/configure \<br>    –prefix=/tools –disable-nls –disable-werror  </p>
<blockquote>
<p>#CC=”gcc -B/usr/bin/“：指定用哪个位置的gcc</p>
</blockquote>
<blockquote>
<p>#–prefix=/tools：安装在/tools下<br>#–disable-nls：禁用i18n(国际化)<br>#–disable-werror：有错误的话也继续编译  </p>
</blockquote>
<p>make -j4 &amp;&amp; make install  </p>
<blockquote>
<p>#这边编译的ld搜索函数库的路径是/usr/lib，也就是宿主的库文件  </p>
</blockquote>
<p>make -C ld clean                           </p>
<blockquote>
<p>#为从新编译ld，先清除ld的编译  </p>
</blockquote>
<p>make -C ld LIB_PATH=/tools/lib    </p>
<blockquote>
<p>#重新编译ld，并设置ld使用/tools/lib下面的库文件，<br>#这样，调整工具链的时候把ld复制过去，ld的搜索路径就变为/tools/lib  </p>
</blockquote>
<p>cp -v ld/ld-new /tools/bin  </p>
</blockquote>
<p>cd ..<br>mv binutils-2.17 ./ygjl/  </p>
</blockquote>
<p>2、编译gcc-4.1.2  </p>
<blockquote>
<p>mkdir -v ../gcc-build<br>cd ../gcc-build  </p>
<blockquote>
<p>CC=”gcc -B/usr/bin/“ ../gcc-4.1.2/configure –prefix=/tools \<br>    –with-local-prefix=/tools –disable-nls –enable-shared \<br>    –enable-languages=c  </p>
<blockquote>
<p>#–enable-languages=c 只编译出c编译器  </p>
</blockquote>
<p>make -j4 bootstrap<br>make install<br>ln -vs gcc /tools/bin/cc  </p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作-3、临时系统-1临时工具链</title>
    <url>/posts/3425791381/</url>
    <content><![CDATA[<p>临时系统是为了独立出宿主系统，再来编译干净的目标系统<br>linux-header、glibc、调整工具链、第二遍gcc、binutils  </p>
<p>1、Linux-2.6.22.5  </p>
<blockquote>
<p>make mrproper  </p>
<blockquote>
<p>#防止配置文件残留，清除一下已保持源文件的干净  </p>
</blockquote>
<p>make headers_check<br>make INSTALL_HDR_PATH=dest headers_install  </p>
<blockquote>
<p>#只编译内核头文件  </p>
</blockquote>
<p>cp -rv dest/include/* /tools/include  </p>
<blockquote>
<p>#目标系统的头文件都是存放在/usr/include下面的，<br>#临时系统由于不遵守LSB，所以就存在/tools下面。  </p>
</blockquote>
</blockquote>
<p>2、Glibc-2.5.1  </p>
<blockquote>
<p>mkdir -v ../glibc-build<br>cd ../glibc-build<br>../glibc-2.5.1/configure –prefix=/tools \<br>    –disable-profile –enable-add-ons \<br>    –enable-kernel=2.6.0 –with-binutils=/tools/bin \<br>    –without-gd –with-headers=/tools/include \<br>    –without-selinux  </p>
<blockquote>
<p>#–with-headers=/tools/include：头文件和库文件是紧密联系的。  </p>
</blockquote>
<p>make -j4<br>touch /tools/etc/ld.so.conf<br>make install  </p>
</blockquote>
<p>3、调整工具链  </p>
<blockquote>
<p>mv -v /tools/bin/{ld,ld-old}<br>mv -v /tools/$(gcc -dumpmachine)/bin/{ld,ld-old}<br>mv -v /tools/bin/{ld-new,ld}<br>ln -sv /tools/bin/ld /tools/$(gcc -dumpmachine)/bin/ld  </p>
<blockquote>
<p>#echo $(gcc -dumpmachine)：i686-pc-linux-gnu<br>#把搜索路径为/usr/lib的ld命令，替换为搜索路径为/tools/lib的ld<br>#/tools/bin 和/tools/$(gcc -dumpmachine)/bin 是硬连接关系。  </p>
</blockquote>
<p>gcc -dumpspecs | sed ‘s@^/lib/ld-linux.so.2@/tools&amp;@g’ \<br>  &gt; `dirname $(gcc -print-libgcc-file-name)`/specs  </p>
<blockquote>
<p>#使gcc编译时使用的是/tools/lib/ld-linux.so.2这个动态连接器<br>#gcc的specs位于/tools/lib/gcc/i686-pc-linux-gnu/4.1.2下<br>#ld和gcc使用的动态连接库要一致。  </p>
</blockquote>
<p>GCC_INCLUDEDIR=`dirname $(gcc -print-libgcc-file-name)`/include &amp;&amp;<br>find ${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rvf ‘{}’ \; &amp;&amp;<br>rm -vf `grep -l “DO NOT EDIT THIS FILE” ${GCC_INCLUDEDIR}/*` &amp;&amp;<br>unset GCC_INCLUDEDIR  </p>
<blockquote>
<p>#删除gcc下面的头文件：/lib/gcc/i686-pc-linux-gnu/4.1.2/include  </p>
</blockquote>
<p>#测试一下<br>echo ‘main(){}’ &gt; dummy.c<br>cc dummy.c<br>readelf -l a.out | grep ‘: /tools’  </p>
<blockquote>
<p>结果为：<br>[Requesting program interpreter: /tools/lib/ld-linux.so.2]  </p>
</blockquote>
</blockquote>
<p>4、安装测试工具，非必须  </p>
<blockquote>
<p>1、tcl-8.4.15  </p>
<blockquote>
<p>cd unix<br>./configure –prefix=/tools<br>make &amp;&amp; make install<br>make install-private-headers  </p>
<blockquote>
<p>#安装tcl头文件，expect要用  </p>
</blockquote>
<p>ln -sv tclsh8.4 /tools/bin/tclsh  </p>
</blockquote>
<p>2、Expect-5.43.0  </p>
<blockquote>
<p>patch -Np1 -i ../expect-5.43.0-spawn-1.patch<br>cp configure{,.bak}<br>sed ‘s:/usr/local/bin:/bin:’ configure.bak &gt; configure  </p>
<blockquote>
<p>#把/usr/local/bin替换为/bin</p>
</blockquote>
<p>./configure –prefix=/tools –with-tcl=/tools/lib \<br>  –with-tclinclude=/tools/include –with-x=no<br>make<br>make SCRIPTS=”” install  </p>
</blockquote>
<p>3、DejaGNU-1.4.4  </p>
<blockquote>
<p>./configure –prefix=/tools<br>make install  </p>
</blockquote>
</blockquote>
<p>5、gcc-4.1.2  </p>
<blockquote>
<p>expect -c “spawn ls”  </p>
<blockquote>
<p>#结果为：spawn ls  </p>
</blockquote>
<p>cp -v gcc/Makefile.in{,.orig}<br>sed ‘s@\./fixinc\.sh@-c true@’ gcc/Makefile.in.orig &gt; gcc/Makefile.in  </p>
<blockquote>
<p>#将./fixinc.sh 这一行替代为空<br>#原文 $(SHELL) ./fixinc.sh ../../gcc/include \  </p>
</blockquote>
<p>cp -v gcc/Makefile.in{,.tmp}<br>sed ‘s/^XCFLAGS =$/&amp; -fomit-frame-pointer/‘ gcc/Makefile.in.tmp \<br>  &gt; gcc/Makefile.in  </p>
<blockquote>
<p>#XCFLAGS = -fomit-frame-pointer  </p>
</blockquote>
<p>patch -Np1 -i ../gcc-4.1.2-specs-1.patch<br>mkdir -v ../gcc-build<br>cd ../gcc-build<br>../gcc-4.1.2/configure –prefix=/tools \<br>    –with-local-prefix=/tools –enable-clocale=gnu \<br>    –enable-shared –enable-threads=posix \<br>    –enable-__cxa_atexit –enable-languages=c,c++ \<br>    –disable-libstdcxx-pch  </p>
<blockquote>
<p>#–enable-clocale=gnu：  </p>
<blockquote>
<p>#本参数确保 C++ 库在任何情况下都使用正确的 locale 模块  </p>
</blockquote>
<p>#–enable-__cxa_atexit：  </p>
<blockquote>
<p>#用 <em>__cxa_atexit</em> 代替 <em>atexit</em> 来登记 C++ 对象的本地静态和全局析构函数  </p>
</blockquote>
</blockquote>
<p>make &amp;&amp; make install<br>#测试一下  </p>
<blockquote>
<p>readelf -l a.out | grep ‘: /tools’  </p>
</blockquote>
<blockquote>
<p>结果为：<br>[Requesting program interpreter: /tools/lib/ld-linux.so.2]  </p>
</blockquote>
</blockquote>
<p>6、Binutils-2.17<br>mkdir -v ../binutils-build<br>cd ../binutils-build<br>../binutils-2.17/configure –prefix=/tools \<br>    –disable-nls –with-lib-path=/tools/lib  </p>
<blockquote>
<p>#–with-lib-path=/tools/lib：使用刚装的lib(glib装的)</p>
</blockquote>
<p>make &amp;&amp; make install<br>make -C ld clean<br>make -C ld LIB_PATH=/usr/lib:/lib  </p>
<blockquote>
<p>#为目标工具链做准备  </p>
</blockquote>
<p>cp -v ld/ld-new /tools/bin</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作-3、临时系统-2必需软件</title>
    <url>/posts/1902492967/</url>
    <content><![CDATA[<p>Ncurses-5.6 </p>
<p>./configure –prefix=/tools –with-shared \</p>
<p>    –without-debug –without-ada –enable-overwrite</p>
<p>make &amp;&amp; make install </p>
<p>Bash-3.2 </p>
<p>patch -Np1 -i ../bash-3.2-fixes-5.patch</p>
<p>./configure –prefix=/tools –without-bash-malloc</p>
<p>ln -vs bash /tools/bin/sh</p>
<p>Bzip2-1.0.4 </p>
<p>make &amp;&amp; make PREFIX=/tools install</p>
<p>Coreutils-6.9</p>
<p>./configure –prefix=/tools &amp;&amp; make &amp;&amp; make install</p>
<p>cp -v src/su /tools/bin/su-tools</p>
<p>Diffutils-2.8.1 </p>
<p>./configure –prefix=/tools &amp;&amp; make &amp;&amp; make install</p>
<p>Findutils-4.2.31 </p>
<p>./configure –prefix=/tools &amp;&amp; make &amp;&amp; make install</p>
<p>Gawk-3.1.5</p>
<p>./configure –prefix=/tools</p>
<p>cat &gt;&gt; config.h &lt;&lt; “EOF”</p>
<blockquote>
<p>#define HAVE_LANGINFO_CODESET 1</p>
<p>#define HAVE_LC_MESSAGES 1</p>
</blockquote>
<p>EOF</p>
<p>make &amp;&amp; make install</p>
<p>Gettext-0.16.1</p>
<p>cd gettext-tools</p>
<p>./configure –prefix=/tools –disable-shared</p>
<p>make -C gnulib-lib</p>
<p>make -C src msgfmt</p>
<p>cp -v src/msgfmt /tools/bin</p>
<p>Grep-2.5.1a</p>
<p>./configure –prefix=/tools \</p>
<p>    –disable-perl-regexp</p>
<p>make &amp;&amp; make install</p>
<p>Gzip-1.3.12</p>
<p>./configure –prefix=/tools &amp;&amp; make &amp;&amp; make install</p>
<p>Make-3.81</p>
<p>./configure –prefix=/tools &amp;&amp; make &amp;&amp; make install</p>
<p>Patch-2.5.4 </p>
<p>./configure –prefix=/tools &amp;&amp; make &amp;&amp; make install</p>
<p>Perl-5.8.8 </p>
<p>patch -Np1 -i ../perl-5.8.8-libc-2.patch</p>
<p>./configure.gnu –prefix=/tools -Dstatic_ext=’Data/Dumper Fcntl IO POSIX’</p>
<p>make perl utilities</p>
<p>cp -v perl pod/pod2man /tools/bin</p>
<p>mkdir -pv /tools/lib/perl5/5.8.8</p>
<p>cp -Rv lib/* /tools/lib/perl5/5.8.8</p>
<p>Sed-4.1.5 </p>
<p>./configure –prefix=/tools &amp;&amp; make &amp;&amp; make install</p>
<p>Tar-1.18 </p>
<p>./configure –prefix=/tools &amp;&amp; make &amp;&amp; make install</p>
<p>Texinfo-4.9 </p>
<p>./configure –prefix=/tools &amp;&amp; make &amp;&amp; make install</p>
<p>Util-linux-2.12r </p>
<p>sed -i ‘s@/usr/include@/tools/include@g’ configure</p>
<blockquote>
<p>#把/usr/include替换为/tools/include</p>
</blockquote>
<p>./configure</p>
<p>make -C lib</p>
<p>make -C mount mount umount</p>
<p>make -C text-utils more</p>
<p>cp -v mount/{,u}mount text-utils/more /tools/bin</p>
<blockquote>
<p>#把mount/mount mount/umount text-utils/more 复制到/tools/bin下</p>
</blockquote>
<p>清理和改权限</p>
<p>不做也没关系</p>
<p>logout</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作-4、目标系统-1chroot和建相关文件</title>
    <url>/posts/3518050721/</url>
    <content><![CDATA[<p>挂载相关系统</p>
<p>#export LFS=/mnt/lfs</p>
<p>#mkdir -pv $LFS</p>
<p>#mount -v -t ext3 /dev/hda1 $LFS<br>#ln -sv $LFS/tools /  </p>
<p>mkdir -pv $LFS/{dev,proc,sys}</p>
<p>mknod -m 600 $LFS/dev/console c 5 1</p>
<p>mknod -m 666 $LFS/dev/null c 1 3</p>
<p>mount -v –bind /dev $LFS/dev</p>
<p>mount -vt devpts devpts $LFS/dev/pts</p>
<p>mount -vt tmpfs shm $LFS/dev/shm</p>
<p>mount -vt proc proc $LFS/proc</p>
<p>mount -vt sysfs sysfs $LFS/sys</p>
<p>chroot “$LFS” /tools/bin/env -i \</p>
<p>    HOME=/root TERM=”$TERM” PS1=’\u:\w\$ ‘ \</p>
<p>    PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin \</p>
<p>    /tools/bin/bash –login +h</p>
<p>-————————————————————————————</p>
<p>1、建标准的目录树</p>
<p>mkdir -pv /{bin,boot,etc/opt,home,lib,mnt,opt}</p>
<p>mkdir -pv /{media/{floppy,cdrom},sbin,srv,var}</p>
<p>install -dv -m 0750 /root</p>
<p>install -dv -m 1777 /tmp /var/tmp</p>
<p>mkdir -pv /usr/{,local/}{bin,include,lib,sbin,src}</p>
<p>mkdir -pv /usr/{,local/}share/{doc,info,locale,man}</p>
<p>mkdir -v  /usr/{,local/}share/{misc,terminfo,zoneinfo}</p>
<p>mkdir -pv /usr/{,local/}share/man/man{1..8}</p>
<p>for dir in /usr /usr/local; do</p>
<p>  ln -sv share/{man,doc,info} $dir</p>
<p>done</p>
<p>mkdir -v /var/{lock,log,mail,run,spool}</p>
<p>mkdir -pv /var/{opt,cache,lib/{misc,locate},local}</p>
<p>2、建必要的符号连接</p>
<p>ln -sv /tools/bin/{bash,cat,echo,grep,pwd,stty} /bin</p>
<p>ln -sv /tools/bin/perl /usr/bin</p>
<p>ln -sv /tools/lib/libgcc_s.so{,.1} /usr/lib</p>
<p>ln -sv /tools/lib/libstdc++.so{,.6} /usr/lib</p>
<p>ln -sv bash /bin/sh</p>
<blockquote>
<p>#安装软件包的时候相应的连接会被替代掉</p>
</blockquote>
<p>3、建/etc/mtab  </p>
<p>touch /etc/mtab</p>
<p>4、建/etc/passwd</p>
<p>cat &gt; /etc/passwd &lt;&lt; “EOF”</p>
<p>root:x:0:0:root:/root:/bin/bash</p>
<p>nobody:x:99:99:Unprivileged User:/dev/null:/bin/false</p>
<p>EOF</p>
<p>5、建/etc/group</p>
<p>cat &gt; /etc/group &lt;&lt; “EOF”</p>
<p>root:x:0:</p>
<p>bin:x:1:</p>
<p>sys:x:2:</p>
<p>kmem:x:3:</p>
<p>tty:x:4:</p>
<p>tape:x:5:</p>
<p>daemon:x:6:</p>
<p>floppy:x:7:</p>
<p>disk:x:8:</p>
<p>lp:x:9:</p>
<p>dialout:x:10:</p>
<p>audio:x:11:</p>
<p>video:x:12:</p>
<p>utmp:x:13:</p>
<p>usb:x:14:</p>
<p>cdrom:x:15:</p>
<p>mail:x:34:</p>
<p>nogroup:x:99:</p>
<p>EOF</p>
<p>6、从新用bash登录，这样就有名字了</p>
<p>exec /tools/bin/bash –login +h</p>
<p>7、建日志文件</p>
<p>touch /var/run/utmp /var/log/{btmp,lastlog,wtmp}</p>
<p>chgrp -v utmp /var/run/utmp /var/log/lastlog</p>
<p>chmod -v 664 /var/run/utmp /var/log/lastlog</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作-4、目标系统-2目标工具链</title>
    <url>/posts/991075949/</url>
    <content><![CDATA[<p>1、Linux-2.6.22.5 API Headers </p>
<p>#头文件，安装位置/usr/include，里面的*.h都是头文件</p>
<p>#内核就相当于CPU，而头文件就相当于CPU的针脚，对CPU的操作都是通过针脚传命令进去的。</p>
<p>sed -i ‘/scsi/d’ include/Kbuild</p>
<blockquote>
<p>#当前行的上一行插入/scsi/d</p>
</blockquote>
<p>make mrproper</p>
<p>make headers_check</p>
<p>make INSTALL_HDR_PATH=dest headers_install</p>
<p>cp -rv dest/include/* /usr/include</p>
<p>2、Man-pages-2.63 </p>
<p>make install</p>
<p>3、Glibc-2.5.1</p>
<p>#包含了主要的C库。这个库提供了基本例程，用于分配内存、搜索目录、打开关闭文件、读写文件、字串处理、模式匹配、数学计算等等。Glibc 的编译系统是高度自给自足的，即使当前编译器 specs 文件和连接器还指向 /tools 目录，也能正确安装</p>
<p>#安装位置:/usr/bin、/usr/lib</p>
<p>#包含的命令如：ldd、ldconfig</p>
<p>#包含的库文件：ld.so、libc</p>
<p>-—————————————————————–</p>
<p>tar -xvf ../glibc-libidn-2.5.1.tar.gz</p>
<p>mv glibc-libidn-2.5.1 libidn</p>
<p>sed -i ‘/vi_VN.TCVN/d’ localedata/SUPPORTED</p>
<blockquote>
<p>#当前行的上一行插入/vi_VN.TCVN/d</p>
</blockquote>
<p>sed -i \</p>
<p>‘s|libs -o|libs -L/usr/lib -Wl,-dynamic-linker=/lib/ld-linux.so.2 -o|’ \</p>
<p>        scripts/test-installation.pl</p>
<p>sed -i ‘s|@BASH@|/bin/bash|’ elf/ldd.bash.in</p>
<p>mkdir -v ../glibc-build</p>
<p>cd ../glibc-build</p>
<p>../glibc-2.5.1/configure –prefix=/usr \</p>
<p>    –disable-profile –enable-add-ons \</p>
<p>    –enable-kernel=2.6.0 –libexecdir=/usr/lib/glibc</p>
<p>make</p>
<p>touch /etc/ld.so.conf</p>
<p>make install</p>
<p>make localedata/install-locales</p>
<p>cat &gt; /etc/nsswitch.conf &lt;&lt; “EOF”</p>
<blockquote>
<p># Begin /etc/nsswitch.conf</p>
<p>passwd: files</p>
<p>group: files</p>
<p>shadow: files</p>
<p>hosts: files dns</p>
<p>networks: files</p>
<p>protocols: files</p>
<p>services: files</p>
<p>ethers: files</p>
<p>rpc: files</p>
<p># End /etc/nsswitch.conf</p>
</blockquote>
<p>EOF</p>
<p>#nsswitch.conf：系统数据库及名字服务开关配置文件</p>
<p>cp -v –remove-destination /usr/share/zoneinfo/Asia/Shanghai \</p>
<p>    /etc/localtime</p>
<p>cat &gt; /etc/ld.so.conf &lt;&lt; “EOF”</p>
<blockquote>
<p># Begin /etc/ld.so.conf</p>
<p>/usr/local/lib</p>
<p>/opt/lib</p>
<p># End /etc/ld.so.conf</p>
</blockquote>
<p>EOF</p>
<p>4、调整工具链</p>
<p>mv -v /tools/bin/{ld,ld-old}</p>
<p>mv -v /tools/$(gcc -dumpmachine)/bin/{ld,ld-old}</p>
<p>mv -v /tools/bin/{ld-new,ld}</p>
<p>ln -sv /tools/bin/ld /tools/$(gcc -dumpmachine)/bin/ld</p>
<p>gcc -dumpspecs | sed \     -e ‘s@/tools/lib/ld-linux.so.2@/lib/ld-linux.so.2@g’ \     -e ‘/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}’ \     -e ‘/\*cpp:/{n;s@$@ -isystem /usr/include@}’ &gt; \     `dirname $(gcc –print-libgcc-file-name)`/specs</p>
<p>测试：很重要</p>
<p>echo ‘main(){}’ &gt; dummy.c</p>
<p>cc dummy.c -v -Wl,–verbose &amp;&gt; dummy.log</p>
<p>readelf -l a.out | grep ‘: /lib’</p>
<blockquote>
<p>结果：[Requesting program interpreter: /lib/ld-linux.so.2]</p>
</blockquote>
<p>grep -o ‘/usr/lib.*/crt[1in].*succeeded’ dummy.log</p>
<blockquote>
<p>结果：</p>
<p>/usr/lib/crt1.o succeeded</p>
<p>/usr/lib/crti.o succeeded</p>
<p>/usr/lib/crtn.o succeeded</p>
</blockquote>
<p>grep -B1 ‘^ /usr/include’ dummy.log</p>
<blockquote>
<p>结果：</p>
<p>#include &lt;…&gt; search starts here:</p>
<p> /usr/include</p>
</blockquote>
<p>grep ‘SEARCH.*/usr/lib’ dummy.log |sed ‘s|; |\n|g’</p>
<blockquote>
<p>结果：</p>
<p>SEARCH_DIR(“/tools/i686-pc-linux-gnu/lib”)</p>
<p>SEARCH_DIR(“/usr/lib”)</p>
<p>SEARCH_DIR(“/lib”);</p>
</blockquote>
<p>grep “/lib/libc.so.6 “ dummy.log</p>
<blockquote>
<p>结果：attempt to open /lib/libc.so.6 succeeded</p>
</blockquote>
<p>grep found dummy.log</p>
<blockquote>
<p>结果：found ld-linux.so.2 at /lib/ld-linux.so.2</p>
</blockquote>
<p>5、 Binutils-2.17 </p>
<p>#Binutils 是一组开发工具，包括连接器、汇编器和其他用于目标文件和档案的工具。</p>
<p>#安装位置/usr/bin下</p>
<p>#包含的命令：as、ld</p>
<p>expect -c “spawn ls”</p>
<blockquote>
<p>结果：spawn ls</p>
</blockquote>
<p>mkdir -v ../binutils-build</p>
<p>cd ../binutils-build</p>
<p>../binutils-2.17/configure –prefix=/usr \</p>
<p>    –enable-shared</p>
<p>make tooldir=/usr</p>
<p>make tooldir=/usr install</p>
<p>cp -v ../binutils-2.17/include/libiberty.h /usr/include</p>
<p>6、GCC-4.1.2 </p>
<p>#GCC 软件包包含 GNU 编译器，其中有 C 和 C++ 编译器。</p>
<p>#安装位置/usr/bin</p>
<p>#包含的命令如gcc、c++、g++等</p>
<p>sed -i ‘s/install_to_$(INSTALL_DEST) //‘ libiberty/Makefile.in</p>
<p>sed -i ‘s/^XCFLAGS =$/&amp; -fomit-frame-pointer/‘ gcc/Makefile.in</p>
<p>sed -i ‘s@\./fixinc\.sh@-c true@’ gcc/Makefile.in</p>
<p>sed -i ‘s/@have_mktemp_command@/yes/‘ gcc/gccbug.in</p>
<p>mkdir -v ../gcc-build</p>
<p>cd ../gcc-build</p>
<p>../gcc-4.1.2/configure –prefix=/usr \</p>
<p>    –libexecdir=/usr/lib –enable-shared \</p>
<p>    –enable-threads=posix –enable-__cxa_atexit \</p>
<p>    –enable-clocale=gnu –enable-languages=c,c++</p>
<p>make</p>
<p>make install</p>
<p>ln -sv ../usr/bin/cpp /lib</p>
<p>ln -sv gcc /usr/bin/cc</p>
<p>测试</p>
<p>echo ‘main(){}’ &gt; dummy.c</p>
<p>cc dummy.c -v -Wl,–verbose &amp;&gt; dummy.log</p>
<p>readelf -l a.out | grep ‘: /lib’</p>
<blockquote>
<p>结果：</p>
<p>[Requesting program interpreter: /lib/ld-linux.so.2]</p>
</blockquote>
<p>grep -o ‘/usr/lib.*/crt[1in].*succeeded’ dummy.log</p>
<blockquote>
<p>结果：</p>
<p>/usr/lib/gcc/i686-pc-linux-gnu/4.1.2/../../../crt1.o succeeded</p>
<p>/usr/lib/gcc/i686-pc-linux-gnu/4.1.2/../../../crti.o succeeded</p>
<p>/usr/lib/gcc/i686-pc-linux-gnu/4.1.2/../../../crtn.o succeeded</p>
</blockquote>
<p>grep -B1 ‘^ /usr/include’ dummy.log</p>
<blockquote>
<p>结果：</p>
<p>#include &lt;…&gt; search starts here:</p>
<p> /usr/local/include</p>
<p> /usr/lib/gcc/i686-pc-linux-gnu/4.1.2/include</p>
<p> /usr/include</p>
</blockquote>
<p>grep ‘SEARCH.*/usr/lib’ dummy.log |sed ‘s|; |\n|g’</p>
<blockquote>
<p>结果：</p>
<p>SEARCH_DIR(“/usr/i686-pc-linux-gnu/lib”)</p>
<p>SEARCH_DIR(“/usr/local/lib”)</p>
<p>SEARCH_DIR(“/lib”)</p>
<p>SEARCH_DIR(“/usr/lib”);</p>
</blockquote>
<p>grep “/lib/libc.so.6 “ dummy.log</p>
<blockquote>
<p>结果：attempt to open /lib/libc.so.6 succeeded</p>
</blockquote>
<p>grep found dummy.log</p>
<blockquote>
<p>结果：found ld-linux.so.2 at /lib/ld-linux.so.2</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作-5、完成制作</title>
    <url>/posts/3062845074/</url>
    <content><![CDATA[<p>1、chroot</p>
<p>chroot “$LFS” /usr/bin/env -i \</p>
<p>    HOME=/root TERM=”$TERM” PS1=’\u:\w\$ ‘ \</p>
<p>    PATH=/bin:/usr/bin:/sbin:/usr/sbin \</p>
<p>    /bin/bash –login</p>
<p>2、配置系统脚本</p>
<p>LFS-Bootscripts-6.3 </p>
<blockquote>
<p>包含一套在 LFS 系统启动和关闭时的启动和停止脚本</p>
<p>脚本：halt、reboot、ifup、ifdown、udev、</p>
</blockquote>
<p>cat &gt; /etc/sysconfig/clock &lt;&lt; “EOF”</p>
<blockquote>
<p>UTC=0</p>
</blockquote>
<p>EOF</p>
<p>cat &gt; /etc/inputrc &lt;&lt; “EOF”</p>
<p>cat &gt; /etc/profile &lt;&lt; “EOF”</p>
<blockquote>
<p>export LANG=en_US.UTF-8</p>
<p>export INPUTRC=/etc/inputrc<br>alias ls=”ls –color”  </p>
<p>export PS1=’\u:\w\$’</p>
</blockquote>
<p>EOF</p>
<p>echo “HOSTNAME=leaf” &gt; /etc/sysconfig/network</p>
<p>cat &gt; /etc/hosts &lt;&lt; “EOF”</p>
<blockquote>
<p>127.0.0.1 leaf localhost</p>
</blockquote>
<p>EOF</p>
<p>cd /etc/sysconfig/network-devices</p>
<p>mkdir -v ifconfig.eth0</p>
<p>cat &gt; ifconfig.eth0/ipv4 &lt;&lt; “EOF”</p>
<blockquote>
<p>ONBOOT=yes</p>
<p>SERVICE=ipv4-static</p>
<p>IP=172.16.43.100</p>
<p>GATEWAY=172.16.43.2</p>
<p>PREFIX=24</p>
<p>BROADCAST=172.16.43.255</p>
</blockquote>
<p>EOF</p>
<p>cat &gt; /etc/resolv.conf &lt;&lt; “EOF”</p>
<blockquote>
<p>nameserver 172.16.43.2 </p>
</blockquote>
<p>EOF</p>
<p>cat &gt; /etc/fstab &lt;&lt; “EOF”</p>
<p>3、安装核心</p>
<p>Linux-2.6.22.5 </p>
<p>make mrproper</p>
<p>make menuconfig  #参考孙海勇的设置</p>
<p>make</p>
<p>make modules_install</p>
<p>cp -v arch/i386/boot/bzImage /boot/lfskernel-2.6.22.5</p>
<p>cp -v System.map /boot/System.map-2.6.22.5</p>
<p>cp -v .config /boot/config-2.6.22.5</p>
<p>install -d /usr/share/doc/linux-2.6.22.5</p>
<p>cp -r Documentation/* /usr/share/doc/linux-2.6.22.5</p>
<p>4、stage写入MBR</p>
<p>配置了软驱</p>
<p>dd if=/boot/grub/stage1 of=/dev/fd0 bs=512 count=1</p>
<p>dd if=/boot/grub/stage2 of=/dev/fd0 bs=512 seek=1</p>
<p>grub</p>
<blockquote>
<p>root (hd0,0)</p>
<p>setup (hd0)</p>
</blockquote>
<p>quit</p>
<p>cat &gt; /boot/grub/menu.lst &lt;&lt; “EOF”</p>
<p>mkdir -v /etc/grub</p>
<p>ln -sv /boot/grub/menu.lst /etc/grub</p>
<p>5、完成制作</p>
<p>echo 6.3 &gt; /etc/lfs-release</p>
<p>sync</p>
<p>reboot</p>
<p>制作完毕！：-)</p>
<p><img src="http://img2.ph.126.net/aXVFRIrHp03lrh9b3NOsRQ==/6597672299028385782.jpg" alt="LFS制作-5、完成制作 - leaf - ------坚持雅操------" title="LFS制作-5、完成制作 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作-概念、原理</title>
    <url>/posts/319038377/</url>
    <content><![CDATA[<p>关键词：  </p>
<blockquote>
<p>核心、核心模块、内核函数库、核心头文件<br>函数库、函数库头文件、静态链接、动态链接<br>命令、命令驱动硬件  </p>
</blockquote>
<p>关键词理解：  </p>
<blockquote>
<p>核心：主要就是驱动硬件。<br>模块：提供对某种硬件的支持，供内核使用<br>内核函数库：实现某种功能，供内核使用<br>核心头文件：提供操作硬件的接口  </p>
<p>函数库：提供某些软件功能<br>函数库头文件：提供软件实现某些功能的接口  </p>
</blockquote>
<p>程序调用函数库和操作硬件  </p>
<blockquote>
<p>动态链接程序的源代码：  </p>
<blockquote>
<p>包含动态函数库头文件、内核函数库头文件  </p>
</blockquote>
<p>程序的编译：  </p>
<blockquote>
<p>包含哪些头文件，由ld命令找到对应的函数库，并链接起来制作成可执行文件。  </p>
</blockquote>
<p>命令如何调用动态函数库：  </p>
<blockquote>
<p>ld.inux.so.2通过查找/etc/ld.so.cache、/lib、/usr/lib 来找到对应的动态函数库  </p>
</blockquote>
<p>命令的运行：  </p>
<blockquote>
<p>调用动态函数库—&gt;实现软件功能  </p>
</blockquote>
<blockquote>
<p>调用动态函数库—&gt;调用内核函数库—-&gt;实现对硬件的操作  </p>
</blockquote>
</blockquote>
<p>程序编译流程：<br>源代码 (source code) → 预处理器 (preprocessor) → <a href="http://baike.baidu.com/view/487018.htm">编译器</a> (compiler) → <a href="http://baike.baidu.com/view/1315652.htm">汇编程序</a> (assembler) →<br>→目标代码 (object code) → <a href="http://baike.baidu.com/view/1402117.htm">链接器</a> (Linker) → 可执行程序 (executables)  </p>
<p>程序制作：         源代码(包含内核头文件和函数头文件)——-&gt;gcc——-&gt;as——–&gt;  </p>
<blockquote>
<blockquote>
<blockquote>
<p>ld(ld搜索路径并将头文件中提到的函数库进行链接)—&gt;可执行程序  </p>
</blockquote>
</blockquote>
</blockquote>
<p>程序的执行：     程序——-&gt;ld-linux.so加载相关的函数库——&gt;实现操作。  </p>
<p>工具链说明<br>linux-header：   <a href="http://baike.baidu.com/view/16068.htm#2">API</a>(函数库)，用户可以使用其接口编程来实现对计算机软件及硬件的操作。  </p>
<blockquote>
<blockquote>
<blockquote>
<p>存放位置：/usr/include  </p>
</blockquote>
</blockquote>
</blockquote>
<p>Glibc：              包含了主要的C函数库  </p>
<blockquote>
<blockquote>
<blockquote>
<p>存放位置：/lib、/usr/lib  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p><a href="http://zh.wikipedia.org/wiki/Ld.so">ld-linux.so</a>：动态加载器，由glibc提供。  </p>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p> 当应用程序需要使用动态链接库里的函数时，动态链接需要去找函数库，<br> 怎么找呢，就用到这个ld.so函数库。<br> 那ld.so去那里找动态函数库呢？下面就提供了搜索路径。  </p>
<blockquote>
<p>搜索动态链接库的顺序依此是<br>1、环境变量：LD_AOUT_LIBRARY_PATH(<a href="http://zh.wikipedia.org/wiki/A.out" title="A.out">a.out</a>格式)<br>      环境变量：LD_LIBRARY_PATH(<a href="http://zh.wikipedia.org/wiki/%E5%8F%AF%E5%9F%B7%E8%A1%8C%E8%88%87%E5%8F%AF%E9%8F%88%E6%8E%A5%E6%A0%BC%E5%BC%8F">ELF</a>格式)<br>2、/etc/ld.so.conf<br>3、缓存文件/etc/ld.so.cache。<br>     此为环境变量、/lib、/usr/lib、/etc/ld.so.conf指定目录的二进制索引文件。<br>     放入新函数库后要更新缓存，更新的命令是ldconfig。<br>4、默认目录，先在/lib中寻找，再到/usr/lib中寻找。  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>Binutils：           包括连接器、汇编器  </p>
<blockquote>
<blockquote>
<blockquote>
<p>存放位置：/usr  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>as：          汇编器，由binutils提供。  </p>
<blockquote>
<blockquote>
<p>用来汇编gcc 的输出，产生的目标文件然后交由连接器 ld 连接</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>ld：           链接器(连接器)，由binutils提供。此为编译时候用的命令。  </p>
<blockquote>
<blockquote>
<p>将一个或多个由编译器或汇编器生成的“目标文件”外加“库”链接为一个可执行文件。</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>ld搜索路径：ld –verbose | grep SEARCH  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>ld从下面地方找出动态函数库文件，然后进行连接。  </p>
</blockquote>
</blockquote>
<p><img src="http://img1.ph.126.net/4slhQLhSG3gGwp_Gxxn6eg==/630785422826341551.png" alt="LFS制作-概念、原理 - leaf - ------坚持雅操------" title="LFS制作-概念、原理 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>GCC：              包含C、C++等编译器  </p>
<blockquote>
<blockquote>
<blockquote>
<p>存放位置：/usr  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>注意一点：  </p>
</blockquote>
<blockquote>
<blockquote>
<p>所有的程序都是由/usr里面的工具制作出来的。<br>/usr目录就相当于windows下的program files + windows  </p>
</blockquote>
</blockquote>
<p>对linux内核不了解，以后会深入学的。以上只是自己的理解  </p>
<blockquote>
</blockquote>
<p>参考：  </p>
<blockquote>
<p>lfs6.2中文版<br><a href="http://zh.wikipedia.org/wiki/Ld.so">http://zh.wikipedia.org/wiki/Ld.so</a><br><a href="http://lsscto.blog.51cto.com/779396/904078">http://lsscto.blog.51cto.com/779396/904078</a><br><a href="http://blog.csai.cn/user1/265/archives/2005/2465.html">http://blog.csai.cn/user1/265/archives/2005/2465.html</a><br><a href="http://www.simplemind.info/technolife/linuxsystem/lfs-problem.html">http://www.simplemind.info/technolife/linuxsystem/lfs-problem.html</a><br><a href="http://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8">http://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8</a>  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作流程记录</title>
    <url>/posts/769538398/</url>
    <content><![CDATA[<p>00、硬盘分区、挂载硬盘  </p>
<p>00、用主系统制作临时系统，然后chroot到临时系统<br>-——————————————————-以上完成制作环境  </p>
<p>01、建dev,proc,sys等目录<br>02、建FHS相关目录<br>03、建系统用户<br>04、编译内核头文件<br>05、编译glibc<br>06、调整工具链(由临时系统调整到目标系统)<br>07、编译binutils,gcc (汇编、编译、连接器等)<br>-——————————————————–以上完成目标系统的工具链，(工具链是linux系统的基础)  </p>
<p>08、安装基础功能软件(如udev,grub,bootscript,make,tar,openssl等)<br>      关于软件安装目录：<br>             如QQ：其命令qq.exe安装在   bin文件夹下<br>                          其库文件安装在          bin文件夹下<br>                          其他相关文件安装在   bin文件夹下<br>             而linux的软件呢：<br>                          其命令安装在               /usr/bin文件夹下<br>                          其库文件安装在            /usr/lib文件夹下<br>                          其他相关文件安装在     /usr/share/相关文件夹下<br>           一个是什么都放在一个文件夹下，一个是分开放，仅此而已<br>-———————————————————<br>09、安装linux内核<br>10、配置系统(如设定时间、键盘、网络、fstab等)<br>11、设置启动器(将grub写入MBR)<br>-——————————————————以上完成系统制作  </p>
<p>其实以上过程跟我们用光盘安装系统的过程相类似，只是一个是手动安装一个是脚本自动安装<br>1、设置语言<br>2、设置键盘<br>3、设置时区<br>4、分区 、格式化<br>5、安装软件、内核<br>6、设置用户名、密码<br>7、设置启动器<br>重启完成系统安装<br>-——————————————————-  </p>
<p>12、安装完后，缺少什么软件装什么软件</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 系统测试软件4枚</title>
    <url>/posts/1375113552/</url>
    <content><![CDATA[<p>cpuburn  测试cpu稳定性<br>sudo apt-get install cpuburn<br>burnP6 || echo $? &amp;    几核就开几个  </p>
<p><img src="http://img1.ph.126.net/JwfOWt5VQwBlnfrOmDLJUw==/2435321498519146474.png" alt="linux 系统测试软件4枚 - leaf - ------勤解万难------" title="linux 系统测试软件4枚 - leaf - ------勤解万难------"></p>
<p> <br>burnintest  拷机软件  免费试用30天  </p>
<p><img src="http://img1.ph.126.net/iFcjHlm6YIxhUmfX206yqA==/6630750006840901435.png" alt="linux 系统测试软件4枚 - leaf - ------勤解万难------" title="linux 系统测试软件4枚 - leaf - ------勤解万难------"></p>
<p> <br>iptop 流量监控工具<br>sudo apt-get install iptop  </p>
<p><img src="http://img1.ph.126.net/7R2IJ6fgI8Ks6ZEkMrBNKQ==/6630889644817625518.png" alt="linux 系统测试软件4枚 - leaf - ------勤解万难------" title="linux 系统测试软件4枚 - leaf - ------勤解万难------"></p>
<p> <br>流量监控工具iptraf (功能强大)<br>sudo apt-get install iptraf  </p>
<p><img src="http://img1.ph.126.net/RGv0IA5WQCZEyMpDM8fo4w==/6631408614304992811.png" alt="linux 系统测试软件4枚 - leaf - ------勤解万难------" title="linux 系统测试软件4枚 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>linux下u盘启动盘制作工具---Unetbootin</title>
    <url>/posts/2594647187/</url>
    <content><![CDATA[<p>本文被删除过，但觉得仍然有必要放上，所以重建了一次  </p>
<p>注意：U盘只能格式化为FAT32，才能被识别  </p>
<p><img src="http://img0.ph.126.net/4OWy0q-jif55qW-hYguKow==/2497527468371563790.png" alt="linux下u盘启动盘制作工具---Unetbootin - leaf - ------坚持雅操------" title="linux下u盘启动盘制作工具---Unetbootin - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/M4MQNPWfBzXPiM8KfVC3hg==/1015280241013234840.png" alt="linux下u盘启动盘制作工具---Unetbootin - leaf - ------坚持雅操------" title="linux下u盘启动盘制作工具---Unetbootin - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img8.ph.126.net/_VhTs0S7A0YZATqajRfVuw==/6597730573144936398.png" alt="linux下u盘启动盘制作工具---Unetbootin - leaf - ------坚持雅操------" title="linux下u盘启动盘制作工具---Unetbootin - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>linux学习计划</title>
    <url>/posts/3484049872/</url>
    <content><![CDATA[<p>目标：linux网络编程方向发展</p>
<p>基础：</p>
<blockquote>
<p>学习目标：  </p>
<blockquote>
<p>学习计算机的基础知识、学习linux的使用和管理  </p>
</blockquote>
<p>学习内容：  </p>
<blockquote>
<p>学习微机原理、计算机网络、操作系统等基础知识<br>掌握日常命令，习惯linux环境，利用好lman、howto等学习工具  </p>
</blockquote>
<blockquote>
<p>积累用户管理和系统管理等经验  </p>
</blockquote>
</blockquote>
<blockquote>
<p>书本推荐：  </p>
</blockquote>
<blockquote>
<blockquote>
<p>操作系统——精髓与设计原理  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>计算机网络(谢希仁)<br>微机原理  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>鸟哥的私房菜</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>HOWTO<br>MAN手册  </p>
</blockquote>
</blockquote>
<p>进阶：  </p>
<blockquote>
<p>学习目标：  </p>
<blockquote>
<p>学习编程和软件制作原理，积累linux下开发经验。  </p>
</blockquote>
<p>学习内容：  </p>
<blockquote>
<p>学习C语言，学习bash脚本<br>了解编译、汇编、链接、调试等原理<br>了解Gcc，make，gdb等<br>学习开发工具的使用  </p>
</blockquote>
<p>书目推荐：  </p>
<blockquote>
<p>C程序设计(谭浩强)<br>shell编程(卧龙小三)<br>计算机专业英语<br>advanced linux programming<br>advanced bash sripting guide  </p>
</blockquote>
</blockquote>
<p>高级  </p>
<blockquote>
<p>学习目标：  </p>
<blockquote>
<p>掌握linux系统编程  </p>
</blockquote>
<p>学习内容：  </p>
<blockquote>
<p>学习linux API<br>学习linux系统编程，<br>学习linux内核代码。  </p>
</blockquote>
</blockquote>
<blockquote>
<p>书本推荐：  </p>
<blockquote>
<p>APUE(unix环境高级编程)  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>linux kernel development<br>understanding the linux kernel(深入理解linux内核)<br>linux device drivers(linux设备驱动程序)<br>professional linux kernel architecture(深入linux内核架构)<br>the art of unix programming  </p>
</blockquote>
</blockquote>
<p>应用：  </p>
<blockquote>
<p>网络方向：  </p>
<blockquote>
<p>服务器软件和并发程序编写，驱动开发的话直接可以写了。</p>
</blockquote>
</blockquote>
<blockquote>
<p>书本推荐：</p>
</blockquote>
<blockquote>
<blockquote>
<p>APUE<br>Linux Pthread POSIX多线程 编程指南<br>unix网络编程 卷一、卷二<br>TCP/IP网络详解 卷一、卷二、卷三</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>linux目录摘记</title>
    <url>/posts/332203575/</url>
    <content><![CDATA[<p>查看书名：系统架构和目录解析_邱世华  </p>
<p>/lib：存放函数库和内核模块  </p>
<blockquote>
<p>/lib/modules：存放内核模块ko<br>内核模块加载顺序：  </p>
<blockquote>
<p>/lib/modules/`uname -r`/initrd/—–&gt;<br>/lib/modules/`uname -r`/updates/—-&gt;<br>/lib/modules/`uname -r`/kernel/drivers/  </p>
</blockquote>
</blockquote>
<blockquote>
<p>/lib/security：存放PAM库文件so  </p>
<blockquote>
<p>用于PAM机制认证  </p>
</blockquote>
</blockquote>
<p>/etc/default：存放系统软件默认值的目录  </p>
<blockquote>
<p>如/etc/default/useradd：就设置了添加账户时的默认参数信息。  </p>
</blockquote>
<p>/dev：设备文件目录  </p>
<blockquote>
<p>操作系统Ring概念：  </p>
<blockquote>
<p>用户使用应用程序操作硬件—&gt;<br>应用程序调用模块—&gt;<br>模块使用虚拟文件系统中对应的文件—-&gt;<br>虚拟文件系统请求内核对硬件进行操作。  </p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>/proc：程序信息和系统设置目录  </p>
<blockquote>
<p>查看cpu信息：cat /proc/cpuinfo  </p>
</blockquote>
<p>/sys：系统分类信息  </p>
<blockquote>
<p>以分类的方式列出系统信息。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>macosx10.9.5 连接iscsi</title>
    <url>/posts/398682109/</url>
    <content><![CDATA[<p>用的软件是globalSAN。能实现相互chap</p>
<p><img src="http://img0.ph.126.net/86FroLKoqR1AhaIOP4kfaQ==/6598106606181206565.png" alt="macosx10.9.5 连接iscsi - leaf - ------勤解万难------" title="macosx10.9.5 连接iscsi - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/QMRusFZn-RdZU25icJ1D6g==/6631260180238713515.png" alt="macosx10.9.5 连接iscsi - leaf - ------勤解万难------" title="macosx10.9.5 连接iscsi - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/zDC2UPnPQftl5bV68yTzLQ==/6631405315773575428.png" alt="macosx10.9.5 连接iscsi - leaf - ------勤解万难------" title="macosx10.9.5 连接iscsi - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/vfHLPYVTUkI_I-Q4jBz3Wg==/6631254682680574675.png" alt="macosx10.9.5 连接iscsi - leaf - ------勤解万难------" title="macosx10.9.5 连接iscsi - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>msi EX465安装MACOSX ACPI</title>
    <url>/posts/2873657863/</url>
    <content><![CDATA[<p><a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1098975">http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1098975</a></p>
<p><a href="http://bbs.pcbeta.com/viewthread-594984-1-5.html">http://bbs.pcbeta.com/viewthread-594984-1-5.html</a></p>
<p>一、原生电源管理</p>
<p>1、加载AppleHPET</p>
<blockquote>
<p>搜索PNP0103</p>
<p>我的代码</p>
</blockquote>
<p>                Device (HPET)</p>
<p>                {</p>
<p>                    Name (_HID, EisaId (“PNP0103”))</p>
<p>                    Name (ATT3, ResourceTemplate ()</p>
<p>                    {</p>
<p>                        IRQNoFlags ()</p>
<p>                            {0}</p>
<p>                        IRQNoFlags ()</p>
<p>                            {8}</p>
<p>                        Memory32Fixed (ReadOnly,</p>
<p>                            0xFED00000,         // Address Base</p>
<p>                            0x00000400,         // Address Length</p>
<p>                            )</p>
<p>                    })</p>
<p>                    Name (ATT4, ResourceTemplate ()</p>
<p>                    {</p>
<p>                    })</p>
<p>                    Method (_CRS, 0, NotSerialized)</p>
<p>                    {</p>
<p>                        If (LEqual (HPFL (), One))</p>
<p>                        {</p>
<p>                            Return (ATT4)</p>
<p>                        }</p>
<p>                        Else</p>
<p>                        {</p>
<p>                            Return (ATT3)</p>
<p>                        }</p>
<p>                    }</p>
<p>                    Method (_STA, 0, NotSerialized)</p>
<p>                    {</p>
<p>                        If (LEqual (HPFL (), One))</p>
<p>                        {</p>
<p>                            Return (0x0A)</p>
<p>                        }</p>
<p>                        Else</p>
<p>                        {</p>
<p>                            Return (0x0F)</p>
<p>                        }</p>
<p>                    }</p>
<p>                }</p>
<blockquote>
<p>改为</p>
</blockquote>
<p>                Device (HPET)</p>
<p>                {</p>
<p>                    Name (_HID, EisaId (“PNP0103”))</p>
<p>                    Name (ATT3, ResourceTemplate ()</p>
<p>                    {</p>
<p>                        IRQNoFlags ()</p>
<p>                            {0}</p>
<p>                        IRQNoFlags ()</p>
<p>                            {8}</p>
<p>                        Memory32Fixed (ReadOnly,</p>
<p>                            0xFED00000,         // Address Base</p>
<p>                            0x00000400,         // Address Length</p>
<p>                            )</p>
<p>                    })</p>
<p>                    Method (_CRS, 0, NotSerialized)</p>
<p>                    {</p>
<p>                        Return (ATT3)</p>
<p>                    }</p>
<p>                    Method (_STA, 0, NotSerialized)</p>
<p>                    {</p>
<p>                        Return (0x0F)</p>
<p>                    }</p>
<p>                }</p>
<blockquote>
<p>重启后应该已加载AppleHPET</p>
</blockquote>
<p>2、加载AppleLPC</p>
<blockquote>
<p>搜索：Name (_ADR, 0x00020000)</p>
<p>一、在Device前加入以下代码</p>
</blockquote>
<p>                Method (_DSM, 4, NotSerialized)</p>
<p>                {</p>
<p>                    Store (Package (0x08)</p>
<p>                        {</p>
<p>                            “device-id”,</p>
<p>                            Buffer (0x04)</p>
<p>                            {</p>
<p>                                 0xAC, 0x0A, 0x00, 0x00</p>
<p>                            },</p>
<blockquote>
<blockquote>
<blockquote>
<p> “vendor-id”, </p>
</blockquote>
</blockquote>
</blockquote>
<p>                            Buffer (0x04)</p>
<p>                            {</p>
<p>                                0xDE, 0x10, 0x00, 0x00</p>
<p>                            }, </p>
<p>                            “IOName”, </p>
<p>                            Buffer (0x0D)</p>
<p>                            {</p>
<p>                                “pci10de,aac”</p>
<p>                            }, </p>
<p>                            “name”, </p>
<p>                            Buffer (0x0D)</p>
<p>                            {</p>
<p>                                “pci10de,aac”</p>
<p>                            }</p>
<p>                        }, Local0)</p>
<p>                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))</p>
<p>                    Return (Local0)</p>
<blockquote>
<p>二、在dsdt头部的method模块前面加入以下代码</p>
<p>备注：不加会出现DTGP错误</p>
</blockquote>
<blockquote>
<p>    Method (DTGP, 5, NotSerialized)</p>
<p>    {</p>
<p>        If (LEqual (Arg0, Buffer (0x10)</p>
<p>                {</p>
<p>                    /* 0000 */   0xC6, 0xB7, 0xB5, 0xA0, 0x18, 0x13, 0x1C, 0x44,</p>
<p>                    /* 0008 */   0xB0, 0xC9, 0xFE, 0x69, 0x5E, 0xAF, 0x94, 0x9B</p>
<p>                }))</p>
<p>        {</p>
<p>            If (LEqual (Arg1, One))</p>
<p>            {</p>
<p>                If (LEqual (Arg2, Zero))</p>
<p>                {</p>
<p>                    Store (Buffer (One)</p>
<p>                        {</p>
<p>                             0x03</p>
<p>                        }, Arg4)</p>
<p>                    Return (One)</p>
<p>                }</p>
<p>                If (LEqual (Arg2, One))</p>
<p>                {</p>
<p>                    Return (One)</p>
<p>                }</p>
<p>            }</p>
<p>        }</p>
<p>        Store (Buffer (One)</p>
<p>            {</p>
<p>                 0x00</p>
<p>            }, Arg4)</p>
<p>        Return (Zero)</p>
<p>    }</p>
<p>重启应该已加载AppleLPC.kext </p>
<p>仿冒的是10de;nVidia Corporation;0aac;MCP79 LPC Bridge;Bridge;ISA bridge</p>
</blockquote>
<p>3、更改相关kext</p>
<blockquote>
<p>打开最新fakesmc，</p>
</blockquote>
<blockquote>
<blockquote>
<p>修改相关参数</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>Contents下新建文件夹PlugIns，放入相关kext。然后把fakesmc加入/S/L/E下</p>
</blockquote>
</blockquote>
<blockquote>
<p>删除Nullintercpumanagement.kext </p>
<p>重启 即可加载原生驱动了。</p>
</blockquote>
<p><img src="http://img1.ph.126.net/CUsEg0mdRS_8A1hiuHBwJQ==/6608250700398870511.jpg" alt="msi EX465安装MACOSX ACPI - leaf - ------坚持雅操------" title="msi EX465安装MACOSX ACPI - leaf - ------坚持雅操------"></p>
<p> </p>
<p> 二、CPU降频</p>
<blockquote>
<p><a href="http://bbs.pcbeta.com/viewthread-1071634-1-1.html">http://bbs.pcbeta.com/viewthread-1071634-1-1.html</a></p>
</blockquote>
<blockquote>
<p>我不添加SSDT也有2档降频。所以我直接加档位即可。</p>
</blockquote>
<blockquote>
<p>1、提取SSDT，并放入/Extra下面</p>
</blockquote>
<blockquote>
<p>2、变色龙勾选Drop SSDT</p>
</blockquote>
<blockquote>
<p>3、安装相关kext和工具查看CPU能变的频率</p>
</blockquote>
<blockquote>
<blockquote>
<p>安装VoodooMonitor.kext、VoodooPState.kext</p>
</blockquote>
<blockquote>
<p>打开Voodoomonitor.app 来查看所有的频率</p>
</blockquote>
<blockquote>
<p>记录如下：</p>
</blockquote>
<blockquote>
<p>十进制16进制control值</p>
</blockquote>
<blockquote>
<p>2546  &gt;09F2491F</p>
</blockquote>
<blockquote>
<p>2412096C091E</p>
</blockquote>
<blockquote>
<p>227808E6481D</p>
</blockquote>
<blockquote>
<p>21440860081C</p>
</blockquote>
<blockquote>
<p>201007DA471B</p>
</blockquote>
<blockquote>
<p>18760754071A</p>
</blockquote>
<blockquote>
<p>174206CE4619</p>
</blockquote>
<blockquote>
<p>160806480617</p>
</blockquote>
<p>4、按电压和频率倍数算出大致的使用电量</p>
</blockquote>
<blockquote>
<blockquote>
<p>十六进制算出电量电压外频倍数</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>88b8   &lt;35000  =1100  X31</p>
</blockquote>
<blockquote>
<p>76E430436108728</p>
</blockquote>
<blockquote>
<p>6D2E27950107526</p>
</blockquote>
<blockquote>
<p>639025488106224</p>
</blockquote>
<blockquote>
<p>5A3C23100105022</p>
</blockquote>
<blockquote>
<p>510420740103720</p>
</blockquote>
<blockquote>
<p>481218450102518</p>
</blockquote>
<blockquote>
<p>3E8016000100016</p>
</blockquote>
<blockquote>
</blockquote>
<p>5、改有PSS代码的那个SSDT文件，我的是SSDT-1.aml</p>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>Name (_PSS, Package (0x08)</p>
</blockquote>
<blockquote>
<p>        {</p>
</blockquote>
<blockquote>
<p>            Package (0x06)</p>
</blockquote>
<blockquote>
<p>            {</p>
</blockquote>
<blockquote>
<p>                0x000009F2, </p>
</blockquote>
<blockquote>
<p>                0x000088B8, </p>
</blockquote>
<blockquote>
<p>                0x0000000A, </p>
</blockquote>
<blockquote>
<p>                0x0000000A, </p>
</blockquote>
<blockquote>
<p>                0x0000491F,</p>
</blockquote>
<blockquote>
<p>                0x0000491F</p>
</blockquote>
<blockquote>
<p>            }, </p>
</blockquote>
<blockquote>
<p>            Package (0x06)</p>
</blockquote>
<blockquote>
<p>            {</p>
</blockquote>
<blockquote>
<p>                0x0000096C, </p>
</blockquote>
<blockquote>
<p>                0x000076E4,</p>
</blockquote>
<blockquote>
<p>                0x0000000A, </p>
</blockquote>
<blockquote>
<p>                0x0000000A, </p>
</blockquote>
<blockquote>
<p>                0x0000091E, </p>
</blockquote>
<blockquote>
<p>                0x0000091E</p>
</blockquote>
<blockquote>
<p>            }, </p>
</blockquote>
<blockquote>
<p>            Package (0x06)</p>
</blockquote>
<blockquote>
<p>            {</p>
</blockquote>
<blockquote>
<p>                0x000008E6,</p>
</blockquote>
<blockquote>
<p>                0x00006D2E,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000481D,</p>
</blockquote>
<blockquote>
<p>                0x0000481D</p>
</blockquote>
<blockquote>
<p>            }, </p>
</blockquote>
<blockquote>
<p>            Package (0x06)</p>
</blockquote>
<blockquote>
<p>            {</p>
</blockquote>
<blockquote>
<p>                0x00000860,</p>
</blockquote>
<blockquote>
<p>                0x00006390,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000081C,</p>
</blockquote>
<blockquote>
<p>                0x0000081C</p>
</blockquote>
<blockquote>
<p>            }, </p>
</blockquote>
<blockquote>
<p>            Package (0x06)</p>
</blockquote>
<blockquote>
<p>            {</p>
</blockquote>
<blockquote>
<p>                0x000007DA,</p>
</blockquote>
<blockquote>
<p>                0x00005A3C,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000471B,</p>
</blockquote>
<blockquote>
<p>                0x0000471B</p>
</blockquote>
<blockquote>
<p>            }, </p>
</blockquote>
<blockquote>
<p>            Package (0x06)</p>
</blockquote>
<blockquote>
<p>            {</p>
</blockquote>
<blockquote>
<p>                0x00000754,</p>
</blockquote>
<blockquote>
<p>                0x00005104,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000071A,</p>
</blockquote>
<blockquote>
<p>                0x0000071A</p>
</blockquote>
<blockquote>
<p>            }, </p>
</blockquote>
<blockquote>
<p>            Package (0x06)</p>
</blockquote>
<blockquote>
<p>            {</p>
</blockquote>
<blockquote>
<p>                0x000006CE,</p>
</blockquote>
<blockquote>
<p>                0x00004812,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x00004619,</p>
</blockquote>
<blockquote>
<p>                0x00004619</p>
</blockquote>
<blockquote>
<p>            }, </p>
</blockquote>
<blockquote>
<p>            Package (0x06)</p>
</blockquote>
<blockquote>
<p>            {</p>
</blockquote>
<blockquote>
<p>                0x00000648,</p>
</blockquote>
<blockquote>
<p>                0x00003E80,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x0000000A,</p>
</blockquote>
<blockquote>
<p>                0x00000617,</p>
</blockquote>
<blockquote>
<p>                0x00000617</p>
</blockquote>
<blockquote>
<p>            }</p>
</blockquote>
<blockquote>
<p>        })</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>备注：</p>
</blockquote>
<blockquote>
<p>1、有中间频率，但是不会稳在中间频率。你动几下就能看到中间频率。</p>
</blockquote>
<blockquote>
<p>2、也可以直接在DSDT里面添加代码即可。参见<a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&tid=1098975">第一个地址</a></p>
</blockquote>
<blockquote>
</blockquote>
<p>三、关机断电</p>
<blockquote>
<p><a href="http://bbs.pcbeta.com/viewthread-900017-1-1.html">http://bbs.pcbeta.com/viewthread-900017-1-1.html</a></p>
<p>搜索Method (_PTS, 1, NotSerialized) 只要在里面添加Else和一对｛｝即可</p>
<p>    Method (_PTS, 1, NotSerialized)</p>
<p>    {</p>
<p>        If (LEqual (Arg0, 0x05))</p>
<p>        {</p>
<p>            Store (Zero, SLPE)</p>
<p>            Sleep (0x10)</p>
<p>        }</p>
<p>        Else</p>
<p> {</p>
<p>            Store (Arg0, DBG8)</p>
<p>            PTS (Arg0)</p>
<p>            Store (Zero, Index (WAKP, Zero))</p>
<p>            Store (Zero, Index (WAKP, One))</p>
<p>            If (LAnd (LEqual (Arg0, 0x04), LEqual (OSFL (), 0x02)))</p>
<p>            {</p>
<p>                Sleep (0x0BB8)</p>
<p>            }</p>
<p>            Store (ASSB, WSSB)</p>
<p>            Store (AOTB, WOTB)</p>
<p>            Store (AAXB, WAXB)</p>
<p>            Store (Arg0, ASSB)</p>
<p>            Store (OSFL (), AOTB)</p>
<p>            Store (Zero, AAXB)</p>
<p>        }</p>
<p>    }</p>
<p>备注：因USB问题导致无法重启和睡眠，正在解决中。。。</p>
</blockquote>
<p>四、睡眠</p>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>msi EX465安装MACOSX 其他</title>
    <url>/posts/3687094808/</url>
    <content><![CDATA[<p>PCI configuration begin</p>
<blockquote>
<p>测试：替换AppleACPIPlatform 和 IOPCIFamily</p>
<p>10.6 3-7 可行，10.6.8不可用</p>
<p>10.7 dp1可行， dp2-4不可用</p>
<p>10.7                     0-5 不可用</p>
<p>10.8                  dp1-4不可用</p>
<p>10.8                     0-2 不可用</p>
</blockquote>
<p>电池驱动</p>
<blockquote>
<p>直接用AppleACPIBatteryManager.kext 即可</p>
<p><a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1038183">http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1038183</a></p>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/LTYvusqdY-kXe1evuGR9zg==/4938478466488554991.jpg" alt="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------"></p>
<p><img src="http://img0.ph.126.net/Z9aGs6n4SDMrLFQtvDhH1A==/1689694285294383846.jpg" alt="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>触摸板</p>
<blockquote>
<p>我的触摸板是synaptics touchpad6.2 版本的</p>
<p>下载以下版本应该都可以，我还不怎么会用。</p>
<p><img src="http://img0.ph.126.net/_DpcAlGdRoiYNzN5I0yhKA==/6597899897937354807.jpg" alt="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<blockquote>
<p><a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1399288">http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1399288</a></p>
<p><a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1104482">http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1104482</a></p>
<p><a href="http://bbs.pcbeta.com/viewthread-1260111-1-1.html">http://bbs.pcbeta.com/viewthread-1260111-1-1.html</a></p>
<p><a href="http://bbs.pcbeta.com/viewthread-1155823-2-1.html">http://bbs.pcbeta.com/viewthread-1155823-2-1.html</a></p>
</blockquote>
<blockquote>
<p>键盘位</p>
<p><img src="http://img0.ph.126.net/Wqgaujby7h6L1XjfKpCAHA==/1384856885516706702.jpg" alt="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------"></p>
<p> </p>
<p> </p>
</blockquote>
<p>亮度</p>
<blockquote>
<p><a href="http://bbs.pcbeta.com/viewthread-825117-1-3.html">http://bbs.pcbeta.com/viewthread-825117-1-3.html</a></p>
</blockquote>
<blockquote>
<p><a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=889877">http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=889877</a></p>
</blockquote>
<blockquote>
<p><a href="http://dell.benyouhui.it168.com/thread-4533070-1-1.html">http://dell.benyouhui.it168.com/thread-4533070-1-1.html</a></p>
</blockquote>
<blockquote>
<p>我的按FN+方向键就能调亮度，只是没有亮度图标</p>
</blockquote>
<blockquote>
<p>dsdt搜索Device (PWRB)，在其上面加上代码即可。</p>
</blockquote>
<blockquote>
<blockquote>
<p>Device (PNLF)</p>
</blockquote>
<blockquote>
<p>{</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>Name (_HID, EisaId (“APP0002”))</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>Name (_CID, “backlight”)</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>Name (_UID, 0x0A)</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>Name (_STA, 0x0B)</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>}</p>
</blockquote>
<p><img src="http://img0.ph.126.net/NOcTcpmWJMOj1-E6vVcjZw==/4844184349290525828.jpg" alt="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 其他 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>亮度保存</p>
<p>1、nvram -x -p &gt; /Extra/nvram.plist</p>
<p>2、复制rc.shutdown.local放到/etc下 (需要显示隐藏文件)</p>
</blockquote>
<blockquote>
<p> 复制com.delta.nvram.set.plist放到/Library/launchDaemons/下 </p>
<p>3、修复权限</p>
<p>01.sudo chown 0:0 /Library/LaunchDaemons/com.delta.nvram.set.plist</p>
<p>02.sudo chown 0:0 /private/etc/rc.shutdown.local</p>
<p>备注：感觉还是上下键方便，亮度保存没试过。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>msi EX465安装MACOSX 声卡驱动</title>
    <url>/posts/3100805840/</url>
    <content><![CDATA[<p>本篇没有成功，只记录过程。</p>
<p><a href="http://bbs.pcbeta.com/viewthread.php?tid=623626&highlight=+%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD">http://bbs.pcbeta.com/viewthread.php?tid=623626&amp;highlight=%2B%D7%CF%C3%D7</a></p>
<p><a href="http://bbs.pcbeta.com/viewthread-1017396-1-1.html">http://bbs.pcbeta.com/viewthread-1017396-1-1.html</a></p>
<p>步骤如下：</p>
<p>1、提取声卡原始信息</p>
<p>2、摘取相关信息</p>
<p>3、得出 pin config，pathmap等数据</p>
<p>4、更改相关文件，对applehda打补丁</p>
<p>5、dsdt.aml文件更改</p>
<p>一、提取声卡信息</p>
<blockquote>
<p>进ubuntu，使用root权限</p>
<p>cat /proc/asound/card0/codec#？ &gt; Codec.txt</p>
</blockquote>
<p>二、摘取 Address、Node、Pin Default 这三个数值</p>
<p>Codec: Realtek ALC662 rev1</p>
<p>Address: 0</p>
<p>Vendor Id: 0x10ec0662</p>
<p>0x14  0x0121141f: [Jack] HP Out at Ext Rear    Black          0x0c         OUT HP                 耳麦接口</p>
<p>0x18  0x01a11c20: [Jack] Mic at Ext Rear          Black         0x0e         IN VREF_80            麦克风接口</p>
<p>0x19  0x99a3092f: [Fixed] Mic at Int ATAPI         Unknown   0X0c* 0x0e   IN VREF_80        电脑麦克风</p>
<p>0x1b  0x99130110: [Fixed] Speaker at Int ATAPI Unknown   0x0c 0X0e*   OUT VREF_HIZ   电脑扬声器</p>
<blockquote>
<p>按下图更换位置</p>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/GqH0lWiPCpSwkKmbW0yy7Q==/1837750123043916662.jpg" alt="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>0x14 1f 14 21 01 [Jack] HP Out at Ext Rear Black    0x0c OUT HP 耳麦接口</p>
<p>0x18 20 1c a1 01 [Jack] Mic at Ext Rear Black    0x0e IN VREF_80 麦克风接口</p>
<p>0x19 2f 09 a3 99 [Fixed] Mic at Int ATAPI Unknown 0X0c* 0x0e IN VREF_80 电脑麦克风</p>
<p>0x1b 10 01 13 99 [Fixed] Speaker at Int ATAPI Unknown 0x0c 0X0e* OUT VREF_HIZ 电脑扬声器</p>
<p>备注：其他接口由于是N/A，所以全部加屏蔽即可</p>
<p>三-一、ConfigData</p>
<blockquote>
<p>第一位代表关联的设备(仅针对多声道)</p>
</blockquote>
<blockquote>
<blockquote>
<p>HP是5</p>
</blockquote>
<blockquote>
<p>外置麦克风按line in设置： 2</p>
</blockquote>
<blockquote>
<p>内置麦克风按mic设置：1</p>
</blockquote>
<blockquote>
<p>扬声器按intspeaker设置：4</p>
</blockquote>
<p>第二位设置声道有关</p>
<p>这边全部设置为0</p>
</blockquote>
<p>第三位代表接口颜色</p>
<p>black 1 unknown 0</p>
<p>1</p>
<p>1</p>
<p>0</p>
<p>0</p>
<blockquote>
<p>第四位设置是否侦测插口</p>
</blockquote>
<p>侦测 0  不侦测 1</p>
<p>0</p>
<p>0</p>
<p>1</p>
<p>1</p>
<p>第五位表示设备类型</p>
<p>HP2</p>
<p>line in8</p>
<p>mica</p>
<p>扬声器1</p>
<p>第六位表示连接类型</p>
<p>笔记本保持原样</p>
<p>1</p>
<p>1</p>
<p>3</p>
<p>3</p>
<p>第七位表示是否有插孔和插孔位置</p>
<p>外接 0 内置 9</p>
<p>0</p>
<p>0</p>
<p>9</p>
<p>9</p>
<p>第八位表示插口所在位置</p>
<p>内置和屏蔽 0 其余为1</p>
<p>1</p>
<p>1</p>
<p>0</p>
<p>0</p>
<p>得出</p>
<p>1450 10 21 01</p>
<p>1820 10 81 01</p>
<p> 1910 01 a3 90</p>
<p>1b40 01 13 90</p>
<p>屏蔽代码 f0 00 00 40</p>
<p>按下图整理出最终数据。因有EAPD，加入代码01470c02</p>
<blockquote>
<p><img src="http://img1.ph.126.net/4_V10ARmiHyjLIlgcun-YA==/1994531685072004159.jpg" alt="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>01471c50 01471d10 01471e21 01471f01 01571cf0 01571d00 01571e00 01571f40 01671cf0 01671d00 01671e00 01671f40 01871c20 01871d10 01871e81 01871f01 01971c10 01971d01 01971ea3 01971f90 01a71cf0 01a71d00 01a71e00 01a71f40 01b71c40 01b71d01 01b71e13 01b71f90 01c71cf0 01c71d00 01c71e00 01c71f40 01d71cf0 01d71d00 01d71e00 01d71f40 01e71cf0 01e71d00 01e71e00 01e71f40 01470c02<br> 备注：需要一行写完，不能有回车</p>
<p>三-二、PathMap</p>
<blockquote>
<p><a href="http://bbs.pcbeta.com/viewthread-613358-1-1.html">http://bbs.pcbeta.com/viewthread-613358-1-1.html</a></p>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/l06WX7v8qTr75TuNKC2P_w==/6597629418076920580.jpg" alt="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------"></p>
<p>原则：输入是从后往前推断节点，输出是从前往后推</p>
<p>下载工具graphviz，codecgraph</p>
<p>运行命令   ./codecgraph codec.txt ，然后用AI导出png图片</p>
<p><img src="http://img1.ph.126.net/uJcIWiNYKGMqIpSjIOuF2w==/3016848800485121575.png" alt="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------"></p>
<p> 可以很清楚的看出节点图，按codec图找也是差不多的。</p>
<p>140c02</p>
<p>092218</p>
<p>082319</p>
<p>1b0e04</p>
</blockquote>
<p>四、更改相关文件</p>
<p>更改的文件包括AppleHDAHardwareConfigDriver.kext/Contents下面的Info.plist、layout86.xml、Platforms.xml、applehda打补丁。</p>
<p>其中applehda打补丁</p>
<p>可以下载PATCHHDA打，或者用0XDE将885改成662即可</p>
<p>sudo perl -pi -e ‘s|\x85\x08\xec\x10|\x62\x06\xec\x10|g’ /System/Library/Extensions/AppleHDA.kext/Contents/MacOS/AppleHDA</p>
<blockquote>
</blockquote>
<p>五、dsdt.aml文件修改</p>
<p>用voodoohda，然后查看在哪个节点，我的是HDA，</p>
<p>然后改HDA这个节点，将HDA改成HDEF(有2处)</p>
<p>用IDSDT生成dsdt代码，然后再改</p>
<p>dsdt代码如下：method部分</p>
<pre><code>        Device (HDEF)            &#123;                Name (\_ADR, 0x000F0000)                Method (\_DSM, 4, NotSerialized)                &#123;                    Store (Package (0x08)                        &#123;                            &quot;codec-id&quot;,                             Buffer (0x04)                            &#123;                                0x62, 0x06, 0xEC, 0x10                            &#125;,                             &quot;layout-id&quot;,                             Buffer (0x04)                            &#123;                                0x96, 0x02, 0x00, 0x00                            &#125;,                             &quot;device-type&quot;,                             Buffer (0x0F)                            &#123;                                &quot;Realtek ALC662&quot;                            &#125;,                             &quot;PinConfigurations&quot;,                             Buffer (Zero) &#123;&#125;                        &#125;, Local0)                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))                    Return (Local0)                &#125;</code></pre>
<blockquote>
</blockquote>
<p>六、关于pinconfigurations</p>
<p>dsdt 改pinconfigurations 可以在系统信息里面显示声卡信息。具体更改如下</p>
<p>         “PinConfigurations”, </p>
<p> Buffer (0x28) </p>
<p> {0x50, 0x10, 0x21, 0x01, 0xF0, 0x00, 0x00, 0x40, </p>
<p>0xF0, 0x00, 0x00, 0x40, 0x20, 0x10, 0x81, 0x01, </p>
<p>0x10, 0x01, 0xA3, 0x90, 0xF0, 0x00, 0x00, 0x40, </p>
<p>0x40, 0x01, 0x13, 0x90, 0xF0, 0x00, 0x00, 0x40, </p>
<p>0xF0, 0x00, 0x00, 0x40, 0xF0, 0x00, 0x00, 0x40 }</p>
<p>备注：代码就是上面得出的代码</p>
<p>显示如下</p>
<p><img src="http://img0.ph.126.net/K64uUlyS4T_yY8_kyZFrWw==/860750478881228391.jpg" alt="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 声卡驱动 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>msi EX465安装MACOSX 显卡驱动</title>
    <url>/posts/3670975691/</url>
    <content><![CDATA[<p>原理：</p>
<blockquote>
<p>dsdt让系统知道有这个显卡</p>
<p>FB告诉系统该显卡是如何处理信号的。</p>
</blockquote>
<p>我是按这帖子做的：ATI 5系和6系显卡驱动&amp;修改FB探讨</p>
<p>具体步骤：</p>
<p>1、查看显卡信息。</p>
<blockquote>
<p>GPU-Z可以查看</p>
</blockquote>
<p>2、将ID加入到ATI5000Controller.kext和AMDRadeonAccelerator.kext中</p>
<blockquote>
<p>5470m的ID里面有，所以不需要添加</p>
</blockquote>
<p>3、提取rom，修改你的接口信息</p>
<blockquote>
<p>1、rom提取用aida64提取</p>
<p>2、用radeon_bios_decode和redsock_bios_decoder提取显卡信息</p>
<p>./radeon_bios_decode &lt; 1002_68E0.rom</p>
</blockquote>
<blockquote>
<blockquote>
<p>ATOM BIOS Rom:</p>
</blockquote>
<blockquote>
<p>        SubsystemVendorID: 0x1462 SubsystemID: 0x1043       </p>
</blockquote>
<blockquote>
<p>        IOBaseAddress: 0xd800                                            </p>
</blockquote>
<blockquote>
<p>        Filename: BR35393.012</p>
</blockquote>
<blockquote>
<p>        BIOS Bootup Message:</p>
</blockquote>
<blockquote>
<p>MSI MS1455 PARK S3 LP DDR3 64Mx16 512MB                                    </p>
</blockquote>
<blockquote>
<p>PCI ID: 1002:68e0</p>
</blockquote>
<blockquote>
<p>Connector at index 0</p>
</blockquote>
<blockquote>
<p>        Type [@offset 44904]: LVDS (7)</p>
</blockquote>
<blockquote>
<p>        Encoder [@offset 44908]: INTERNAL_UNIPHY (0x1e)</p>
</blockquote>
<blockquote>
<p>        i2cid [@offset 44960]: 0x90, OSX senseid: 0x1</p>
</blockquote>
<blockquote>
<p>Connector at index 1</p>
</blockquote>
<blockquote>
<p>        Type [@offset 44914]: VGA (1)</p>
</blockquote>
<blockquote>
<p>        Encoder [@offset 44918]: INTERNAL_KLDSCP_DAC1 (0x15)</p>
</blockquote>
<blockquote>
<p>        i2cid [@offset 44983]: 0x97, OSX senseid: 0x8</p>
</blockquote>
</blockquote>
<blockquote>
<p>./redsock_bios_decoder &lt; 1002_68E0.rom</p>
</blockquote>
<blockquote>
<blockquote>
<p>BR35393.012 :</p>
</blockquote>
<blockquote>
<p>MSI MS1455 PARK S3 LP DDR3 64Mx16 512MB                                    </p>
</blockquote>
<blockquote>
<p>Subsystem Vendor ID: 1462</p>
</blockquote>
<blockquote>
<p>       Subsystem ID: 1043</p>
</blockquote>
<blockquote>
<p>Object Header Structure Size: 140</p>
</blockquote>
<blockquote>
<p>Connector Object Table Offset: 2a</p>
</blockquote>
<blockquote>
<p>Router Object Table Offset: 0</p>
</blockquote>
<blockquote>
<p>Encoder Object Table Offset: 6c</p>
</blockquote>
<blockquote>
<p>Display Path Table Offset: 12</p>
</blockquote>
<blockquote>
<p>Connector Object Id [14] which is [LVDS]</p>
</blockquote>
<blockquote>
<p>        encoder obj id [0x1e] which is [INTERNAL_UNIPHY (osx txmit 0x10 [duallink 0x0] enc 0x0)] linkb: false</p>
</blockquote>
<blockquote>
<p>Connector Object Id [5] which is [VGA]</p>
</blockquote>
<blockquote>
<p>        encoder obj id [0x15] which is [INTERNAL_KLDSCP_DAC1 (osx txmit 0x00 enc 0x10?)] linkb: false</p>
</blockquote>
<p>提取的信息如下：</p>
</blockquote>
<blockquote>
<p>         txmit       enc      senseid</p>
<p>LVDS      10          00        01</p>
<p>VGA       00          10        08</p>
<p>LVDS前面部分</p>
</blockquote>
<blockquote>
<blockquote>
<p>02 00 00 00 40 00 00 00 09 01 00 00</p>
</blockquote>
</blockquote>
<blockquote>
<p>VGA前面部分</p>
</blockquote>
<blockquote>
<blockquote>
<p>10 00 00 00 10 00 00 00 00 01 00 00</p>
</blockquote>
</blockquote>
<blockquote>
<p>得到参数：</p>
</blockquote>
<blockquote>
<blockquote>
<p>LVDS 02 00 00 00 40 00 00 00 09 01 00 00 10 00 00 01</p>
</blockquote>
<blockquote>
<p>VGA  10 00 00 00 10 00 00 00 00 01 00 00 00 10 01 08</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>#紫色表示显示输出顺序，00表示最优先输出</p>
</blockquote>
</blockquote>
<blockquote>
<p>整理得到最终参数</p>
</blockquote>
<blockquote>
<blockquote>
<p>0200000040000000090100001000000110000000100000000001000000100108</p>
</blockquote>
</blockquote>
<blockquote>
<p>3、我们选用Zonalis参数</p>
</blockquote>
<blockquote>
<blockquote>
<p>我把5系列的参数基本上都试了一遍，最后才试到这个6接口的参数，坑爹啊！</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>000400000406000000710000200106060004000004060000007100001000050500040000040600000071000021030204000400000406000000710000110201030004000004060000007100002205040200040000040600000071000012040301</p>
</blockquote>
<blockquote>
<p>我的只有2个接口，其他全部用0替代得到</p>
</blockquote>
<blockquote>
<p>020000004000000009010000100000011000000010000000000100000010010800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</p>
</blockquote>
</blockquote>
<blockquote>
<p>4、我们更改ATI5000Contrller.kext&gt;Contents&gt;MacOS&gt; ATI5000Contrller</p>
</blockquote>
<blockquote>
<blockquote>
<p>用0XED打开，选16进制，搜索Zonalis参数，替换为下面的参数，保存即可</p>
</blockquote>
</blockquote>
<p>4、笔记本A卡，且senseid为07</p>
<blockquote>
<p>这一步就是改EDID，识别显示器用的，本LVDS接口是01，所以跳过<br>edid只是解决花屏或显示器识别问题，能正常进入桌面，说明edid暂时没什么问题。  </p>
</blockquote>
<p>5、加载你修改的FB</p>
<blockquote>
<p>这一步就是改dsdt.aml。用DSDTSE修改</p>
<p>1、用IDSDT将dsdt和rom信息写在一起</p>
<p>2、更改相关参数</p>
</blockquote>
<blockquote>
<blockquote>
<p>ATY后面原参数是Motmot。然后搜索Motmot，替换为Zonalis </p>
</blockquote>
<blockquote>
<p>再搜索ATY，往下拉，将@0,name，@1,name的ATY,Display-A、ATY,Display-B</p>
</blockquote>
<blockquote>
<p>之类的改为ATY,Zonalis。</p>
</blockquote>
<blockquote>
<p>将@0,name，@1,name，device_type 的 Buffer（xxx）里面的数字删掉</p>
</blockquote>
<blockquote>
<p>备注：我只有两个接口，所以只到@1,name</p>
</blockquote>
</blockquote>
<blockquote>
<p>3、点编译，生成新dsdt.aml。放入/Extra下面即可</p>
</blockquote>
<p>6、重启查看已QE</p>
<blockquote>
<p><img src="http://img0.ph.126.net/9oQ4gEe614K_IX4ZZx3SAg==/1983835635956987556.jpg" alt="msi EX465安装MACOSX 显卡驱动 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 显卡驱动 - leaf - ------坚持雅操------"></p>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/ow1qdSInakYScXDN6dzkFg==/2074470578457543017.jpg" alt="msi EX465安装MACOSX 显卡驱动 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 显卡驱动 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>附：我改过的参数整理。</p>
<p>Aticonfig: Douc</p>
<p>ConnectorInfo count in decimal: 2</p>
<p>Disk offset in decimal 165856</p>
<p>    02  00  00  00  00  05  00  00  09  03  00  00  21  03  02  02</p>
<p>    00  04  00  00  04  02  00  00  00  03  00  00  11  02  01  01</p>
<p>0200000000050000090300002103020200040000040200000003000011020101</p>
<p>Aticonfig: Langur</p>
<p>ConnectorInfo count in decimal: 3</p>
<p>Disk offset in decimal 165904</p>
<p>    00  04  00  00  04  06  00  00  00  01  00  00  21  03  04  02</p>
<p>    00  04  00  00  04  06  00  00  00  01  00  00  11  02  01  01</p>
<p>    04  00  00  00  14  02  00  00  00  01  00  00  02  04  05  03</p>
<p>000400000406000000010000210304020004000004060000000100001102010104000000140200000001000002040503</p>
<p>Aticonfig: Hoolock</p>
<p>ConnectorInfo count in decimal: 3</p>
<p>Disk offset in decimal 166176</p>
<p>    00  04  00  00  04  06  00  00  00  01  00  00  21  03  05  01</p>
<p>    00  04  00  00  04  06  00  00  00  01  00  00  11  02  04  02</p>
<p>    04  00  00  00  14  02  00  00  00  01  00  00  02  04  01  03</p>
<p>000400000406000000010000210305010004000004060000000100001102040204000000140200000001000002040103</p>
<p>Aticonfig: Baboon</p>
<p>ConnectorInfo count in decimal: 3</p>
<p>Disk offset in decimal 166288</p>
<p>    04  00  00  00  14  00  00  00  00  01  00  00  01  02  01  03</p>
<p>    00  08  00  00  00  02  00  00  00  71  00  00  22  05  02  01</p>
<p>    10  00  00  00  10  00  00  00  00  01  00  00  00  10  00  02</p>
<p>040000001400000000010000010201030008000000020000007100002205020110000000100000000001000000100002</p>
<p>Aticonfig: Eulemur</p>
<p>ConnectorInfo count in decimal: 3</p>
<p>Disk offset in decimal 166336</p>
<p>    04  00  00  00  14  00  00  00  00  01  00  00  01  02  01  04</p>
<p>    00  08  00  00  00  02  00  00  00  71  00  00  12  04  04  02</p>
<p>    10  00  00  00  10  00  00  00  00  00  00  00  00  10  00  01</p>
<p>040000001400000000010000010201040008000000020000007100001204040210000000100000000000000000100001</p>
<p>Aticonfig: Galago</p>
<p>ConnectorInfo count in decimal: 2</p>
<p>Disk offset in decimal 166384</p>
<p>    02  00  00  00  00  01  00  00  09  03  00  00  21  03  02  02</p>
<p>    00  04  00  00  04  06  00  00  00  73  00  00  11  02  01  01</p>
<p>0200000000010000090300002103020200040000040600000073000011020101</p>
<p>Aticonfig: Colobus</p>
<p>ConnectorInfo count in decimal: 2</p>
<p>Disk offset in decimal 166432</p>
<p>    02  00  00  00  00  01  00  00  09  03  00  00  21  03  02  02</p>
<p>    00  04  00  00  04  06  00  00  00  73  00  00  11  02  01  01</p>
<p>0200000000010000090300002103020200040000040600000073000011020101</p>
<p>Aticonfig: Mangabey</p>
<p>ConnectorInfo count in decimal: 2</p>
<p>Disk offset in decimal 166480</p>
<p>    02  00  00  00  40  00  00  00  09  01  00  00  00  00  00  03</p>
<p>    00  04  00  00  04  06  00  00  00  73  00  00  11  02  01  01</p>
<p>0200000040000000090100000000000300040000040600000073000011020101</p>
<p>Aticonfig: Orangutan</p>
<p>ConnectorInfo count in decimal: 2</p>
<p>Disk offset in decimal 166608</p>
<p>    02  00  00  00  40  00  00  00  09  01  00  00  00  00  00  05</p>
<p>    00  04  00  00  04  06  00  00  00  73  00  00  11  02  01  01</p>
<p>0200000040000000090100000000000500040000040600000073000011020101</p>
<p>Personality: Nomascus</p>
<p>ConnectorInfo count in decimal: 4</p>
<p>Disk offset in decimal 169072</p>
<p>    02  00  00  00  40  00  00  00  09  01  00  00  00  00  00  05</p>
<p>    02  00  00  00  00  01  00  00  09  03  00  00  12  04  03  03</p>
<p>    00  04  00  00  04  06  00  00  00  73  00  00  11  02  01  01</p>
<p>    00  04  00  00  04  07  00  00  00  73  00  00  21  03  02  02</p>
<p>02000000400000000901000000000005020000000001000009030000120403030004000004060000007300001102010100040000040700000073000021030202</p>
<p>Personality: Vervet</p>
<p>ConnectorInfo count in decimal: 4</p>
<p>Disk offset in decimal 168752</p>
<p>    00  04  00  00  00  04  00  00  00  71  00  00  12  04  04  02</p>
<p>    04  00  00  00  14  00  00  00  00  71  00  00  01  12  01  04</p>
<p>    00  02  00  00  14  00  00  00  00  71  00  00  00  00  06  03</p>
<p>    00  08  00  00  00  02  00  00  00  71  00  00  22  05  05  01</p>
<p>00040000000400000071000012040402040000001400000000710000011201040002000014000000007100000000060300080000000200000071000022050501</p>
<p>Personality: Alouatta</p>
<p>ConnectorInfo count in decimal: 4</p>
<p>Disk offset in decimal 168640</p>
<p>    02  00  00  00  00  01  00  00  09  01  00  00  12  04  03  03</p>
<p>    00  04  00  00  04  06  00  00  00  71  00  00  11  02  01  01</p>
<p>    00  04  00  00  04  06  00  00  00  71  00  00  21  03  02  02</p>
<p>    00  04  00  00  04  06  00  00  00  71  00  00  22  05  04  04</p>
<p>02000000000100000901000012040303000400000406000000710000110201010004000004060000007100002103020200040000040600000071000022050404</p>
<p>Personality: Uakari</p>
<p>ConnectorInfo count in decimal: 4</p>
<p>Disk offset in decimal 168480</p>
<p>    00  04  00  00  00  04  00  00  00  71  00  00  12  04  04  01</p>
<p>    04  00  00  00  14  00  00  00  00  71  00  00  01  12  01  03</p>
<p>    00  02  00  00  14  00  00  00  00  71  00  00  00  00  06  05</p>
<p>    00  08  00  00  00  02  00  00  00  71  00  00  22  05  05  04</p>
<p>00040000000400000071000012040401040000001400000000710000011201030002000014000000007100000000060500080000000200000071000022050504</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>msi EX465安装MACOSX 系统安装</title>
    <url>/posts/1858804712/</url>
    <content><![CDATA[<p>备注：显卡方法适用10.9.5以下，不适合10.10。</p>
<p>电脑配置如下：</p>
<blockquote>
<p>处理器英特尔 酷睿2 双核 P8700 @ 2.53GHz 笔记本处理器</p>
<p>主板微星 MS-1455 (矽统 672DX)+ SIS968</p>
<p>内存4 GB ( 海力士 DDR2 800MHz / 金泰克 DDR2 800MHz )</p>
<p>硬盘希捷 ST500LT012-9WS142 ( 500 GB / 5400 转/分 )</p>
<p>硬盘西数 WDC WD3200BEVT-22A23T0 ( 320 GB / 5400 转/分 )</p>
<p>硬盘日立 ( 500 GB / 5400 转/分 )</p>
<p>显卡ATI Mobility Radeon HD 5470  ( 1 GB / 微星 )</p>
<p>显示器三星 SEC3050 ( 14.7 英寸 )</p>
<p>声卡瑞昱 ALC662 @ 矽统 Azalia Audio Controller</p>
<p>网卡矽统 191 100/10 Ethernet Adapter / 微星</p>
<p>无线网卡雷凌 RT2870</p>
<p>蓝牙motolola</p>
<p>USBPNY 8G</p>
</blockquote>
<p>0、硬件准备工作：</p>
<blockquote>
<p>1、因BIOS无法设置AHCI，导致无法U盘安装，只能硬盘安装</p>
<p>2、我准备了3个硬盘，分别用来安装winxp，macosx，ubuntu。</p>
</blockquote>
<blockquote>
<blockquote>
<p>2.1、win盘分出10G的FAT32盘，制作安装盘。后用DiskGenius将FAT32的OC改为AF</p>
</blockquote>
</blockquote>
<blockquote>
<p>3、笔记本我把光驱位拆了，装了一块用于安装macosx的硬盘</p>
<p>4、我要安装的是单系统，所以安装盘做在winxp这块硬盘的第二个主分区上</p>
<p>5、U盘和winxp安装变色龙都可以引导</p>
</blockquote>
<p>1、软件准备工作：  </p>
<blockquote>
<p>SIS芯片需要专用KEXT，AppleVIAATA.kext.for.sis.SATA 就这一个即可</p>
<p>无法U盘安装，会提示still waiting for root device错误。只能硬盘分出一个区做安装盘。</p>
<p>win版变色龙启动有时候会提示：NullCPUPowerManagement.kext::start。重启重引导即可。</p>
<p>需要使用参数npci=0x2000 -v ,不然会卡在PCI configure begin</p>
<p>做WIN+MAC的话需要将MAC分区设置为逻辑分区，做主分区会导致无法选取分区。</p>
<p>将BIOS的Legacy USB support设置为Disable。不然会提示</p>
<p>Echi controller unable to take control from bios (这个在新版已不需要设置)</p>
<p>准备的kext有这些：</p>
<p>NullCPUPowerManagement.kext</p>
<p>OpenHaltRestart.kext</p>
<p>ElliottForceLegacyRTC.kext</p>
<p>PlatformUUID.kext</p>
<p>AppleVIAATA.kext.for.sis.SATA</p>
<p>FakeSMC.kext</p>
<p>AppleACPIPS2Nub.kext</p>
<p>ApplePS2Controller.kext</p>
<p>放入安装盘的/Extra/Extensions下。另/Extra下不需要smbios和com文件</p>
<p>不需要删除CPUPowerManagement.kext</p>
</blockquote>
<p>2、系统安装：  </p>
<blockquote>
<p>1、U盘引导或win版变色龙引导，输入npci=0x2000 -v -x -f启动。</p>
<p>2、系统安装非常顺利，20多分钟搞定。</p>
<p>3、然后进windows，</p>
<p>将上面的KEXT放入MAC系统的/System/Library/Extensions</p>
<p>将myfix放入/usr/sbin/下</p>
<p>4、重启，输入npci=0x2000 -v -x -f -s进单用户模式</p>
<p>用myfix修复权限，重启，输入npci=0x2000 -v 即可进入系统。</p>
</blockquote>
<p>这时电脑的状态是显卡，声卡，网卡都没驱动。  </p>
<blockquote>
</blockquote>
<p>3、安装变色龙实现自启动</p>
<blockquote>
<p>由于硬盘是4K的，重启后有这个提示：boot0 ERROR</p>
</blockquote>
<blockquote>
<p>安装ubuntu盘，进ubuntu</p>
</blockquote>
<blockquote>
<p>下载boot1h文件：<a href="http://bbs.pcbeta.com/viewthread-971434-1-1.html">http://bbs.pcbeta.com/viewthread-971434-1-1.html</a></p>
<p>切换到root权限：sudo su</p>
<p>输入</p>
<p>dd if=/media/MACOSX/Extra/boot1h of=/dev/sdb2 bs=4096</p>
<p>#                    mac分区卷标                               安装在第二个分区</p>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/gbQbtznL-OLI296DJFiclA==/1956251088239247869.png" alt="msi EX465安装MACOSX 系统安装 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 系统安装 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>4、安装驱动</p>
<blockquote>
<p>网卡：</p>
<p>将BIOS的Legacy USB support设置为Disable。</p>
<p>安装雷凌原版驱动即可</p>
<p>建议购买原装无线网卡，AR9380。</p>
</blockquote>
<blockquote>
<p>声卡：</p>
</blockquote>
<blockquote>
<p>移除APPLEHDA，加入VoodooHDA即可。仿冒驱动还在研究中。。。。</p>
</blockquote>
<blockquote>
<p>显卡驱动见后篇。</p>
</blockquote>
<p>5、DSDT提取和修改</p>
<blockquote>
<p>win、linux、MAC下导出的DSDT文件应该都是一样的。</p>
<p>使用DSDTEditor导出和除错。</p>
<p>ubuntu下:</p>
<p>sudo apt-get install acpidump iasl</p>
<p>sudo acpidump -t DSDT -b &gt; dsdt.aml</p>
<p><a href="http://bbs.pcbeta.com/viewthread-1133482-1-1.html">http://bbs.pcbeta.com/viewthread-1133482-1-1.html</a></p>
<p>修改方面，我碰到3个方面的错误</p>
<p>Not all control paths return a value (XXX)</p>
<p>解决：Return (Zero)</p>
<p>Possible operator timeout is ignored</p>
<p>解决：将 Acquire (MUT0, 0x0FFF)或者Acquire (MUTE, 0x03E8) 的参数修改为 0xFFFF</p>
<p>还个就是删除 _  即可</p>
<p>然后保存为dsdt.aml，放入/Extra下，然后编辑org，加入dsdt.aml的路径即可</p>
</blockquote>
<p>本篇到此结束，下篇就是显卡驱动。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>msi EX465安装MACOSX 网卡驱动</title>
    <url>/posts/150377324/</url>
    <content><![CDATA[<p>msi有线网卡是sis 191，无解</p>
<p>无线网卡是雷凌2870 usb的，可以安装雷凌驱动，其他都好，就是不能上app store</p>
<p>前几天网购了AR9380 （￥49元，还能接受）。直接免驱，但还是进不了app store。</p>
<p>原因：进app store的条件是有线网卡必须是en0，无线网卡必须是en1。</p>
<p>由于我的有线无解，导致装的无线变成en0了。下面就是解决这个问题的</p>
<p>解决思路是：1、虚拟一个有线网卡  2、把网卡名称对调一个</p>
<blockquote>
<p>解决第一个问题</p>
</blockquote>
<blockquote>
<p>下载nullEthernet.kext并安装，然后dsdt打补丁或者加ssdt 。（这些下载里面都有）</p>
<p><a href="http://bbs.pcbeta.com/viewthread-1505728-1-1.html">http://bbs.pcbeta.com/viewthread-1505728-1-1.html</a></p>
<p><a href="https://bitbucket.org/RehabMan/os-x-null-ethernet/downloads">https://bitbucket.org/RehabMan/os-x-null-ethernet/downloads</a></p>
<p>这样重启之后，无线变成en0，有线变成en1了。我们需要对调一个</p>
<p>解决第二个问题</p>
<p>删除：<br>/Library/Preferences/SystemConfiguration/NetworkInterfaces.plist<br>/Library/Preferences/SystemConfiguration/preferences.plist<br>重启搞定。</p>
<p><img src="http://img1.ph.126.net/pdp-y8SVeeJTqQ3kxlGDFA==/6608870824957417795.png" alt="msi EX465安装MACOSX 网卡驱动 - leaf - ------坚持雅操------" title="msi EX465安装MACOSX 网卡驱动 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql自动删除备份文件</title>
    <url>/posts/1856401235/</url>
    <content><![CDATA[<p>从工具箱中拖入 “执行 T-SQL 语句”任务 到维护计划中</p>
<p>双击 “执行 T-SQL 语句”任务 编辑SQL 执行内容：</p>
<p>declare @d Nvarchar(64);<br>set @d = convert(varchar,dateadd(day,-7,getdate()),120);<br>EXECUTE master.dbo.xp_delete_file 0,N’E:\OA数据备份’,N’bak’,@d;<br>EXECUTE master.dbo.xp_delete_file 0,N’E:\OA数据备份’,N’bak’,@d  </p>
<p><img src="http://img8.ph.126.net/S7Z1OyGH80HwQRN9hkoiBw==/6598124198307828308.jpg" alt="mysql自动删除备份文件 - leaf - ------坚持雅操------" title="mysql自动删除备份文件 - leaf - ------坚持雅操------"></p>
<p>   </p>
<p>转载自：<a href="http://hi.baidu.com/hiheishuai/item/af0c44af9c76ba17a9cfb741">http://hi.baidu.com/hiheishuai/item/af0c44af9c76ba17a9cfb741</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>MYSQL：1基础</title>
    <url>/posts/3997419446/</url>
    <content><![CDATA[<p>数据库技术：  </p>
<blockquote>
<p>数据库系统  </p>
<blockquote>
<p>数据库<br>数据库管理系统<br>应用系统：使用数据库的软件<br>应用开发工具<br>数据库管理员  </p>
</blockquote>
<p>SQL语言  </p>
<blockquote>
<p>DDL：对数据库和表的操作<br>DML：对数据的操作<br>DCL：控制访问权限  </p>
</blockquote>
<p>数据库访问技术  </p>
<blockquote>
<p>ODBC<br>JDBC<br>ADO.NET<br>mysql模块和mysql接口<br>只有使用访问技术，sql语言才能起作用。  </p>
</blockquote>
</blockquote>
<p>MYSQL数据类型：  </p>
<blockquote>
<p>整数类型  </p>
<blockquote>
<p>tinyint                 1B<br>smallint               2B<br>mediumint          3B<br>int                       4B<br>inteage               4B<br>bigint                  8B<br>#有符号数就是把一个字节中的最前面的数当符号使用，这样能表示的最大值就少了1半。  </p>
</blockquote>
<p>浮点数、定点数类型  </p>
<blockquote>
<p>float                   4B<br>double               8B<br>decimal(M+D)   M+2     #M是整数部分的长度，D是小数点部分的长度。  </p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>  #定点数默认M=10，D=0，<br>  #定点数使用字符串形式存储。数据精度高。  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>日期、时间类型  </p>
<blockquote>
<p>year                 1B         #4位范围：1901-2155   #2位字符串：2000-2069，1970-1999  </p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>  #2位数字：0000，2001-2069，1970-1999  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>date                 4B        <br>time                 3B<br>datetime          8B<br>timestamp       4B<br>#NOW()可以显示当前时间  </p>
</blockquote>
<p>字符串类型  </p>
<blockquote>
<p>char<br>varchar<br>text                             #用于存字符数据<br>enum<br>set  </p>
</blockquote>
<p>二进制类型</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>openldap实际操作问题</title>
    <url>/posts/2816354876/</url>
    <content><![CDATA[<p>1、 <rootpw> can only be set when rootdn is under suffix<br>解决：配置文件slapd.conf里面的：suffix行和rootdn行：里面的dc值    和要导入的ldif里面的dc值对应不起来  </p>
<p>参考：<a href="http://apfelboymchen.homeunix.net/gnu/notes/openldap%20config%20backend.html">http://apfelboymchen.homeunix.net/gnu/notes/openldap%20config%20backend.html</a>  </p>
<p>2、ldap_add: Server is unwilling to perform (53)<br>    additional info: no global superior knowledge<br>解决：ldif书写错误<br>正确格式：<br>dn: dc=solar,dc=com<br>objectClass: dcObject<br>objectClass: organization<br>dc: solar<br>o: Example Company<br>书上是 ou: Example Company，我按书上的来，导致一直出现这种错误  </p>
<p>参考：<a href="http://wenku.baidu.com/view/8de4de22482fb4daa58d4bba.html">http://wenku.baidu.com/view/8de4de22482fb4daa58d4bba.html</a>  </p>
<p>3、ldap_sasl_bind(SIMPLE): Can’t contact LDAP server (-1)<br>解决：服务没有开起来：sudo /usr/local/openldap/libexec/slapd start  </p>
<p>其他参考资料：<br><a href="http://crablfs.sourceforge.net/sysadm_zh_CN.html">http://crablfs.sourceforge.net/sysadm_zh_CN.html</a><br><a href="http://www.openldap.org/faq/data/cache/1322.html">http://www.openldap.org/faq/data/cache/1322.html</a><br><a href="http://apfelboymchen.homeunix.net/gnu/notes/openldap%20config%20backend.html">http://apfelboymchen.homeunix.net/gnu/notes/openldap%20config%20backend.html</a>  </p>
<p>继续内容：<br>1、objectclass的作用，<br>2、ldapadd的命令的熟悉<br>3、ldif的格式</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>raspberry pi 2 刷ubuntu14.04</title>
    <url>/posts/565288185/</url>
    <content><![CDATA[<p><a href="https://wiki.ubuntu.com/ARM/RaspberryPi">https://wiki.ubuntu.com/ARM/RaspberryPi</a>  </p>
<p>1、下载镜像并解压<br>2、写入SD  </p>
<blockquote>
<p>sudo apt-get install bmap-tools<br>sudo bmaptool copy –bmap ubuntu-trusty.bmap ubuntu-trusty.img /dev/sdc  </p>
</blockquote>
<p>3、启动后扩容  </p>
<blockquote>
<p>sudo fdisk /dev/mmcblk0  </p>
<blockquote>
<p>Delete the second partition (d, 2),<br>then re-create it using the defaults (n, p, 2, enter, enter),<br>then write and exit (w).<br>Reboot the system, then:  </p>
</blockquote>
<p>sudo resize2fs /dev/mmcblk0p2<br>建交换分区<br>sudo apt-get install dphys-swapfile  </p>
</blockquote>
<p>4、安装桌面  </p>
<blockquote>
<p>sudo apt-get update<br><code>sudo apt-get install</code> xubuntu-desktop</p>
</blockquote>
<p>5、安装显卡驱动  </p>
<blockquote>
<p>sudo apt-get install xserver-xorg-video-fbturbo<br>nano /etc/X11/xorg.conf  </p>
<blockquote>
<p>Section “Device”<br>Identifier “Raspberry Pi FBDEV”<br>Driver “fbturbo”<br>Option “fbdev” “/dev/fb0”<br>Option “SwapbuffersWait” “true”<br>EndSection</p>
</blockquote>
<p>sudo apt-get install libraspberrypi-bin libraspberrypi-dev<br>sudo ln -s /usr /opt/vc<br>sudo apt-get install libraspberrypi-bin-nonfree  </p>
</blockquote>
<p>6、安装其他软件  </p>
<blockquote>
<p>sudo apt-get install openssh-server<br>sudo apt-get install vnc4server  </p>
<blockquote>
<p>#!/bin/sh  </p>
<p># Uncomment the following two lines for normal desktop:<br># unset SESSION_MANAGER<br># exec /etc/X11/xinit/xinitrc  </p>
<p>[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup<br>[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources<br>xsetroot -solid grey<br>vncconfig -iconic &amp;<br>#x-terminal-emulator -geometry 80x24+10+10 -ls -title “$VNCDESKTOP Desktop” &amp;<br>#x-window-manager &amp;  </p>
<p>sesion-manager &amp; xfdesktop &amp; xfce4-panel &amp;<br>xfce4-menu-plugin &amp;<br>xfsettingsd &amp;<br>xfconfd &amp;<br>xfwm4 &amp;  </p>
</blockquote>
<p>sudo apt-get install hwloc  </p>
<p><img src="http://img0.ph.126.net/yrbxBSz1CEeOkAoy1NSi4Q==/6631308558750619908.png" alt="raspberry pi 2 刷ubuntu14.04 - leaf - ------勤解万难------" title="raspberry pi 2 刷ubuntu14.04 - leaf - ------勤解万难------"></p>
<p>   </p>
</blockquote>
<p>7、设置无线网络  </p>
<blockquote>
<p>我的无线网卡免驱  </p>
<p>sudo nano /etc/network/interfaces  </p>
<blockquote>
<p>auto wlan0</p>
<p>allow-hotplug wlan0<br>iface wlan0 inet dhcp  </p>
<p>#iface wlan0 inet static  </p>
<p>#address 192.168.1.17</p>
<p>#netmask 255.255.255.0</p>
<p>#gateway 192.168.1.1</p>
<p>wpa-scan-ssid 1                #这个设置成1 可以连接到隐藏的网络</p>
<p>wpa-ap-scan 1                  #这个设置成1 可以连接到隐藏的网络</p>
<p>wpa-ssid “HELLO”</p>
<p>wpa-psk “123456”</p>
<p>#wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf</p>
<p>iface default inet dhcp</p>
</blockquote>
<p>修复断线问题。设置无线网卡不节能。</p>
<blockquote>
<p>lsmod</p>
<blockquote>
<p>8192cu                550797  0</p>
</blockquote>
<p>创建sudo nano /etc/modprobe.d/8192cu.conf</p>
<p># Disable power saving</p>
<p>options 8192cu rtw_power_mgnt=0 rtw_enusbss=1 rtw_ips_mode=1</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>root nas :  buffalo LS-WVL</title>
    <url>/posts/3073781033/</url>
    <content><![CDATA[<p><img src="http://img0.ph.126.net/BWHcgE8BPLbb463K2lF4NA==/4791267053669049027.png" alt="root nas :  buffalo LS-WVL - leaf - ------坚持雅操------" title="root nas :  buffalo LS-WVL - leaf - ------坚持雅操------"></p>
<p>2011年就买了，半年后跌价到600多块钱了，伤心。。。</p>
<p>我买了2个500G希捷硬盘做RAID1模式。当时硬盘才270光景，后来硬盘涨了100多 赚了！</p>
<p>今天有幸看了篇文章，决定试试root<br>参考资料：</p>
<p><a href="http://i.592.net/?post=360">http://i.592.net/?post=360</a></p>
<p>#这篇介绍非常详细了</p>
<p><a href="http://buffalo.nas-central.org/wiki/Category:LS-WXL#LinkStation\_Duo\_.28LS-WXL.29">http://buffalo.nas-central.org/wiki/Category:LS-WXL#LinkStation\_Duo\_.28LS-WXL.29</a></p>
<p>#这篇是指导教材</p>
<p><a href="http://downloads.buffalo.nas-central.org/TOOLS/ALL/_LS/_KB/_ARM9/ACP/_COMMANDER/">http://downloads.buffalo.nas-central.org/TOOLS/ALL\_LS\_KB\_ARM9/ACP\_COMMANDER/</a></p>
<p>#这里下载软件：acp_commander.jar</p>
<p>过程：</p>
<p>打开终端，依次输入代码即可</p>
<p>备注：</p>
<blockquote>
<p>我的IP地址是192.168.3.6</p>
</blockquote>
<blockquote>
<p>我的网页登陆密码是：mima</p>
<p>我将root密码改为：123456</p>
</blockquote>
<p>java -jar acp_commander.jar -t 192.168.3.6 -ip 192.168.3.6 -pw mima -c “ls /“</p>
<p>#使用ls 命令列出目录，以证明使用mima可以登陆</p>
<p>java -jar acp_commander.jar -t 192.168.3.6 -ip 192.168.3.6 -pw mima -c “(echo 123456;echo 123456)|passwd”</p>
<p>#将root密码改为123456</p>
<p>java -jar acp_commander.jar -t 192.168.3.6 -ip 192.168.3.6 -pw mima -c “sed -i ‘s/UsePAM yes/UsePAM no/g’ /etc/sshd_config”</p>
<p>#关掉PAM，用sed -i ‘s///g’ 将yes改为no</p>
<p>java -jar acp_commander.jar -t 192.168.3.6 -ip 192.168.3.6 -pw mima -c “sed -i ‘s/PermitRootLogin no/PermitRootLogin yes/g’ /etc/sshd_config”</p>
<p>#允许root使用ssh登陆</p>
<p>java -jar acp_commander.jar -t 192.168.3.6 -ip 192.168.3.6 -pw mima -c “/etc/init.d/sshd.sh restart”</p>
<p>#重启sshd服务</p>
<p>-—————————————</p>
<p>我的配置如下：</p>
<p>Processor: Feroceon 88FR131 rev 1 (v5l)</p>
<p>BogoMIPS: 598.01</p>
<p>MemTotal:         117496 kB</p>
<p>-—————————————</p>
<p>安装ipkg包管理器</p>
<p>cd /tmp</p>
<p>wget <a href="http://ipkg.nslu2-linux.org/feeds/optware/cs05q3armel/cross/stable/teraprov2-bootstrap/_1.2-7/_arm.xsh">http://ipkg.nslu2-linux.org/feeds/optware/cs05q3armel/cross/stable/teraprov2-bootstrap\_1.2-7\_arm.xsh</a></p>
<p>sh ./teraprov2-bootstrap_1.2-7_arm.xsh</p>
<p>vi /opt/etc/ipkg.conf </p>
<p>添加</p>
<p>src cs08q1 <a href="http://ipkg.nslu2-linux.org/feeds/optware/cs08q1armel/cross/stable/">http://ipkg.nslu2-linux.org/feeds/optware/cs08q1armel/cross/stable/</a></p>
<p># src cs08q1-unstable <a href="http://ipkg.nslu2-linux.org/feeds/optware/cs08q1armel/cross/unstable/">http://ipkg.nslu2-linux.org/feeds/optware/cs08q1armel/cross/unstable/</a></p>
<p>保存 :wq</p>
<p>更新： ipkg update</p>
<p>安装NFS</p>
<p>ipkg install e2fslibs</p>
<p>ipkg install portmap</p>
<p>cd /mnt/array1</p>
<p>wget <a href="http://downloads.buffalo.nas-central.org/Users/kenatonline/NFSKernel/nfstools.tar.gz">http://downloads.buffalo.nas-central.org/Users/kenatonline/NFSKernel/nfstools.tar.gz</a></p>
<p>cd /</p>
<p>tar xvzf /mnt/array1/nfstools.tar.gz</p>
<p>配置好/etc/exports</p>
<p>然后</p>
<p>cd /opt/etc/init.d</p>
<p>./S55portmap start</p>
<p>./S99nfs start</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>rootkit检测工具:rkhunter</title>
    <url>/posts/4003415816/</url>
    <content><![CDATA[<p>rootkit：攻击者用来隐藏自己的踪迹和保留root访问权限的工具  </p>
<p>rkhunter：  </p>
<p>安装：sudo apt-get install rkhunter<br>运行检测：sudo rkhunter –checkall<br>日志文件：/var/log/rkhunter.log  </p>
<p>系统：Ubuntu10.04 X64<br>检测结果：  </p>
<p>Checking system commands…<br> /sbin/chkconfig                                          [ Warning ]<br>[08:15:09] /sbin/chkconfig                                   [ Warning ]<br>[08:15:10] Warning: The command ‘/sbin/chkconfig’ has been replaced by a script: /sbin/chkconfig: a /usr/bin/perl script text executable<br>**#安装了chkconfig，但是不好用**  </p>
<p>Checking for rootkits…<br>  Performing trojan specific checks<br>    Checking for enabled inetd services                      [ Warning ]<br>[08:17:49] Performing trojan specific checks<br>[08:17:49] Info: Starting test name ‘trojans’<br>[08:17:49] Info: Using inetd configuration file ‘/etc/inetd.conf’<br>[08:17:49]   Checking for enabled inetd services             [ Warning ]<br>[08:17:49] Warning: Found enabled inetd service: swat<br>**#我启动了网页管理samba的服务。**  </p>
<p>  Performing filesystem checks<br>    Checking /dev for suspicious file types                  [ Warning ]<br>    Checking for hidden files and directories                [ Warning ]<br>[08:21:52] Performing filesystem checks<br>[08:21:52] Info: Starting test name ‘filesystem’<br>[08:21:52] Info: SCAN_MODE_DEV set to ‘THOROUGH’<br>[08:21:52]   Checking /dev for suspicious file types         [ Warning ]<br>[08:21:52] Warning: Suspicious file types found in /dev:<br>[08:21:52]          /dev/shm/pulse-shm-749119975: data<br>[08:21:52]          /dev/shm/pulse-shm-1887985822: data<br>[08:21:52]          /dev/shm/pulse-shm-1887045141: data<br>[08:21:52]          /dev/shm/pulse-shm-125854523: data<br>**#这几个文件不知道啥用的，求教**<br>[08:21:53]   Checking for hidden files and directories       [ Warning ]<br>[08:21:53] Warning: Hidden directory found: /etc/.java<br>**#我安装了yed graph editor所以有这个文件夹**<br>[08:21:53] Warning: Hidden directory found: /dev/.udev<br>[08:21:53] Warning: Hidden directory found: /dev/.initramfs<br>**#这两个文件夹本来就有的，属于正常报错**  </p>
<p>服务器检测：<br>Checking if SSH root access is allowed          [ Warning ]<br><strong>#把/etc/ssh/sshd_config 里面的PermitRootLogin=no 然后重启ssh服务即可 。不影响sudo的使用。</strong></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>S5700忘记密码</title>
    <url>/posts/2492908723/</url>
    <content><![CDATA[<p>接console口</p>
<p>交换机重启</p>
<p>按CTRL+B</p>
<p>密码 <a href="mailto:&#x41;&#100;&#109;&#105;&#110;&#64;&#x68;&#117;&#x61;&#x77;&#x65;&#105;&#46;&#99;&#x6f;&#x6d;">&#x41;&#100;&#109;&#105;&#110;&#64;&#x68;&#117;&#x61;&#x77;&#x65;&#105;&#46;&#99;&#x6f;&#x6d;</a></p>
<p>按7  Clear password for console user</p>
<p>按1  Boot with default mode</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>s5700端口配ip地址</title>
    <url>/posts/1048826736/</url>
    <content><![CDATA[<p>interface gigabitethernet 0/0/48<br>undo switchport<br>ip address 10.1.1.2 30  </p>
<p>三层eth-trunk配ip地址<br>interface eth-trunk 1<br>ip address 10.1.1.2 30<br>interface gigabitethernet 0/0/47<br>eth-trunk 1<br>interface gigabitethernet 0/0/48<br>eth-trunk 1</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>s5700配置ssh</title>
    <url>/posts/1177160713/</url>
    <content><![CDATA[<p>建密钥对</p>
<p>dsa local-key-pair create</p>
<p>配置vty界面</p>
<p>user-interface vty 0 4</p>
<p>authentication-mode aaa</p>
<p>protocol inbound all</p>
<p>user privilege level 15</p>
<p>建ssh账号</p>
<p>aaa</p>
<p>local-user client001 password irreversible-cipher Huawei@123</p>
<p>local-user client001 privilege level 3<br>local-user client001 service-type ssh http</p>
<p>quit       </p>
<p>#顺便把http登录也加入</p>
<p>ssh user client001 authentication-type password  </p>
<p>开通ssh</p>
<p>stelnet server enable</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>slapd.conf文件</title>
    <url>/posts/3091646095/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p># See slapd.conf(5) for details on configuration options.<br># This file should NOT be world readable.  </p>
<h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><p>include        /usr/local/etc/openldap/schema/core.schema<br>#属性类型多放着这个文件下，包括类型定义，OID，等等  </p>
<p># Define global ACLs to disable default read access.  </p>
<p># Do not enable referrals until AFTER you have a working directory<br># service AND an understanding of referrals.<br>#referral    ldap://root.openldap.org  </p>
<p>pidfile        /usr/local/var/run/slapd.pid      #记录正在执行的slapd进程ID<br>argsfile    /usr/local/var/run/slapd.args      #记录正在执行的slapd命令行参数  </p>
<p># Load dynamic backend modules:<br># modulepath    /usr/local/libexec/openldap<br># moduleload    back_bdb.la<br># moduleload    back_hdb.la<br># moduleload    back_ldap.la  </p>
<p>#———————SASL选线————————–#<br>#sasl-host              认证dn<br>#sasl-realm            认证domain<br>#sasl-secprops      设置安全性  </p>
<p>#——————–SSL/TLS选项———————-#<br>#TLSCipherSuite            定义接受哪些加密法<br>#TLSCertficateFile         存放公钥地址<br>#TLSCertificateKeyFile  存放密钥地址  </p>
<p># Sample security restrictions<br>#    Require integrity protection (prevent hijacking)<br>#    Require 112-bit (3DES or better) encryption for updates<br>#    Require 63-bit encryption for simple bind<br># security ssf=1 update_ssf=112 simple_bind=64  </p>
<p># Sample access control policy:<br>#    Root DSE: allow anyone to read it<br>#    Subschema (sub)entry DSE: allow anyone to read it<br>#    Other DSEs:<br>#        Allow self write access<br>#        Allow authenticated users read access<br>#        Allow anonymous users to authenticate<br>#    Directives needed to implement policy:<br># access to dn.base=”” by * read<br># access to dn.base=”cn=Subschema” by * read<br># access to *<br>#    by self write<br>#    by users read<br>#    by anonymous auth  </p>
<p>#—————–ACL设定————————<br>#access to dn.base=”cn=Subschema” by * read   一个access一个设定<br>#dn.base=”cn=Subschema”                                  针对的项目<br>#by * read                                                             设置存取权限。* 表示所有人，read是权限<br>#                                                                           以上表示对某个项目，所有人多有读取权限<br>#注意access的先后次序  </p>
<h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><p># if no access controls are present, the default policy<br># allows anyone and everyone to read anything but restricts<br># updates to rootdn.  (e.g., “access to * by * read”)  </p>
<h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><p># rootdn can always read and write EVERYTHING!  </p>
<p>#######################################################################<br># BDB database definitions<br>#######################################################################  </p>
<p>database    bdb                                          #定义使用的数据库<br>suffix        “dc=my-domain,dc=com”                              #定义根DN名称<br>rootdn        “cn=Manager,dc=my-domain,dc=com”       #定义ldap的root账户，当前账户为：Manager<br># Cleartext passwords, especially for the rootdn, should<br># be avoid.  See slappasswd(8) and slapd.conf(5) for details.<br># Use of strong authentication encouraged.  </p>
<p>rootpw       {SSHA}VkcVbrkqa6jqf7GiaQD8bXNglap2qy4a<br>#rootpw的默认密码为secret<br>#此处用{SSHA}进行了加密<br># 加密方法： sudo slappasswd -h {SSHA}        然后把编码复制到配置文件中即可<br>#此处参考：<a href="http://www.php-oa.com/2007/10/17/openldap.html">http://www.php-oa.com/2007/10/17/openldap.html</a><br>              <br> #定义ldap的root账户的密码：当前密码为明文 secret<br>#密文的话密码前面会有提示：{MD5}wenwjker<br>#rootpw可以不设置，使用全局设置(上面的)的认证方法来认证<br>#rootdn则要改为：rootdn “uid=xxxxx,cn=xxxx,cn=auth”  </p>
<p># The database directory MUST exist prior to running slapd AND<br># should only be accessible by the slapd and slap tools.<br># Mode 700 recommended.  </p>
<p>directory    /usr/local/var/openldap-data               #定义leap数据的存放地点<br>#mode 0600                                                         #定义数据存取权限<br># Indices to maintain<br>index    objectClass    eq                                      #定义索引，eq表示搜索内容要完全一直才能搜索到<br>#cachesize  2000                                                 #定义存放在内存中的项目数</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>SSD相关知识</title>
    <url>/posts/3884163245/</url>
    <content><![CDATA[<p>SSD的组成：主控芯片，缓存，闪存</p>
<p>1、主控芯片</p>
<blockquote>
<p><img src="http://img1.ph.126.net/PBRdzfUehbZ9lET3Tgr-cw==/6597671199518593636.jpg" alt="SSD相关知识 - leaf - ------坚持雅操------" title="SSD相关知识 - leaf - ------坚持雅操------"></p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>sandforce：</p>
</blockquote>
<blockquote>
<blockquote>
<p>使用压缩算法。</p>
</blockquote>
<blockquote>
<p>特点是兼容性好，次品闪存也兼容，所以就导致质量参差不齐。</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>一般金士顿、威刚啥的都用它。sf2281</p>
</blockquote>
</blockquote>
<blockquote>
<p>marvell：</p>
</blockquote>
<blockquote>
<blockquote>
<p>使用非压缩算法。</p>
<p>特点：性能突出且稳定，在NADA出现问题后能够恢复数据</p>
<p>一般浦科特、闪迪、美光都用他。9187、9175</p>
</blockquote>
</blockquote>
<blockquote>
<p>参考：</p>
</blockquote>
<blockquote>
<blockquote>
<p><a href="http://ssd.zol.com.cn/368/3683027.html">http://ssd.zol.com.cn/368/3683027.html</a></p>
</blockquote>
<blockquote>
<p><a href="http://www.pcpop.com/doc/0/674/674480_all.shtml">http://www.pcpop.com/doc/0/674/674480_all.shtml</a></p>
</blockquote>
</blockquote>
<p>2、缓存</p>
<blockquote>
<p>缓存一般就是DDR2的和DDR3的。容量一般64m及以上。</p>
<p>缓存能有效提高速度。</p>
</blockquote>
<p>3、闪存</p>
<blockquote>
<p><img src="http://img2.ph.126.net/CGfP5pKJrW-gPi3kRTTDPQ==/1915155741639394541.png" alt="SSD相关知识 - leaf - ------坚持雅操------" title="SSD相关知识 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<blockquote>
<blockquote>
<p>onfi标准：</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>这个标准里面的2.0有个异步模式，是掉速的一个原因。</p>
<p>使用异步模式是为了保护缺陷闪存，使得其能用的更久。但其速度50MB/S不如机械硬盘快</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>toggle标准：</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>参考：<a href="http://ssd.zol.com.cn/350/3507628.html">http://ssd.zol.com.cn/350/3507628.html</a></p>
</blockquote>
<p>其他参数：</p>
<blockquote>
<p>1、4K对齐</p>
</blockquote>
<blockquote>
<blockquote>
<p>现在硬盘的扇区都是4096B了，所以格式化的最小单位也设置为4096B。这样就算对齐了。</p>
</blockquote>
</blockquote>
<blockquote>
<p>2、AHCI模式</p>
<p>3、SATA3.0</p>
</blockquote>
<p>本人笔记本SISM672DX+SIS968：</p>
<blockquote>
<p>1、不支持双通道,已加了2G内存</p>
<p>2、不支持AHCI模式</p>
<p>3、支持FSB800MHZ以上的CPU：我已升级至P8700</p>
</blockquote>
<p>坑爹啊！想升级SSD都升不了</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>SSD芯片</title>
    <url>/posts/3879864185/</url>
    <content><![CDATA[<p>SandForce主控芯片<br>Intel主控芯片<br>Indilinx主控芯片<br>SAMSUNG主控芯片<br>Jmicron主控</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>thinkserver RD450 安装记录</title>
    <url>/posts/2044991458/</url>
    <content><![CDATA[<p><a href="http://wenku.baidu.com/link?url=KYrrzw6uQxTetBy3%5C_dp6MgrrnYK00MFIztYcQeLN4ZIfS7Z4CAxe483AEFRAVVirZHmbfzk3JEy0P5FsR8byMRhvx03Ib-7i41P3LlPdw3u">http://wenku.baidu.com/link?url=KYrrzw6uQxTetBy3\_dp6MgrrnYK00MFIztYcQeLN4ZIfS7Z4CAxe483AEFRAVVirZHmbfzk3JEy0P5FsR8byMRhvx03Ib-7i41P3LlPdw3u</a></p>
<p>0、配置清单</p>
<p><img src="http://img0.ph.126.net/sa62AD2PRykn8IiZKwxiPQ==/6598237448065851735.jpg" alt="thinkserver RD450 安装记录 - leaf - ------勤解万难------" title="thinkserver RD450 安装记录 - leaf - ------勤解万难------"></p>
<p> </p>
<p>1、设置RAID</p>
<blockquote>
<p>按F10 进入deployment manager </p>
<p>选BIOS设置</p>
<p>选boot manager</p>
<p>选AVAGO MegaRAID</p>
<p>选configure management</p>
<p>选Create Virtual Drive</p>
<p>选RAID1</p>
<p>将2块硬盘Disabled状态改为Enabled</p>
<p><img src="http://img0.ph.126.net/L43PO8dW3xPztbjQNS80Nw==/6598237448065851990.jpg" alt="thinkserver RD450 安装记录 - leaf - ------勤解万难------" title="thinkserver RD450 安装记录 - leaf - ------勤解万难------"></p>
<p>选Apply Changes</p>
<p>选Save Configuration</p>
<p>将Confirm [Disabled]状态改为[Enabled]</p>
<p>按F10保存</p>
<p>查看RAID信息</p>
<p>选择Boot Manager  </p>
<p>将Boot Mode [Auto]状态改成[Legacy Only] </p>
<p>选择Miscellaneous Boot Settings回车  </p>
<p>将Storage OpROM Policy [UEFI Only]状态改为[Legacy Only]。  </p>
<p>保存退出，重启服务器，即可看到RAID1</p>
<p><img src="http://img0.ph.126.net/P3EA0FNh78MToomJWBRC4w==/4929752742210880728.jpg" alt="thinkserver RD450 安装记录 - leaf - ------勤解万难------" title="thinkserver RD450 安装记录 - leaf - ------勤解万难------"></p>
<p> </p>
<p>安装win2012</p>
<p>将Legacy Only 改为UEFI Only</p>
<p>按F10 </p>
<p>进入部署</p>
<p><img src="http://img0.ph.126.net/Mdydw3_Idtcw27Ug6nBErA==/6598172576879816700.jpg" alt="thinkserver RD450 安装记录 - leaf - ------勤解万难------" title="thinkserver RD450 安装记录 - leaf - ------勤解万难------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>TPLINK路由器内网开通钉钉功能</title>
    <url>/posts/2182326653/</url>
    <content><![CDATA[<p>钉钉客服电话：0571-88157808</p>
<p>钉小秘给的网段：<a href="http://s.dingtalk.com/market/dingtalk/nwsz.php">http://s.dingtalk.com/market/dingtalk/nwsz.php</a></p>
<p>实际用的网段</p>
<p>42.120.0.042.121.255.255</p>
<p>110.75.0.0110.76.255.255</p>
<p>140.205.0.0140.205.255.255</p>
<p>122.228.95.54, 122.228.95.253, </p>
<p>122.225.67.253, 122.227.164.190</p>
<p>122.228.95.110, 122.228.95.120</p>
<p>122.228.95.140, 122.228.95.150</p>
<p>122.228.95.40, 122.228.95.50</p>
<p>61.131.39.50, 61.131.39.40, </p>
<p>122.225.34.240, 122.225.34.250</p>
<p>122.228.95.120, 122.228.95.110</p>
<p>在IP地址过滤里面开通如上地址即可。</p>
<p>要是可管理路由器的话就能精细一点了。tplink 那就这么用吧。。。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 10.04    samba 匿名访问 可读可写</title>
    <url>/posts/1833866432/</url>
    <content><![CDATA[<p>基础知识：</p>
<p>SMB服务：services message block 是由微软开发的。</p>
<p>samba的进程：</p>
<blockquote>
<p>smbd：用于提供服务器中的共享资源。</p>
<p>nmbd：用于提供NETBIOS主机名称解析。(在域和工作组中可以找到，网上邻居可以找到)</p>
</blockquote>
<p>0、开放防火墙<br>安装 gufw， sudo apt-get install gufw<br>在系统-系统管理-防火墙配置：勾选已启用，然后全部选允许进入好了，也可以把端口 137 138 139 445 加入<br>1、安装samba  </p>
<blockquote>
<p>sudo apt-get install samba        #samba软件</p>
<p>sudo apt-get install smbfs         #samba文件系统</p>
<p>sudo apt-get install swat           #图形化samba管理</p>
</blockquote>
<p>2、设置文件权限</p>
<blockquote>
<p>chmod 0755 3SHARE</p>
<p>chmod 1777 5TEMP</p>
</blockquote>
<p>3、配置文件</p>
<p>其中#后面的都是说明文档，而；后面的都是实例文档</p>
<p> [global]<br>    workgroup = WORKGROUP     #设置工作组<br>    netbios name = 信息中心          #网上邻居上用的名字<br>    server string = it001                    #对主机的描述说明  </p>
<p>    display charset = utf-8<br>    dos charset = cp936  </p>
<p>    log file = /var/log/samba/%m.log   #对每个访客建独立日志记录。</p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>#%m.log表示按登陆名称建目录  </p>
<p>#由于是匿名的，所有访客都记录在nobody.log下面(未验证)</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>    max log size = 50                          #日志最大50KB  </p>
<p>    security = share                             #安全级别：share user server domain</p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>#server：让另一台主机提供验证服务</p>
<p>#domain：让域控制器来提供验证服务</p>
</blockquote>
</blockquote>
<p>#2014.08.12  补充  </p>
<blockquote>
<p>在samba4中 share 和 server 已被弃用（ubuntu14.04）<br>改为<br> security = user  </p>
<p>    map to guest = Bad User</p>
<p>参考：<a href="http://blog.chinaunix.net/uid-74892-id-4232517.html">http://blog.chinaunix.net/uid-74892-id-4232517.html</a></p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>    socket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192<br>    dns proxy = no<br>    template shell = /bin/false<br>    winbind use default domain = no  </p>
<p>#[homes] 表示登陆用户自己的家目录。就是每个登陆linux的用户都有各自的家目录是一样的。  </p>
<p>[share]<br>    comment = read only<br>    path = /home/it001/3SHARE<br>    read only = yes<br>    public = yes                     #共享的意思，所有人都可见。  </p>
<p>[temp]<br>    comment = read write<br>    path = /home/it001/5TEMP<br>    writeable = yes<br>    public = yes<br>    create mode = 0666<br>    directory mode = 1777  </p>
<p>[printers]<br>    comment = All Printers<br>    path = /var/spool/samba<br>    printable = Yes<br>    browseable = yes  </p>
<p>关于swat   (2012.11.20添加)  </p>
<blockquote>
<p>由xinet负责进程的管理<br>配置文件：/etc/inetd.conf<br>配置内容：swat        stream    tcp    nowait.400    root    /usr/sbin/tcpd    /usr/sbin/swat  </p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>流                                               使用TCP wrapper  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>端口:901<br>端口设置:/etc/services  </p>
<p>参考：<a href="http://yuanbin.blog.51cto.com/363003/117105">http://yuanbin.blog.51cto.com/363003/117105</a><br>浏览器访问：127.0.0.1:901  </p>
<p><img src="http://img1.ph.126.net/zWPbEpo0nYIscHXNqQs9-A==/6598068123214412271.jpg" alt="ubuntu 10.04    samba 匿名访问 可读可写 - leaf - ------坚持雅操------" title="ubuntu 10.04    samba 匿名访问 可读可写 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>   </p>
</blockquote>
<p>注释2013.10.09更新。其他说明在另一篇有写。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 14.04.3 安装单机kubernetes</title>
    <url>/posts/2045748854/</url>
    <content><![CDATA[<p>以下只能通过科学上网后才能实现<br>1、安装docker  </p>
<blockquote>
<p><a href="http://www.docker.org.cn/book/install/26/_install-docker-trusty-14.04.html">http://www.docker.org.cn/book/install/26\_install-docker-trusty-14.04.html</a><br><a href="http://docker.widuu.com/">http://docker.widuu.com/</a>  </p>
</blockquote>
<p>2、安装etcd  </p>
<blockquote>
<p><a href="https://github.com/coreos/etcd/releases/">https://github.com/coreos/etcd/releases/</a>  </p>
</blockquote>
<p>3、安装golang  </p>
<blockquote>
<p><a href="https://golang.org/dl/">https://golang.org/dl/</a><br><a href="http://wiki.ubuntu.org.cn/Golang">http://wiki.ubuntu.org.cn/Golang</a><br><a href="http://www.linuxdiyf.com/linux/8790.html">http://www.linuxdiyf.com/linux/8790.html</a>  </p>
</blockquote>
<p>4、安装单机kubernetes  </p>
<blockquote>
<p><a href="http://kubernetes.io/v1.0/docs/getting-started-guides/docker.html">http://kubernetes.io/v1.0/docs/getting-started-guides/docker.html</a>  </p>
</blockquote>
<blockquote>
<p><a href="https://github.com/kubernetes/kubernetes/releases">https://github.com/kubernetes/kubernetes/releases</a>  </p>
</blockquote>
<blockquote>
<p><a href="https://www.ustack.com/blog/kubernetes1/">https://www.ustack.com/blog/kubernetes1/</a><br><a href="http://blog.csdn.net/zhang/_/_jiayu/article/details/42745507">http://blog.csdn.net/zhang\_\_jiayu/article/details/42745507</a><br><a href="http://kubernetes.io/v1.0/">http://kubernetes.io/v1.0/</a>  </p>
</blockquote>
<p>安装docker  </p>
<blockquote>
<p>curl -sSL <a href="https://get.docker.com/">https://get.docker.com/</a> | sh<br>sudo usermod -aG docker ywz  </p>
</blockquote>
<p>安装etcd</p>
<blockquote>
<p><code>sudo nano /etc/environment   </code></p>
<blockquote>
<p><code>加入/opt/bin</code>  </p>
</blockquote>
<p><code>mkdir /opt/bin   curl -L https://github.com/coreos/etcd/releases/download/v2.2.1/etcd-v2.2.1-linux-amd64.tar.gz -o etcd-v2.2.1-linux-amd64.tar.gz</code><br><code>tar xzvf etcd-v2.2.1-linux-amd64.tar.gz</code><br><code>cd etcd-v2.2.1-linux-amd64   cp ./etcd /opt/bin   </code></p>
</blockquote>
<p><code>   安装go语言</code>  </p>
<blockquote>
<p>sudo add-apt-repository ppa:evarlast/golang1.5<br>sudo apt-get update<br>sudo apt-get install golang  </p>
</blockquote>
<p>安装单机kubernetes  </p>
<blockquote>
<p>wget <a href="https://github.com/kubernetes/kubernetes/releases/download/v1.2.0-alpha.2/kubernetes.tar.gz">https://github.com/kubernetes/kubernetes/releases/download/v1.2.0-alpha.2/kubernetes.tar.gz</a><br>tar -xvf  kubernetes.tar.gz<br>cd ~/kubernetes<br>安装客户端  </p>
<blockquote>
<p>sudo cp -a ./platforms/linux/amd64/kubectl /usr/bin  </p>
</blockquote>
<p>安装服务端  </p>
<blockquote>
<p>cd ~/kubernetes/server<br>tar -xvf kubernetes-server-linux-amd64.tar.gz<br>sudo cp -a ~/kubernetes/server/kubernetes/server/bin/* /opt/bin<br>cd ~/kubernetes/cluster/ubuntu/master<br>sudo cp ./init_scripts/* /etc/init.d/<br>sudo cp ./init_conf/* /etc/init/  </p>
</blockquote>
<p>安装upstart脚本  </p>
<blockquote>
<p>cd ~/kubernetes/cluster/ubuntu<br>sudo ./util.sh  </p>
</blockquote>
<p>验证<code>  kubectl version  </code></p>
<p><img src="http://img0.ph.126.net/nG9RK6DmfvQph2hUnioHmQ==/6631420708932790935.png" alt="ubuntu 14.04.3 安装单机kubernetes - leaf - ------勤解万难------" title="ubuntu 14.04.3 安装单机kubernetes - leaf - ------勤解万难------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 14.04 Server 使用lxc并访问外网</title>
    <url>/posts/1351290105/</url>
    <content><![CDATA[<p>1、安装</p>
<blockquote>
<p>sudo apt-get install lxc</p>
</blockquote>
<blockquote>
</blockquote>
<p>2、配置网络</p>
<blockquote>
<p>设置宿主网络：创建桥接接口 sudo nano /etc/network/interfaces</p>
</blockquote>
<blockquote>
<p>auto eth0</p>
<p>iface eth0 inet manual</p>
<p># The primary network interface</p>
<p>auto br0</p>
<p>iface br0 inet static</p>
<p>address 192.168.1.20</p>
<p>netmask 255.255.255.0</p>
<p>gateway 192.168.1.1</p>
<p>dns-nameservers 192.168.1.1</p>
<p>bridge_portseth0</p>
<p>bridge_stpoff</p>
<p>bridge_maxwait0</p>
<p>bridge_fd0</p>
<p>说明：特权容器和普通容器选一个设置即可 不用全部设置。</p>
<p>设置特权容器网络：sudo nano /etc/lxc/default.conf 接口由lxcbr0改为br0</p>
<p>lxc.network.type = veth</p>
<p>#lxc.network.link = lxcbr0</p>
<p>lxc.network.link = br0</p>
<p>lxc.network.flags = up</p>
<p>lxc.network.hwaddr = 00:16:3e:xx:xx:xx</p>
<p>设置普通容器网络：sudo nano /etc/lxc/lxc-usernet</p>
<p># USERNAME TYPE BRIDGE COUNT</p>
<p>ywz veth br0 2  #2表示有2个网络接口，也就是能开2个容器</p>
</blockquote>
<blockquote>
<p> nano ~/.config/lxc/default.conf (用于普通容器连外网)</p>
<p>lxc.id_map = u 0 100000 65536</p>
<p>lxc.id_map = g 0 100000 65536</p>
<p>lxc.network.type = veth</p>
<p>lxc.network.link = br0</p>
</blockquote>
<blockquote>
<p>/etc/default/lxc-net 可以设置LXC是否提供net网络。USE_LXC_BRIDGE </p>
</blockquote>
<p>3、创建容器和使用</p>
<blockquote>
<p>lxc-create –template download –name Y011</p>
</blockquote>
<blockquote>
<p>特权容器存放位置  /var/lib/lxc</p>
</blockquote>
<blockquote>
<p>普通容器存放位置~/.local/share/lxc</p>
<p>设置固定IP：</p>
<p> 在容器存放地址的/rootfs/etc/network/interfaces和/rootfs/etc/resolv.conf设置</p>
</blockquote>
<p>4、设置容器自启动</p>
<blockquote>
<p>~/.local/share/lxc/Y011/config 添加</p>
<p>lxc.start.auto = 1</p>
<p>lxc.start.delay = 5</p>
<p>lxc.start.order = 100</p>
<p>lxc.group = ubuntu</p>
</blockquote>
<p>5、限制内存容量</p>
<blockquote>
<p>~/.local/share/lxc/Y011/config 添加</p>
<p>lxc.cgroup.memory.limit_in_bytes = 134217728</p>
</blockquote>
<p>6、克隆和快照</p>
<blockquote>
<p>lxc-clone -o Y011 -n Y012</p>
<p>lxc-snapshot -n Y011</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu server 10.04 apache2：安装webalizer、awstats</title>
    <url>/posts/3630694637/</url>
    <content><![CDATA[<p>1、安装webalizer:<br>     sudo apt-get install webalizer<br>     sudo webalizer<br>                    默认页面路径 /var/www/webalizer<br>     webalizer 配置文件： /etc/webalizer/webalizer.conf<br>                   logFile         更改要分析的log文件<br>                   OutputDir    分析好的文件存放位置  </p>
<p>2、安装awstats<br>    1、 sudo apt-get install awstats<br>     2、让apache下所有站点都可使用awstats<br>            sudo nano /etc/apache2/awstats.conf<br> Alias /awstatsclasses “/usr/share/awstats/lib”<br>                    Alias /awstats-icon/  “/usr/share/awstats/icon/“<br>                    Alias /awstatscss     “/usr/share/doc/awstats/examples/css”<br>                    ScriptAlias /cgi-bin/  /usr/lib/cgi-bin/<br>                    ScriptAlias /awstats/  /usr/lib/cgi-bin/<br>                    Options ExecCGI -MultiViews +SymLinksIfOwnerMatch<br>           将配置文件加入到apache2.conf中<br>                    在apache2.conf中最后添加： Include /etc/apache2/awstats.conf<br>           重新加载apache配置：  sudo /etc/init.d/apache2 reload<br>     3、修改awstats配置文件 /etc/awstats/awstats.conf<br>                    1、sudo cp -a awstats.conf awstats.192.168.1.10.conf<br>                    2、sudo nano /etc/awstats/awstats.192.168.1.10.conf<br>                             修改LogFile 和 SiteDomain<br>     4、运行awstats来分析结果（非必须，可嫩cron运行后查看）<br>                   sudo perl /usr/lib/cgi-bin/awstats.pl -update -config=192.168.1.10</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu server 10.04  .htaccess认证</title>
    <url>/posts/3451413846/</url>
    <content><![CDATA[<p>浏览权限设置<br>1、针对IP、主机名称<br>      /etc/apache2/sites-available/default 里面设置  </p>
<p>2、输入帐号密码<br>    1&gt; 建一个要保护的目录<br>         mkdir /var/www/protect<br>    2&gt;确定下面是存在的(本来就在的)<br>        /etc/apache2/apache2.conf  </p>
<h1 id="The-following-lines-prevent-htaccess-and-htpasswd-files-from-being"><a href="#The-following-lines-prevent-htaccess-and-htpasswd-files-from-being" class="headerlink" title="The following lines prevent .htaccess and .htpasswd files from being"></a>The following lines prevent .htaccess and .htpasswd files from being</h1><h1 id="viewed-by-Web-clients"><a href="#viewed-by-Web-clients" class="headerlink" title="viewed by Web clients."></a>viewed by Web clients.</h1><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p> &lt;Files ~ “^\.ht”&gt;<br> Order allow,deny<br> Deny from all<br> Satisfy all<br> </Files>  </p>
<p>        /etc/apache2/sites-available/default 加入<br> &lt;Directory /var/www/protect&gt;<br> AllowOverride AuthConfig<br> Order allow,deny<br> allow from all<br> </Directory><br>  <br>     3&gt;在/var/www/protect 建 .htaccess 文件 并加入<br> AuthName        “Protect test by .htaccess”     #出现对话框<br> Authtype           Basic                                      #认证的类型<br> AuthUserFile    /var/apache2.passwd             #密码文件地址<br> Require            valid-user                               #允许的用户，valid-user表示apache2.passwd里的帐号都可登录  </p>
<p>    4&gt;建密码文件 apache2.passwd<br>                sudo htpasswd -c /var/apache2.passwd test020    #新建并添加帐号<br>                sudo htpasswd -c /var/apache2.passwd test021    #追加帐号<br> <br>   5&gt; 重启apache    ：sudo apache2ctl restart<br>  <br>3&gt; SSL 认证<br>    待续</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu server 10.04 NFS设置</title>
    <url>/posts/160023932/</url>
    <content><![CDATA[<p>1、安装软件<br>       portmap：sudo apt-get install portmap<br>       nfs：    sudo apt-get install nfs-kernel-server  </p>
<p>       1&gt;相关服务<br>            portmap<br>            nfs<br>        2&gt;相关端口<br>             RPC端口        111<br>             nfs启动端口   2049<br>        3&gt;相关命令<br>             rpc相关命令：  <br>                   rpcinfo -p ip             查看rpc开放的端口<br>             nfs 相关命令：<br>                   showmount -a         查看哪些人连接到本机<br>                   showmount -e IP     查看IP的这台主机共享出来的目录<br>                   exportfs -arv            本机的共享目录全部重新加载<br>                   exportfs -auv           本机的共享目录全部卸载  </p>
<p>2、相关设置<br>     1&gt;防火墙设置<br>                 针对IP和端口111<br>     2&gt;tcp wrappers设置<br>                /etc/hosts.allow<br>                /etc/hosts.deny<br>     3&gt;共享文件权限设置<br>                rwx<br>     4&gt;nfs配置文件设置<br>                 /etc/exports<br>     5&gt;uid/gid相关权限说明<br>               1&gt;相同uid和帐号、组：直接以该帐号操作<br>               2&gt;相同uid但帐号不同：以该uid所对应的帐号操作<br>               3&gt;没有该uid：以匿名方式操作uid号：65534<br>                            root：以匿名方式操作uid号：65534<br>     6&gt;本机加载时对mount进行限制  </p>
<p>      1、防火墙设置：sudo ufw (不能设置端口，不安全)<br>                       sudo ufw allow 192.168.2.0/24<br>      2、/etc/hosts.allow<br>                       mountd:192.168.2.0/24 :allow<br>      3、rwx<br>      4、/etc/exports<br>             共享目录        分享对象(相关的权限)<br>                                  相关权限：rw，sync，root_squash，all_squash，anonuid，anongid<br>      5、从4、进行设置<br>      6、mount设置<br>              mount  -t nfs -o nosuid,noexec,nodev,rw 192.168.2.187:/home/nfsshare /media/nfs  </p>
<p>详细设置<br>1、sudo apt-get install portmap<br>      sudo apt-get install nfs-kernel-server<br>2、sudo ufw allow 192.168.2.0/24<br>3、mkdir /home/nfsshare<br>      chmod 777 /home/nfsshare<br>4、/etc/exports<br>      /home/nfsshare     192.168.2.0/24(rw,sync,all_squash,anonuid=65534,anongid=65534)<br>5、sudo service portmap restart<br>      sudo service nfs-kernel-server restart<br>6、本地加载：<br>      mount  -t nfs -o nosuid,noexec,nodev,rw 192.168.2.187:/home/nfsshare /media/nfs</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu server 10.04 samba 需要用户名和密码访问</title>
    <url>/posts/3255764824/</url>
    <content><![CDATA[<p>1、防火墙开启相关端口</p>
<blockquote>
<p>sudo ufw enable               #开启ufw</p>
<p>sudo ufw default deny      #关闭外部对本机的所有访问</p>
<p>sudo ufw allow 137</p>
<p>sudo ufw allow 138</p>
<p>sudo ufw allow 139</p>
<p>sudo ufw allow 445</p>
<p>ufw相关操作请查看 <a href="http://wiki.ubuntu.org.cn/UFW%E9%98%B2%E7%81%AB%E5%A2%99%E7%AE%80%E5%8D%95%E8%AE%BE%E7%BD%AE">http://wiki.ubuntu.org.cn/UFW防火墙简单设置</a></p>
</blockquote>
<blockquote>
<p>ufw补充：sudo ufw allow from 192.168.2.0/24 to any port 21   #允许某个IP访问某个端口</p>
</blockquote>
<p>2、设置要共享的文件夹权限</p>
<blockquote>
<p>chmod 0777 TEMP</p>
</blockquote>
<p>3、写配置</p>
<p>[global]</p>
<blockquote>
<p>workgroup = WORKGROUP</p>
<p>netbios name = IT-TEST</p>
<p>server string = it-test</p>
<p>display charset = utf-8</p>
<p>dos charset = cp936</p>
<p>socket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192</p>
<p>dns proxy = no</p>
<p>template shell = /bin/false</p>
<p>winbind use default domain = no</p>
<p>security = user</p>
<p>encrypt passwords = yes</p>
<p>smb passwd file = /etc/samba/smbpasswd</p>
<p>name resolve order = lmhosts bcast host</p>
<p>#hosts allow 表示允许哪些网段可以访问</p>
</blockquote>
<p>[homes]                              #[homes]表示家目录，不是共享文件夹名称</p>
<blockquote>
<p>comment = user home directories</p>
<p>browseable=no        #不允许别人查看</p>
<p>writable = yes           #允许登陆用户读写</p>
</blockquote>
<p>[temp]</p>
<blockquote>
<p>comment = read write</p>
<p>path = /media/TEMP</p>
<p>writeable = yes</p>
<p>public = yes</p>
<p>write list=@test1                                       #表示组成员可访问</p>
<p>#valid users = test001，test0022            #设置某些用户可访问</p>
<p>#only guest=yes 表示采用nobody也就是guest的权限登陆。</p>
<p>create mode = 0666</p>
<p>directory mode = 0777</p>
</blockquote>
<p>4、新建 smbpasswd文件</p>
<blockquote>
<p>smbpasswd默认是没有的，通过smbpasswd -a等添加用户后就有了。</p>
<p>samba的用户首先必须是系统用户，也就是/etc/passwd里面有的，然后才能成为samba用户</p>
<p>备注：是系统用户不一定就能登陆系统。</p>
<p>smbpasswd的操作就4个命令</p>
<p>smbpasswd -a 添加用户</p>
<p>smbpasswd -x 删除用户</p>
<p>smbpasswd -e 启用用户</p>
<p>smbpasswd -d 禁用用户</p>
</blockquote>
<p>5、添加系统账户、群组</p>
<blockquote>
<p>1&gt;添加群组 ：sudo groupadd  test1</p>
<p>2&gt;添加账户：</p>
</blockquote>
<blockquote>
<p>sudo useradd -M -s /sbin/nologin -d /dev/null -g test1  test001    </p>
</blockquote>
<blockquote>
<blockquote>
<p>#加入群组，只用于登陆samba，不登陆系统，不建家目录，</p>
</blockquote>
</blockquote>
<p>6、给samba添加用户</p>
<blockquote>
<p>sudo smbpasswd -a test001              #这个用户名必须和上面的对应起来。要输入两遍密码</p>
</blockquote>
<p>7、smb相关命令</p>
<blockquote>
<p>smbstatus：服务端查看连接到本服务器的连接状态</p>
</blockquote>
<blockquote>
<p>smbclient -L //IP ：查看资源列表</p>
<p>smbclient //IP -U user ：使用用户身份登陆到samba服务器，然后使用ftp命令上传下载文件</p>
<p>smbmount //IP /mnt/share -o username=user    挂在共享文件夹到本地 。参数同mount</p>
<p>mount -t smbfs //IP /mnt/share -o username=user</p>
</blockquote>
<p>以上2013.10.09更改，接下去学习smb.conf配置文件。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu server 10.04 :使用ssh 密钥登录服务器</title>
    <url>/posts/2047342109/</url>
    <content><![CDATA[<p>1、在客户端生成私钥：<br>      sudo apt-get install ssh-client<br>      ssh-keygen -t rsa            # (ssh-keygen -t rsa -C “my key”)<br>                                             #生成密钥：包含公钥、私钥，存放在～/.ssh/  下<br>                                             #提示输入密钥加密口令，而不是登录服务器的密码  </p>
<p>2、将公钥复制到服务器上<br>     ssh-copy-id -i ~/.ssh/id_rsa.pub  <a href="mailto:&#x74;&#x65;&#115;&#x74;&#x40;&#x31;&#x39;&#x32;&#x2e;&#x31;&#54;&#56;&#46;&#x31;&#46;&#x31;&#x30;">&#x74;&#x65;&#115;&#x74;&#x40;&#x31;&#x39;&#x32;&#x2e;&#x31;&#54;&#56;&#46;&#x31;&#46;&#x31;&#x30;</a><br>     会提示要求你测试一下<br>     输入 ssh   <a href="mailto:&#116;&#x65;&#115;&#x74;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#46;&#x31;&#46;&#x31;&#x30;">&#116;&#x65;&#115;&#x74;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#46;&#x31;&#46;&#x31;&#x30;</a> 会提示你输入密钥的加密口令，输入后即可登录远程服务器  </p>
<p>配置ssh<br>配置文件在 /etc/init.d/sshd_config<br>1、更改端口 将22 更改为其他端口 更改后以后登录的格式为  ssh <a href="mailto:&#116;&#x65;&#x73;&#116;&#x40;&#49;&#57;&#50;&#x2e;&#49;&#54;&#56;&#x2e;&#49;&#x2e;&#49;&#48;">&#116;&#x65;&#x73;&#116;&#x40;&#49;&#57;&#50;&#x2e;&#49;&#54;&#56;&#x2e;&#49;&#x2e;&#49;&#48;</a> -p 端口号<br>2、禁用密码登录，仅允许密钥登录<br>   PermitRootLogin no<br>   PasswordAuthentication no<br>   UsePAM no<br>  然后重启 ssh ：sudo /etc/init.d/ssh restart  </p>
<p>其他：<br>1、修改密钥加密口令： ssh-keygen -p<br>2、限制scp占用的带宽： scp -l 256 <a href="mailto:&#116;&#101;&#115;&#116;&#x40;&#x31;&#57;&#50;&#46;&#x31;&#54;&#x38;&#x2e;&#49;&#46;&#49;&#x30;">&#116;&#101;&#115;&#116;&#x40;&#x31;&#57;&#50;&#46;&#x31;&#54;&#x38;&#x2e;&#49;&#46;&#49;&#x30;</a>:/ .       #256Kb/s</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu server 10.04 安装 LAMP</title>
    <url>/posts/3097134107/</url>
    <content><![CDATA[<p>1、安装软件：apt-get install apache2 mysql-server mysql-client php5 php5-gd php5-mysql<br>            1&gt; 可以打开<a href="http://127.0.0.1/">http://127.0.0.1/</a>     说明apache已启动<br>            2&gt; 设置mysql root 密码             mysql亦已启动<br>2、设置www权限：`sudo chmod 777 /var/www<br>3、启用 mod_rewrite 模块<br>   终端命令：sudo a2enmod rewrite<br>   重启Apache服务器：sudo /etc/init.d/apache2 restart<br>       1&gt; php 设置成功  </p>
<p>4、安装phpmyadmin (非必须，就是设置mysql比较容易点)<code>sudo apt-get install phpmyadmin     另外输入上面设置的mysql密码           sudo ln -s /usr/share/phpmyadmin /var/www    (非必须，好像不连接也能用的)  </code>  </p>
<p><strong>在/var/www内新建网页用于测试</strong><br>1、``<?php phpinfo(); ?>  用来测试PHP是否好用<br>2、<br><code>&lt;?php   $link = mysql\_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;添入刚才设置的密码&quot;);   if (!$link)   &#123;   die(&#39;Could not connect: &#39; . mysql\_error());   &#125;   else echo &quot;Mysql Is Working&quot;;   mysql\_close($link);   ?&gt;   </code>测试mysql是否可用  </p>
<p><strong>其他测试：</strong><br>netstat -tunl<br>查看 80端口和 3306端口即可知道 apache2 和 mysql 是否启动  </p>
<p><strong>相关配置文件：</strong><br>1、apache2 相关文件：<br>   /etc/apache2/apache2.conf    apache配置文件<br>   /etc/apache2/conf.d          自定义配置文件<br>   /var/www                     网页存放区<br>   /usr/sbin/apache2ctl         apache的执行文件<br>   /usr/bin/htpasswd            apache密码保护<br>`2、mysql 相关文件：<br>      /etc/mysql/my.cnf                              mysql配置文件<br>3、mysql相关文件：<br>     /etc/php5/apache2/php.ini                 php配置文件<br>     /etc/php5/conf.d/mysql.ini                  php支持mysql接口  </p>
<p>参考：<br><a href="http://blog.myspace.cn/e/407367767.htm">http://blog.myspace.cn/e/407367767.htm</a><br><a href="http://farlee.info/archives/ubuntu-server-install-lamp-phpmyadmin-vsftpd-zend-framework.html">http://farlee.info/archives/ubuntu-server-install-lamp-phpmyadmin-vsftpd-zend-framework.html</a>    (内有乱码解决方案，挺好)</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu server 10.04 安装PHP强化模块</title>
    <url>/posts/2665123118/</url>
    <content><![CDATA[<p>1、安装eaccelerator<br> wget <a href="http://bart.eaccelerator.net/source/0.9.6.1/eaccelerator-0.9.6.1.tar.bz2">http://bart.eaccelerator.net/source/0.9.6.1/eaccelerator-0.9.6.1.tar.bz2</a><br> tar -jxvf eaccelerator-0.9.6.1.tar.bz2<br> cd ./eaccelerator-0.9.6.1<br> phpize5 #这个要安装的 sudo apt-get install php-dev<br> ./configure –enable-eaccelerator=shared –with-php-config=/usr/bin/php-config<br> make<br> make install  </p>
<p>2、配置相关文件<br> sudo nano /etc/ld.so.conf<br>       加入 /usr/lib/php5<br> sudo ldconfig<br> sudo nano /etc/php5/apache2/php.ini<br>          加入<br> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br>;<a href="http://eaccelerator.net/">http://eaccelerator.net</a>;<br>;2010.09.29 ywz;<br>;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br>extension=”eaccelerator.so”<br>eaccelerator.shm_size=”16”<br>eaccelerator.cache_dir=”/tmp/eaccelerator”<br>eaccelerator.enable=”1”<br>eaccelerator.optimizer=”1”<br>eaccelerator.check_mtime=”1”<br>eaccelerator.debug=”0”<br>eaccelerator.filter=””<br>eaccelerator.shm_max=”0”<br>eaccelerator.shm_ttl=”0”<br>eaccelerator.shm_prune_period=”0”<br>eaccelerator.shm_only=”0”<br>eaccelerator.compress=”1”<br>eaccelerator.compress_level=”9”  </p>
<p>3、建暂存数据目录<br>mkdir /tmp/eaccelerator<br>chmod 777 /tmp/eaccelerator<br>sudo apache2ctl restart  </p>
<p>4、测试<br>ab -dSk -c100 -n100 <a href="http://127.0.0.1/index.php">http://127.0.0.1/index.php</a>     #index.php  是自己建立的 内容为 <? phpinfo(); ?></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu server 10.04:apache1:安装ssl</title>
    <url>/posts/1720998562/</url>
    <content><![CDATA[<p>1、安装apache： sudo apt-get install apache2<br>2、创建虚拟主机：<br>      cd /etc/apache2/sites-available<br>      sudo cp -a default blog.test.com<br>     sudo mkdir /var/www/blog.test.com<br>     更改blog.test.com配置：略<br>3、开启虚拟主机：<br>     sudo a2dissite default<br>     sudo a2ensite blog.test.com<br>     sudo /etc/init.d/apache2 restart<br>4、设置ssl<br>     1、启动模块 sudo a2enmod ssl<br>     2、创建key openssl genrsa -des3 -out server.key 1024<br>           创建csr证书 openssl req -new -key server.key -out server.csr<br>           创建crt自己认证的证书  openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt<br>     3、安装证书<br>            sudo cp server.crt /etc/ssl/certs<br>            sudo cp server.key /etc/ssl/private<br>     4、修改配置 blog.test.com<br>          DocumentRoot一行的下方加入内容：<br>          SSLEngine on<br>          SSLOptions +StrictRequire<br>         SSLCertificateFile /etc/ssl/certs/server.crt<br>         SSLCertificateKeyFile /etc/ssl/private/server.key<br>      5、重启apache<br>            sudo /etc/init.d/apache2 restart</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu Server 14.04 安装nagios，nrpe</title>
    <url>/posts/3633964971/</url>
    <content><![CDATA[<p>0、安装软件</p>
<p>1、设置主机及相关关系</p>
<p>2、设置主机组</p>
<p>3、设置监控的服务</p>
<p>4、nrpe设置</p>
<p>0、安装软件及初始化</p>
<blockquote>
<p>sudo apt-get install apache2 -y</p>
</blockquote>
<blockquote>
<p>sudo apt-get install nagios3 nagios-plugins nagios-images -y</p>
</blockquote>
<blockquote>
<p>更改管理员账户</p>
</blockquote>
<blockquote>
<p>sudo sed -i ‘s/nagiosadmin/ywz/g’ /etc/nagios3/cgi.cfg </p>
</blockquote>
<blockquote>
<p>sudo htpasswd /etc/nagios3/htpasswd.users ywz</p>
</blockquote>
<blockquote>
<p>添加用户</p>
</blockquote>
<blockquote>
<p>sudo htpasswd /etc/nagios3/htpasswd.users user1</p>
</blockquote>
<blockquote>
<p>联系人设置</p>
</blockquote>
<blockquote>
<blockquote>
<p>define contact{</p>
</blockquote>
<blockquote>
<p>        contact_name                    ywz</p>
</blockquote>
<blockquote>
<p>        alias                           ywz</p>
</blockquote>
<blockquote>
<p>        service_notification_period     24x7</p>
</blockquote>
<blockquote>
<p>        host_notification_period        24x7</p>
</blockquote>
<blockquote>
<p>        service_notification_options    w,u,c,r</p>
</blockquote>
<blockquote>
<p>        host_notification_options       d,r</p>
</blockquote>
<blockquote>
<p>        service_notification_commands   notify-service-by-email</p>
</blockquote>
<blockquote>
<p>        host_notification_commands      notify-host-by-email</p>
</blockquote>
<blockquote>
<p>        email                           ywz_<a href="mailto:&#x33;&#x30;&#54;&#x40;&#49;&#x36;&#x33;&#x2e;&#99;&#111;&#109;">&#x33;&#x30;&#54;&#x40;&#49;&#x36;&#x33;&#x2e;&#99;&#111;&#109;</a></p>
</blockquote>
<blockquote>
<p>        }</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>define contactgroup{</p>
</blockquote>
<blockquote>
<p>        contactgroup_name       admins</p>
</blockquote>
<blockquote>
<p>        alias                   Nagios Administrators</p>
</blockquote>
<blockquote>
<p>        members                 ywz</p>
</blockquote>
<blockquote>
<p>        }</p>
</blockquote>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/mkDjilPJUD95PABtOkq2QA==/6630544398164876428.png" alt="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------" title="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>1、设置主机及用户组</p>
<blockquote>
<p>设置名称，地址，及相互连接方式</p>
</blockquote>
<blockquote>
<p>sudo nano /etc/nagios3/conf.d/hosts.cfg</p>
</blockquote>
<blockquote>
<blockquote>
<p>define host{</p>
</blockquote>
<blockquote>
<p>        host_name Baidu</p>
</blockquote>
<blockquote>
<p>        alias   IC</p>
</blockquote>
<blockquote>
<p>        address <a href="http://www.baidu.coom/">www.baidu.coom</a></p>
</blockquote>
<blockquote>
<p>        use     generic-host</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>define host{</p>
</blockquote>
<blockquote>
<p>        host_name WAN</p>
</blockquote>
<blockquote>
<p>        alias   pppoe</p>
</blockquote>
<blockquote>
<p>        address  172.24.214.44</p>
</blockquote>
<blockquote>
<p>        parents Baidu</p>
</blockquote>
<blockquote>
<p>        use     generic-host</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>define host{</p>
</blockquote>
<blockquote>
<p>        host_name Lan</p>
</blockquote>
<blockquote>
<p>        alias   route</p>
</blockquote>
<blockquote>
<p>        address 192.168.3.1</p>
</blockquote>
<blockquote>
<p>        parents WAN</p>
</blockquote>
<blockquote>
<p>        use     generic-host</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>define host{</p>
</blockquote>
<blockquote>
<p>        host_name haproxy1</p>
</blockquote>
<blockquote>
<p>        alias   haproxy1</p>
</blockquote>
<blockquote>
<p>        address 192.168.3.17</p>
</blockquote>
<blockquote>
<p>        parents Lan</p>
</blockquote>
<blockquote>
<p>        use     generic-host</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>define host{</p>
</blockquote>
<blockquote>
<p>        host_name haproxy2</p>
</blockquote>
<blockquote>
<p>        alias   haproxy2</p>
</blockquote>
<blockquote>
<p>        address 192.168.3.18</p>
</blockquote>
<blockquote>
<p>        parents Lan</p>
</blockquote>
<blockquote>
<p>        use     generic-host</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>define host{</p>
</blockquote>
<blockquote>
<p>        host_name www1</p>
</blockquote>
<blockquote>
<p>        alias   www1</p>
</blockquote>
<blockquote>
<p>        address 192.168.3.33</p>
</blockquote>
<blockquote>
<p>        parents Lan</p>
</blockquote>
<blockquote>
<p>        use     generic-host</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<p><img src="http://img0.ph.126.net/uc9XHREN4TrO5B_baEmJ7g==/6630876450676878426.png" alt="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------" title="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>2、设置主机组</p>
<blockquote>
<p>sudo nano /etc/nagios3/conf.d/hostgroups_nagios2.cfg</p>
</blockquote>
<blockquote>
<blockquote>
<p># Some generic hostgroup definitions</p>
</blockquote>
<blockquote>
<p># A simple wildcard hostgroup</p>
</blockquote>
<blockquote>
<p>define hostgroup {</p>
</blockquote>
<blockquote>
<p>        hostgroup_name  all</p>
</blockquote>
<blockquote>
<p>alias           All Servers</p>
</blockquote>
<blockquote>
<p>members         *</p>
</blockquote>
<blockquote>
<p>        }</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p># A list of your Debian GNU/Linux servers</p>
</blockquote>
<blockquote>
<p>define hostgroup {</p>
</blockquote>
<blockquote>
<p>        hostgroup_name  debian-servers</p>
</blockquote>
<blockquote>
<p>alias           Debian GNU/Linux Servers</p>
</blockquote>
<blockquote>
<p>members         localhost,haproxy1,haproxy2,www1</p>
</blockquote>
<blockquote>
<p>        }</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p># A list of your web servers</p>
</blockquote>
<blockquote>
<p>define hostgroup {</p>
</blockquote>
<blockquote>
<p>        hostgroup_name  http-servers</p>
</blockquote>
<blockquote>
<p>alias           HTTP servers</p>
</blockquote>
<blockquote>
<p>members         localhost,www1</p>
</blockquote>
<blockquote>
<p>        }</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p># A list of your ssh-accessible servers</p>
</blockquote>
<blockquote>
<p>define hostgroup {</p>
</blockquote>
<blockquote>
<p>        hostgroup_name  ssh-servers</p>
</blockquote>
<blockquote>
<p>alias           SSH servers</p>
</blockquote>
<blockquote>
<p>members         localhost, haproxy1, haproxy2,www1</p>
</blockquote>
<blockquote>
<p>        }</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>define hostgroup {</p>
</blockquote>
<blockquote>
<p>hostgroup_name all-gateways</p>
</blockquote>
<blockquote>
<p>aliasAll Gateways</p>
</blockquote>
<blockquote>
<p>membersLan, WAN</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>define hostgroup {</p>
</blockquote>
<blockquote>
<p>hostgroup_name ubuntu-servers</p>
</blockquote>
<blockquote>
<p>aliasUbuntu servers</p>
</blockquote>
<blockquote>
<p>members localhost, haproxy1, haproxy2, www1</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<p><img src="http://img1.ph.126.net/8LDGl8VTCyukhUv18UrBwA==/6630272818792815316.png" alt="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------" title="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>2.1设置设备图标</p>
<blockquote>
<p>sudo nano /etc/nagios3/conf.d/extinfo_nagios2.cfg</p>
</blockquote>
<blockquote>
<p>##</p>
<p>## Extended Host and Service Information</p>
<p>##</p>
<p>define hostextinfo{</p>
<p>        hostgroup_name   debian-servers</p>
<p>        notes            Debian GNU/Linux servers</p>
<p>#       notes_url        <a href="http://webserver.localhost.localdomain/hostinfo.pl?host=netware1">http://webserver.localhost.localdomain/hostinfo.pl?host=netware1</a></p>
<p>        icon_image       base/debian.png</p>
<p>        icon_image_alt   Debian GNU/Linux</p>
<p>        vrml_image       debian.png</p>
<p>        statusmap_image  base/debian.gd2</p>
<p>        }</p>
<p>define hostextinfo{</p>
<p>hostgroup_name all-gateways</p>
<p>icon_image base/ng-switch40.png</p>
<p>statusmap_image base/ng-switch40.png</p>
<p>}</p>
<p>define hostextinfo{</p>
<p>hostgroup_name ubuntu-servers</p>
<p>icon_image base/ubuntu.png</p>
<p>statusmap_image base/ubuntu.png</p>
<p>}</p>
</blockquote>
<p>3、设置需要监控服务</p>
<blockquote>
<p>sudo nano /etc/nagios3/conf.d/services_nagios2.cfg</p>
</blockquote>
<blockquote>
<blockquote>
<p># check that web services are running</p>
</blockquote>
<blockquote>
<p>define service {</p>
</blockquote>
<blockquote>
<p>        hostgroup_name                  http-servers</p>
</blockquote>
<blockquote>
<p>        service_description             HTTP</p>
</blockquote>
<blockquote>
<p> check_command                   check_http</p>
</blockquote>
<blockquote>
<p>        use                             generic-service</p>
</blockquote>
<blockquote>
<p>notification_interval           0 ; set &gt; 0 if you want to be renotified</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p># check that ssh services are running</p>
</blockquote>
<blockquote>
<p>define service {</p>
</blockquote>
<blockquote>
<p>        hostgroup_name                  ssh-servers</p>
</blockquote>
<blockquote>
<p>        service_description             SSH</p>
</blockquote>
<blockquote>
<p>check_command                   check_ssh</p>
</blockquote>
<blockquote>
<p>        use                             generic-service</p>
</blockquote>
<blockquote>
<p>notification_interval           0 ; set &gt; 0 if you want to be renotified</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>define service {</p>
</blockquote>
<blockquote>
<p>hostgroup_nameall-gateways</p>
</blockquote>
<blockquote>
<p>service_descriptionPING</p>
</blockquote>
<blockquote>
<p>check_commandcheck_ping!100.0,20%!500.0,60%</p>
</blockquote>
<blockquote>
<p>usegeneric-service</p>
</blockquote>
<blockquote>
<p>notification_interval0</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<p><img src="http://img2.ph.126.net/980I-29uNSfLr03RIM8r4A==/6630603771793179824.png" alt="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------" title="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>3.1 nagios-plugins 安装</p>
<blockquote>
<p><a href="http://nagios-plugins.org/">http://nagios-plugins.org/</a></p>
<p><a href="https://www.nagios.org/download/plugins/">https://www.nagios.org/download/plugins/</a></p>
</blockquote>
<p>4、nrpe相关设置</p>
<blockquote>
<p>被控端</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo apt-get install nagios-nrpe-server -y</p>
</blockquote>
<blockquote>
<p>更改配置文件</p>
</blockquote>
<blockquote>
<p>sudo nano /etc/nagios/nrpe.cfg</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>allowed_hosts=192.168.1.50  </p>
<p>command[check_all_disks]=/usr/lib/nagios/plugins/check_disk -w 20% -c 10% -e</p>
</blockquote>
<p>sudo service nagios-nrpe-server restart</p>
</blockquote>
<p>主控端</p>
</blockquote>
<blockquote>
<blockquote>
<p>新建单独的配置文件</p>
</blockquote>
<blockquote>
<p>sudo nano /etc/nagios3/conf.d/www1.cfg</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>define service{<br>usegeneric-service<br>host_name www1<br>service_descriptionDisk space<br>check_commandcheck_nrpe_1arg!check_all_disks<br>}  </p>
<p>define service{ <br>        use     generic-service<br>        host_name       www1       <br>        service_description     Current Users<br>        check_command   check_nrpe_1arg!check_users<br>}  </p>
<p>define service{ <br>        use     generic-service<br>        host_name       www1       <br>        service_description     Total Processes<br>        check_command   check_nrpe_1arg!check_total_procs<br>}  </p>
<p>define service{ <br>        use     generic-service<br>        host_name       www1       <br>        service_description     Current Load<br>        check_command   check_nrpe_1arg!check_load<br>}</p>
</blockquote>
<blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
<p>说明</p>
</blockquote>
<blockquote>
<p>1、插件的命令全部放在/usr/lib/nagios/plugins/下面</p>
</blockquote>
<blockquote>
<p><img src="http://img0.ph.126.net/qHQS3yZeIwfewi25KrBj_A==/6630728016607132347.png" alt="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------" title="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<blockquote>
<p>2、check_nrpe_1arg 命令定义在/etc/nagios-plugins/config/check_nrpe.cfg</p>
<p><img src="http://img0.ph.126.net/tngLW9gV9Z7bndmk7TSHsQ==/6630640055676909957.png" alt="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------" title="Ubuntu Server 14.04 安装nagios，nrpe - leaf - ------勤解万难------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu server 配置samba遇到的问题</title>
    <url>/posts/4091169391/</url>
    <content><![CDATA[<p>1、开放了防火墙<br>2、samba服务开着的<br>3、smb.conf都对的，放到桌面上能用<br>4、文件夹权限也都对的  </p>
<p>百思不得其解，最后还是权限出了问题  </p>
<p>安装ubuntu server的时候选择了“加密用户目录“，导致用户目录里的资料都不能共享，即使共享了别人也访问不了</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04     /etc目录说明</title>
    <url>/posts/3248068869/</url>
    <content><![CDATA[<p>ls -al /etc | awk ‘{print $8}’</p>
<p>acpi                              #管电源</p>
<p>adduser.conf                 #adduser默认配置</p>
<p>alternatives</p>
<p>anacrontab                   #anacron配置文件，anacron用于执行关机期间的cron</p>
<p>apache2                       #apache配置文件夹</p>
<p>apm                             #管电源</p>
<p>apparmor                     #应用程序访问控制系统，类似selinux</p>
<p>apparmor.d       </p>
<p>apport                          #用于生成系统崩溃报告</p>
<p>apt                              #apt配置</p>
<p>at.deny                        #设置哪些用户不能用at</p>
<p>avahi                           #IPv4LL网络地址配置后台</p>
<p>bash.bashrc                 #.bashrc默认配置</p>
<p>bash_completion          #bash自动补齐功能</p>
<p>bash_completion.d       </p>
<p>bindresvport.blacklist    #600-1024的端口绑定</p>
<p>blkid.conf                     #查看文件系统信息等</p>
<p>blkid.tab</p>
<p>bluetooth                     #蓝牙配置文件</p>
<p>bogofilter.cf                 </p>
<p>bonobo-activation</p>
<p>brlapi.key</p>
<p>brltty</p>
<p>byobu</p>
<p>ca-certificates</p>
<p>ca-certificates.conf</p>
<p>calendar</p>
<p>chatscripts</p>
<p>checkbox.d</p>
<p>compizconfig</p>
<p>computer-janitor.d</p>
<p>ConsoleKit</p>
<p>console-setup</p>
<p>couchdb</p>
<p>cron.d                          #cron配置文件</p>
<p>cron.daily</p>
<p>cron.hourly</p>
<p>cron.monthly</p>
<p>crontab</p>
<p>cron.weekly</p>
<p>crypttab</p>
<p>cups                            #cups配置</p>
<p>cvs-cron.conf</p>
<p>cvs-pserver.conf</p>
<p>dbconfig-common</p>
<p>dbus-1                         #输入法配置</p>
<p>debconf.conf</p>
<p>debian_version</p>
<p>default</p>
<p>defoma</p>
<p>deluser.conf</p>
<p>depmod.d</p>
<p>dhcp3</p>
<p>dictionaries-common</p>
<p>doc-base</p>
<p>dpkg                           #dpkg配置</p>
<p>eioXpack</p>
<p>emacs</p>
<p>environment               #环境参数</p>
<p>esound</p>
<p>Evermore</p>
<p>firefox</p>
<p>firefox-3.0</p>
<p>fonts                          #字体配置</p>
<p>foomatic</p>
<p>fstab                          #默认文件系统加载</p>
<p>fuse.conf</p>
<p>gai.conf</p>
<p>gamin</p>
<p>gconf</p>
<p>gdb</p>
<p>gdm</p>
<p>gimp</p>
<p>gnome</p>
<p>gnome-app-install</p>
<p>gnome-system-tools</p>
<p>gnome-vfs-2.0</p>
<p>gnome-vfs-mime-magic</p>
<p>gre.d</p>
<p>groff</p>
<p>group</p>
<p>group-</p>
<p>grub.d</p>
<p>gshadow                       #组密码配置</p>
<p>gshadow-</p>
<p>gtk-2.0</p>
<p>hal</p>
<p>hdparm.conf</p>
<p>host.conf            </p>
<p>hostname                      #计算机名</p>
<p>hosts                            #IP地址对应</p>
<p>hosts.allow                    </p>
<p>hosts.deny</p>
<p>hp</p>
<p>ifplugd</p>
<p>init</p>
<p>init.d</p>
<p>initramfs-tools</p>
<p>inputrc</p>
<p>insserv</p>
<p>insserv.conf</p>
<p>insserv.conf.d</p>
<p>iproute2</p>
<p>issue                           #登录提示</p>
<p>issue.net                     #网络登录提示</p>
<p>.java</p>
<p>java-6-openjdk</p>
<p>kbd</p>
<p>kernel</p>
<p>kernel-img.conf</p>
<p>kerneloops.conf</p>
<p>ldap</p>
<p>ld.so.cache</p>
<p>ld.so.conf</p>
<p>ld.so.conf.d</p>
<p>legal</p>
<p>lftp.conf</p>
<p>libpaper.d</p>
<p>locale.alias</p>
<p>localtime</p>
<p>logcheck</p>
<p>login.defs</p>
<p>logrotate.conf            #轮替配置</p>
<p>logrotate.d                #轮替包含文件</p>
<p>lsb-base</p>
<p>lsb-base-logging.sh</p>
<p>lsb-release</p>
<p>ltrace.conf</p>
<p>magic</p>
<p>magic.mime</p>
<p>mailcap</p>
<p>mailcap.order</p>
<p>manpath.config</p>
<p>menu</p>
<p>menu-methods</p>
<p>mime.types</p>
<p>mke2fs.conf</p>
<p>modprobe.d</p>
<p>modules</p>
<p>mono</p>
<p>motd</p>
<p>mplayer</p>
<p>mtab                         #所有加载的文件系统记录</p>
<p>mtab.fuselock</p>
<p>mtools.conf</p>
<p>mysql</p>
<p>nanorc</p>
<p>netscsid.conf</p>
<p>network</p>
<p>NetworkManager</p>
<p>networks</p>
<p>nsswitch.conf</p>
<p>obex-data-server</p>
<p>ocsinventory</p>
<p>openal</p>
<p>openoffice</p>
<p>opt</p>
<p>pam.conf</p>
<p>pam.d</p>
<p>pango</p>
<p>papersize</p>
<p>passwd                      #系统账户</p>
<p>passwd-</p>
<p>pcmcia</p>
<p>perl</p>
<p>php5</p>
<p>pm</p>
<p>pnm2ppa.conf</p>
<p>polkit-1</p>
<p>popularity-contest.conf</p>
<p>ppp</p>
<p>profile</p>
<p>profile.d</p>
<p>protocols</p>
<p>pulse</p>
<p>purple</p>
<p>.pwd.lock</p>
<p>python</p>
<p>python2.6</p>
<p>rc0.d                          #系统启动时要开启的服务</p>
<p>rc1.d</p>
<p>rc2.d</p>
<p>rc3.d</p>
<p>rc4.d</p>
<p>rc5.d</p>
<p>rc6.d</p>
<p>rc.local</p>
<p>rcS.d</p>
<p>request-key.conf</p>
<p>resolvconf</p>
<p>resolv.conf                  #DNS配置</p>
<p>rmt</p>
<p>rpc</p>
<p>rsyslog.conf</p>
<p>rsyslog.d</p>
<p>samba                        #共享配置</p>
<p>sane.d</p>
<p>screenrc</p>
<p>securetty</p>
<p>security</p>
<p>sensors3.conf</p>
<p>sensors.d</p>
<p>services                        #服务端口记录</p>
<p>sgml</p>
<p>shadow                         #密码记录文件</p>
<p>shadow-</p>
<p>shells                            #系统所有的shell</p>
<p>skel                               #预配置目录</p>
<p>sound</p>
<p>speech-dispatcher</p>
<p>ssh                                #ssh配置</p>
<p>ssl</p>
<p>sudoers                          #sudo权限设置</p>
<p>sudoers.d</p>
<p>su-to-rootrc</p>
<p>sysctl.conf</p>
<p>sysctl.d</p>
<p>sysstat</p>
<p>terminfo</p>
<p>thnuclnt</p>
<p>thunderbird                     #邮箱配置</p>
<p>timezone</p>
<p>timidity</p>
<p>ts.conf</p>
<p>ucf.conf</p>
<p>udev</p>
<p>ufw                               #ufw防火墙配置</p>
<p>updatedb.conf</p>
<p>update-manager</p>
<p>update-motd.d</p>
<p>update-notifier</p>
<p>vga</p>
<p>vim                               #vi配置</p>
<p>vlc                                #影音软件VLC配置</p>
<p>vmware                        #vmware配置</p>
<p>vmware-installer           #vmware-tools文件</p>
<p>vmware-vix</p>
<p>w3m</p>
<p>wgetrc</p>
<p>wildmidi</p>
<p>wodim.conf</p>
<p>wpa_supplicant</p>
<p>X11                              #XWINDOW配置</p>
<p>xdg</p>
<p>xml</p>
<p>xul-ext</p>
<p>xulrunner-1.9.2</p>
<p>zsh_command_not_found</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04 squid配置</title>
    <url>/posts/492604514/</url>
    <content><![CDATA[<p>1、开放防火墙端口</p>
<p>2、配置squid.conf</p>
<p>acl all src all</p>
<p>acl manager proto cache_object</p>
<p>acl localhost src 127.0.0.1/32</p>
<p>acl to_localhost dst 127.0.0.0/8 0.0.0.0/32</p>
<p>acl localnet src 10.0.0.0/8 # RFC1918 possible internal network</p>
<p>acl localnet src 172.16.0.0/12 # RFC1918 possible internal network</p>
<p>acl localnet src 192.168.0.0/16 # RFC1918 possible internal network</p>
<p>acl SSL_ports port 443 # https</p>
<p>acl SSL_ports port 563 # snews</p>
<p>acl SSL_ports port 873 # rsync</p>
<p>acl Safe_ports port 80 # http</p>
<p>acl Safe_ports port 21 # ftp</p>
<p>acl Safe_ports port 443 # https</p>
<p>acl Safe_ports port 70 # gopher</p>
<p>acl Safe_ports port 210 # wais</p>
<p>acl Safe_ports port 1025-65535 # unregistered ports</p>
<p>acl Safe_ports port 280 # http-mgmt</p>
<p>acl Safe_ports port 488 # gss-http</p>
<p>acl Safe_ports port 591 # filemaker</p>
<p>acl Safe_ports port 777 # multiling http</p>
<p>acl Safe_ports port 631 # cups</p>
<p>acl Safe_ports port 873 # rsync</p>
<p>acl Safe_ports port 901 # SWAT</p>
<p>acl purge method PURGE</p>
<p>acl CONNECT method CONNECT</p>
<p>#abcgc persons——————————-</p>
<p>acl jcx arp 00:24:1D:88:58:28</p>
<p>acl brw arp 00:1E:8C:AE:05:77</p>
<p>acl lxx arp 6C:F0:49:A0:0E:89</p>
<p>acl yy  arp 6C:F0:49:78:36:AF</p>
<p>acl hwt arp 00:22:19:06:B8:8B</p>
<p>acl hhb arp 00:24:1D:DE:04:12</p>
<p>acl jzd arp 00:22:19:06:B8:4D</p>
<p>acl js  arp 6C:F0:49:08:92:1C</p>
<p>acl lw  arp 00:07:E9:D9:17:AA</p>
<p>acl pjc arp 00:1A:A0:8F:71:BE</p>
<p>acl zjm arp 6C:F0:49:81:B3:FB</p>
<p>acl chh arp 00:24:1D:88:64:7E</p>
<p>#acl lwm arp</p>
<p>#acl slm arp</p>
<p>acl abc arp 00:1B:FC:2B:F7:C0</p>
<p>#active —————————————-</p>
<p>acl worktime time M T W H F 7:30-9:30 13:00-15:00</p>
<p>#control——————————————-</p>
<p>http_access allow jcx</p>
<p>http_access allow hwt</p>
<p>http_access allow js</p>
<p>http_access allow lw</p>
<p>http_access allow zjm</p>
<p>http_access allow abc</p>
<p>http_access deny !worktime</p>
<p>http_access allow brw</p>
<p>http_access allow lxx</p>
<p>##http_access allow yy </p>
<p>##http_access allow hhb</p>
<p>http_access allow jzd</p>
<p>http_access allow pjc</p>
<p>http_access allow chh</p>
<p>##http_access allow lwm</p>
<p>##http_access allow slm</p>
<p>#http_access allow abc </p>
<p>#—————————————————</p>
<p>http_access allow manager localhost</p>
<p>http_access deny manager</p>
<p>http_access allow purge localhost</p>
<p>http_access deny purge</p>
<p>http_access deny !Safe_ports</p>
<p>http_access deny CONNECT !SSL_ports</p>
<p>http_access allow localhost</p>
<p>http_access deny all</p>
<p>icp_access allow localnet</p>
<p>icp_access deny all</p>
<p>http_port 3128</p>
<p>#———————————————</p>
<p>cache_mem 64 MB</p>
<p>cache_swap_low 80</p>
<p>cache_swap_high 85</p>
<p>maximum_object_size 32768 KB</p>
<p>#maxium_object_size_in_memory 8KB</p>
<p>cache_dir ufs /var/spool/squid 4096 64 1024</p>
<p>cache_effective_user proxy</p>
<p>cache_effective_group proxy</p>
<p>cache_mgr <a href="mailto:&#x61;&#x62;&#99;&#x40;&#49;&#54;&#x33;&#x2e;&#x63;&#111;&#x6d;">&#x61;&#x62;&#99;&#x40;&#49;&#54;&#x33;&#x2e;&#x63;&#111;&#x6d;</a></p>
<p>#———————————————</p>
<p>hierarchy_stoplist cgi-bin ?</p>
<p>access_log /var/log/squid/access.log squid</p>
<p>refresh_pattern ^ftp: 1440 20% 10080</p>
<p>refresh_pattern ^gopher: 1440 0% 1440</p>
<p>refresh_pattern -i (/cgi-bin/|\?) 0 0% 0</p>
<p>refresh_pattern (Release|Package(.gz)*)$ 0 20% 2880</p>
<p>refresh_pattern . 0 20% 4320</p>
<p>acl shoutcast rep_header X-HTTP09-First-Line ^ICY.[0-9]</p>
<p>upgrade_http0.9 deny shoutcast</p>
<p>acl apache rep_header Server ^Apache</p>
<p>broken_vary_encoding allow apache</p>
<p>extension_methods REPORT MERGE MKACTIVITY CHECKOUT</p>
<p>hosts_file /etc/hosts</p>
<p>coredump_dir /var/spool/squid</p>
<p>visible_hostname abcproxy</p>
<p>3、改/var/spool/squid的用户名、用户组为proxy</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04 sshd_config 配置文件 注解</title>
    <url>/posts/3822141323/</url>
    <content><![CDATA[<p># Package generated configuration file<br># See the sshd_config(5) manpage for details  </p>
<p># What ports, IPs and protocols we listen for<br>    # 端口号<br>Port 22<br># Use these options to restrict which interfaces/protocols sshd will bind to<br>    #监听服务器的哪个网卡的ssh联机<br>#ListenAddress ::<br>#ListenAddress 0.0.0.0<br>    #使用的协议<br>Protocol 2<br># HostKeys for protocol version 2<br>    #服务器密钥存放地址<br>HostKey /etc/ssh/ssh_host_rsa_key<br>HostKey /etc/ssh/ssh_host_dsa_key<br>#Privilege Separation is turned on for security<br>UsePrivilegeSeparation yes  </p>
<p># Lifetime and size of ephemeral version 1 server key<br>    #v1的key存活时间<br>KeyRegenerationInterval 3600<br>    #公钥的长度<br>ServerKeyBits 768  </p>
<p># Logging<br>SyslogFacility AUTH<br>LogLevel INFO  </p>
<p># Authentication:<br>LoginGraceTime 120<br>    #是否允许root登录<br>PermitRootLogin no<br>    #用户的host key改变时就不接受联机<br>StrictModes yes  </p>
<p>RSAAuthentication yes<br>PubkeyAuthentication yes<br>    #不用密码即可登录<br>AuthorizedKeysFile    %h/.ssh/authorized_keys  </p>
<p># Don’t read the user’s ~/.rhosts and ~/.shosts files<br>    #取消.rhosts来做认证<br>IgnoreRhosts yes<br># For this to work you will also need host keys in /etc/ssh_known_hosts<br>RhostsRSAAuthentication no<br># similar for protocol version 2<br>HostbasedAuthentication no<br># Uncomment if you don’t trust ~/.ssh/known_hosts for RhostsRSAAuthentication<br>#IgnoreUserKnownHosts yes  </p>
<p># To enable empty passwords, change to yes (NOT RECOMMENDED)<br>    #不允许空密码登录<br>PermitEmptyPasswords no  </p>
<p># Change to yes to enable challenge-response passwords (beware issues with<br># some PAM modules and threads)<br>ChallengeResponseAuthentication no  </p>
<p># Change to no to disable tunnelled clear text passwords<br>#PasswordAuthentication yes  </p>
<p># Kerberos options<br>#KerberosAuthentication no<br>#KerberosGetAFSToken no<br>#KerberosOrLocalPasswd yes<br>#KerberosTicketCleanup yes  </p>
<p># GSSAPI options<br>#GSSAPIAuthentication no<br>#GSSAPICleanupCredentials yes  </p>
<p>X11Forwarding yes<br>X11DisplayOffset 10<br>PrintMotd no<br>PrintLastLog yes<br>TCPKeepAlive yes<br>#UseLogin no  </p>
<p>#MaxStartups 10:30:60<br>#Banner /etc/issue.net  </p>
<p># Allow client to pass locale environment variables<br>AcceptEnv LANG LC_*  </p>
<p>Subsystem sftp /usr/lib/openssh/sftp-server  </p>
<p># Set this to ‘yes’ to enable PAM authentication, account processing,<br># and session processing. If this is enabled, PAM authentication will<br># be allowed through the ChallengeResponseAuthentication and<br># PasswordAuthentication.  Depending on your PAM configuration,<br># PAM authentication via ChallengeResponseAuthentication may bypass<br># the setting of “PermitRootLogin without-password”.<br># If you just want the PAM account and session checks to run without<br># PAM authentication, then enable this but set PasswordAuthentication<br># and ChallengeResponseAuthentication to ‘no’.<br>UsePAM yes</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04 VPN客户端设置</title>
    <url>/posts/3236162305/</url>
    <content><![CDATA[<p>1、输入IP地址，帐号，密码  </p>
<p><img src="http://img2.ph.126.net/BNZ3eDvvUGhb86GSaoz0hw==/6597804240425422604.png" alt="ubuntu10.04 VPN客户端设置 - leaf - ------坚持雅操------" title="ubuntu10.04 VPN客户端设置 - leaf - ------坚持雅操------"></p>
<p> <br>2、<br>去勾：EAP<br>打勾：use point-to-point encryption(MPPE)  </p>
<p><img src="http://img0.ph.126.net/hYkZRVA0QkhNRZO-M5xaOA==/6597408416239959615.png" alt="ubuntu10.04 VPN客户端设置 - leaf - ------坚持雅操------" title="ubuntu10.04 VPN客户端设置 - leaf - ------坚持雅操------"></p>
<p> <br>即可</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04 安装 itdb 1.1</title>
    <url>/posts/2125441215/</url>
    <content><![CDATA[<p>itdb:IT资产库存管理软件 <a href="http://www.sivann.gr/software/itdb/">http://www.sivann.gr/software/itdb/</a></p>
<p>可以全部导出为xls格式，亦可导出数据库等，除了英文，其他多挺好用的</p>
<p>0、sudo apt-get install apache2 libapache2-mod-php5 php5-sqlite sqlite3</p>
<p>1、 tar -xvf itdb-1.1.tar.gz</p>
<p> sudo mv itdb /var/www</p>
<p>2、cd /var/www/itdb</p>
<p> sudo mv pure.db itdb.db</p>
<p>3、sudo cp /etc/apache2/sites-available/default /etc/apache2/sites-available/itdb</p>
<p> sudo nano /etc/apache2/sites-available/itdb</p>
<p> 1&gt;修改DocumentRoot /var/www             为 DocumentRoot /var/www/itdb</p>
<p> 2&gt;修改&lt;DocumentRoot /var/www&gt;         为 &lt;DocumentRoot /var/www/itdb&gt;</p>
<p> 3&gt;修改Error /var/log/apache2/error.log 为 Error /var/log/apache2/error-itdb.log</p>
<p> 4&gt; 修改CustomLog /var/log/apache2/access.log combined 为</p>
<p> CustomLog /var/log/apache2/access-itdb.log combined</p>
<p> sudo a2dissite default &amp;&amp; sudo a2ensite itdb</p>
<p> sudo /etc/init.d/apache2 restart</p>
<p>4、cd /var/www/itdb</p>
<p> sudo chown www-data itdb.db </p>
<p> sudo chmod u+w itdb.db </p>
<p>5、cd /var/www</p>
<p> sudo chown www-data itdb</p>
<p> sudo chmod u+w itdb</p>
<p> sudo chown www-data /var/www/itdb/files/</p>
<p> sudo chmod u+w /var/www/itdb/files/</p>
<p>6、sudo nano conf.php 修改公司名、公司logo等</p>
<p>访问：<a href="http://localhost/">http://localhost</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04 安装 OCS Inventory + GLPI</title>
    <url>/posts/607051261/</url>
    <content><![CDATA[<p>1、ocs ：IT设备<strong>配置</strong>管理</p>
<p>2、glpi ：IT设备<strong>资产</strong>管理</p>
<p>-———————————————————————————————————————————-</p>
<p>方法一：编译安装</p>
<p>安装服务端</p>
<p>1、sudo apt-get install apache2 apache2-doc </p>
<p>     sudo su -c ‘ echo ServerName 127.0.1.1 &gt;&gt; /etc/apache2/apache2.conf’</p>
<p>     sudo /etc/init.d/apache2 reload</p>
<p>2、sudo apt-get install mysql-server</p>
<p>3、sudo apt-get install php5 php5-cgi php5-cli php5-dev php5-gd php5-mysql libapache2-mod-php5 </p>
<p>4、sudo apt-get install \</p>
<p>     dmidecode nmap perl libapache-dbi-perl libapache2-mod-perl2 libcompress-zlib-perl       \</p>
<p>     libcrypt-ssleay-perl libdbd-mysql-perl libdbi-perl libdigest-md5-perl libmodule-install-perl  \</p>
<p>     libnet-cups-perl libnet-ip-perl libnet-snmp-perl libnet-ssleay-perl libnmap-parser-perl        \</p>
<p>     libphp-pclzip libproc-daemon-perl libproc-pid-file-perl libsoap-lite-perl libwww-perl            \</p>
<p>     libxml-simple-perl</p>
<p>       #安装perl相关，另外nmblookup已经有了</p>
<p>5、安装zip</p>
<p>     sudo apt-get install libpcre3 libpcre3-dev</p>
<p>     <a href="http://pecl.php.net/package/zip">下载zip</a> </p>
<p>     tar -xvf zip-1.10.2.tgz</p>
<p>     cd zip-1.10.2</p>
<p>     phpize</p>
<p>     ./configure</p>
<p>     make</p>
<p>     sudo make install </p>
<p>6、安装 XML-Entities</p>
<p>     wget <a href="http://mirror.osqdu.org/CPAN/authors/id/S/SI/SIXTEASE/XML-Entities-1.0000.tar.gz">http://mirror.osqdu.org/CPAN/authors/id/S/SI/SIXTEASE/XML-Entities-1.0000.tar.gz</a></p>
<p>      tar -xvf XML-Entities-1.0000.tar.gz</p>
<p>      cd XML-Entities</p>
<p>      perl Makefile.PL</p>
<p>      make</p>
<p>      sudo make install</p>
<p>      或者</p>
<p>       cpan -i XML:Entities</p>
<p>7、安装OCS</p>
<p>      wget \</p>
<p>      <a href="http://launchpad.net/ocsinventory-server/stable-2.0/2.0rc4/+download/OCSNG/_UNIX/_SERVER-2.0rc4.tar.gz">http://launchpad.net/ocsinventory-server/stable-2.0/2.0rc4/+download/OCSNG\_UNIX\_SERVER-2.0rc4.tar.gz</a></p>
<p>      tar -xvf OCSNG_UNIX_SERVER-2.0rc4.tar.gz</p>
<p>      cd OCSNG_UNIX_SERVER-2.0rc4</p>
<p>      sudo sh ./setup.sh  #默认到底</p>
<p>8、sudo /etc/init.d/apache2 restart</p>
<p>9、浏览器打开：</p>
<p>     <a href="http://127.0.0.1/ocsreports">http://127.0.0.1/ocsreports</a></p>
<p>     login MYSQL:                root</p>
<p>     Mot de passe MYSQL:   密码</p>
<p>     Nom de la base donnée: 要创建的数据库名，默认即可</p>
<p>     MYSQL HostName:        localhost</p>
<p>     <a href="http://127.0.0.1/ocsreports/index.php">http://127.0.0.1/ocsreports/index.php</a></p>
<p>     admin：admin</p>
<p>10、sudo rm /usr/share/ocsinventory-reports/ocsreports/install.php</p>
<p>     重设admin密码</p>
<p>     重设ocs数据库的连接密码</p>
<p>           1、改ocs的密码</p>
<p>           2、改/usr/share/ocsinventory-reports/ocsreports/dbconfig.inc.php里面的代码</p>
<p>-—————————————————-</p>
<p>安装客户端</p>
<p>wget \</p>
<p>      <a href="http://launchpad.net/ocsinventory-unix-agent/stable-2.0/2.0rc4/+download/Ocsinventory-Agent-2.0rc4.tar.gz">http://launchpad.net/ocsinventory-unix-agent/stable-2.0/2.0rc4/+download/Ocsinventory-Agent-2.0rc4.tar.gz</a></p>
<p>      tar -xvf Ocsinventory-Agent-2.0rc4.tar.gz</p>
<p>      cd Ocsinventory-Agent-2.0rc4</p>
<p>      perl Makefile.PL</p>
<p>      make</p>
<p>      sudo make install   #要设置server的计算机名，其他默认即可</p>
<p>-———————————————————————————————————————————–</p>
<p>方法二：apt-get安装</p>
<p>1、安装ampp，同方法一：1、2、3</p>
<p>2、安装perl插件，同方法一：4、5、6</p>
<p>3、sudo apt-get install ocsinventory-server  ocsinventory-reports  </p>
<p> #设置mysql的密码，设置ocs数据库的密码</p>
<p>4、sudo apt-get install ocsinventory-agent</p>
<p>5、sudo  dpkg-reconfigure ocsinventory-agent </p>
<p>6、sudo ocsinventory-agent</p>
<p>-———————————————————————————————————————————–<br>中文化：<br>暂无<br>-———————————————————————————————————————————–  </p>
<p>GLPI安装：</p>
<p>tar -xvf glpi-0.78.4.tar.gz</p>
<p>sudo mv glpi /var/www</p>
<p>cd /var/www</p>
<p>sudo chown -R www-data:www-data glpi</p>
<p><a href="http://localhost/glpi">http://localhost/glpi</a> 设置</p>
<p>-————————————————————————————————————————————</p>
<p>参考：</p>
<p>1、扩展阅读：<a href="http://ossbox.net/open-source-IT-Asset-Mgmt">开源IT资产管理</a></p>
<p>-—————————————————–</p>
<p>1、<a href="http://doc.ubuntu-fr.org/ocs_inventory%7C#installation_du_client_linux">OCS Inventory</a></p>
<p><a href="http://doc.ubuntu-fr.org/ocs_inventory%7C#installation_du_client_linux"></a>2、<a href="http://wiki.ocsinventory-ng.org/index.php/Documentation:Main">OCS Inventory NG 2.x Documentation</a>  </p>
<p>2、<a href="http://www.itpub.net/thread-1321323-1-1.html">IT Inventory and Resource Management with OCS Inventory NG 1.02.pdf</a></p>
<p>3、<a href="http://zhjack.blog.163.com/blog/static/143149200810702324478/">Ubuntu下安装 OCS Inventory 电脑资产管理系统</a></p>
<p>4、<a href="http://viong.blog.51cto.com/844766/503694">(三)开源IT资产管理系统–&gt;OCS（unix）客户端代理安装</a></p>
<p>5、<a href="http://hi.baidu.com/kan_jian/blog/item/ae5c5a3411e64e3c5bb5f59f.html">这几天在装ocs inventory</a></p>
<p>-—————————————————-</p>
<p>1、<a href="http://www.glpi-project.org/wiki/doku.php?id=en:manual:admin:0_index">GLPI Administration Manual</a><br>2、<a href="http://viong.blog.51cto.com/844766/503735">(四)开源IT资产管理系统–&gt;部署GLPI与OCS数据同步</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04 安装ralink rt2870</title>
    <url>/posts/3720124949/</url>
    <content><![CDATA[<p>用的笔记本是msi ex465 ，查无线驱动是rt2870(虽然标着是ms-3870，但看win的inf知道是rt2870)</p>
<p>第一部分：驱动能安装却不能上网</p>
<p>1、下载驱动<br>       <a href="http://www.ralinktech.com/support.php?s=2">http://www.ralinktech.com/support.php?s=2</a>    下载：RT2870USB(RT2870/RT2770)</p>
<p>2、安装<br>     1、安装编译环境： sudo apt-get install build-essential linux-headers-generic<br>     2、配置文件修改：</p>
<p>                tar -xvf 2010_0709_RT2870_Linux_STA_v2.4.0.1.tar.bz2<br>                cd  2010_0709_RT2870_Linux_STA_v2.4.0.1<br>                lsusb   </p>
<p>                      #显示：Bus 001 Device 003: ID 0db0:3870 MICRO STAR INTERNATIONAL</p>
<p>                      #记下代码号：0db0:3870<br>                gedit common/rtusb_dev_id.c<br>                     {USB_DEVICE(0x0DB0,0x3870)},    </p>
<p>                      #添加在 #ifdef RT2870下面，就是有很多行{USB_DEVIC 的地方<br>                gedit os/linux/config.mk<br>                      HAS_WPA_SUPPLICANT=y<br>                      HAS_NATIVE_WPA_SUPPLICANT_SUPPORT=y<br>        3、编译、安装</p>
<p>               sudo su</p>
<p>               make<br>               make install<br>               modprobe  rt2870sta<br>               exit</p>
<p>         4、查看</p>
<p>               iwconfig</p>
<p> ra0 Ralink STA ESSID:”11n-AP” Nickname:”RT2870STA”<br> Mode:Auto Frequency=2.412 GHz Access Point: Not-Associated<br> Bit Rate:1 Mb/s<br> RTS thr:off Fragment thr:off<br> Link Quality=10/100 Signal level:0 dBm Noise level:0 dBm<br> Rx invalid nwid:0 Rx invalid crypt:0 Rx invalid frag:0<br> Tx excessive retries:0 Invalid misc:0 Missed beacon:0</p>
<p>      5、每次启动都开启无线</p>
<p>               sudo sh -c ‘echo rt2870sta &gt;&gt; /etc/modules’  
        </p>
<p>以上安装好后，驱动已经安装了，但是连不了网，经过我一天的努力，终于找到好东西，分享以下 哈哈～～～</p>
<p>第二部分：终极解决方法：</p>
<p>1、在这个页面下下载软件:<a href="http://wireless.kernel.org/en/users/Download#Download_latest_Linux_wireless_drivers">compat-wireless</a></p>
<p>            或者 <a href="http://linuxwireless.org/download/compat-wireless-2.6/">http://linuxwireless.org/download/compat-wireless-2.6/</a></p>
<p>2、安装</p>
<p>sudo apt-get install build-essential linux-headers-generic</p>
<p>tar -xvf compat-wireless-2.6.tar.bz2</p>
<p>cd compat-wireless-2011-03-20                    #2011-03-20是会变的</p>
<p>sudo su</p>
<p>make</p>
<p>make install </p>
<p>make unload</p>
<p>reboot</p>
<p>重启后，无线网卡即可工作，自动搜索无线信号 </p>
<p>总结：虽然现在能用无线了，可最终目的还是要解决第一部分遗留的问题，这样才能学到东西</p>
<p>哈哈，开心～～～</p>
<p>参考：</p>
<p><a href="http://ubuntuforums.org/showthread.php?t=1342593">http://ubuntuforums.org/showthread.php?t=1342593</a></p>
<p><a href="http://linuxforums.org.uk/hardware-compatibility/ralink-rt2870-based-usb-wireless-n-adapters-(ubuntu)/">http://linuxforums.org.uk/hardware-compatibility/ralink-rt2870-based-usb-wireless-n-adapters-(ubuntu)/</a></p>
<p>-——————————————————————————————————————————————–</p>
<p>终极解决方法参考：</p>
<p><a href="http://thinklouder.cn/tag/compat-wireless-26/">http://thinklouder.cn/tag/compat-wireless-26/</a></p>
<p><a href="http://wireless.kernel.org/en/users/Download">http://wireless.kernel.org/en/users/Download</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04 安装共享打印机(CUPS)</title>
    <url>/posts/1042151429/</url>
    <content><![CDATA[<p>1、安装打印机驱动<br>      系统-系统管理-打印 添加 选canon-ix5000<br>2、安装cups<br>      sudo apt-get install cupsys<br>3、调试<br>      <a href="http://127.0.0.1:631/printers">http://127.0.0.1:631/printers</a> 打开管理页面  </p>
<p><img src="http://img.ph.126.net/vurHjkaPT9r7AV-W0gDY3w==/3280309378587648520.jpg" alt="ubuntu10.04 安装共享打印机(CUPS) - leaf - ------坚持雅操------" title="ubuntu10.04 安装共享打印机(CUPS) - leaf - ------坚持雅操------"></p>
<p> <br>4、在其他电脑上添加网络打印机<br>     <a href="http://192.168.2.188:631/printers/canon-ix5000">http://192.168.2.188:631/printers/canon-ix5000</a>  </p>
<p>5、关于不能添加打印机：(由于选了 Use Kerberos authentication(FAQ))</p>
<p>提示：</p>
<p>请输入您的用户名称和密码或者 root 用户的用户名称和密码来访问此页面。如果您正在使用 Kerberos 鉴定，请确定您拥有的 Kerberos 票据是有效的。</p>
<p>解决方法：</p>
<p>修改/etc/cups/cupsd.conf文件下的</p>
<Policy default>

<Policy authenticated>

<p>全部改为 </p>
<p>  Order allow,deny</p>
<p>  Allow all</p>
<p>即可</p>
<p>添加好了再改回去好了</p>
<p>20140809补充：/etc/group 里面lp这一行添加用户，用来管理cups服务</p>
<p>安装PDF打印机  <a href="http://www.oschina.net/p/cups-pdf">http://www.oschina.net/p/cups-pdf</a> <br>1、sudo aptitude install cups-pdf<br>2、更改  /usr/lib/cups/backend/ cups-pdf权限(加上SUID权限)</p>
<p>sudo chmod u+s cups-pdf</p>
<p>可以看到打印里已经加了一台PDF打印机</p>
<p>试验结果：能打印，但总是提示错误</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu10.04 安装阿里旺旺</title>
    <url>/posts/3112032052/</url>
    <content><![CDATA[<p>阿里旺旺下载地址：<a href="http://ge.tt/8sPpGIA">http://ge.tt/8sPpGIA</a><br>#地址能打开，但是很慢。<br>附下载地址：<a href="http://pan.baidu.com/share/link?shareid=260186&uk=336411764">http://pan.baidu.com/share/link?shareid=260186&amp;uk=336411764</a>  </p>
<p>1、下载相应的库文件  </p>
<blockquote>
<p>直接安装会提示：错误： 依赖关系没有满足：libqtcore4 (&gt;= 4:4.7.0~beta1)  </p>
<p><img src="http://img0.ph.126.net/hhGY_S7U2FPMVyidhi2R7w==/6597222598774607540.jpg" alt="Ubuntu10.04 X64 安装阿里旺旺方法 - leaf - ------坚持雅操------" title="Ubuntu10.04 X64 安装阿里旺旺方法 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>下载相应库文件：  </p>
<blockquote>
<p>libqtcore4_4.7.4-0ubuntu8.2_amd64.deb<br>libqt4-dbus_4.7.4-0ubuntu8.2_amd64.deb<br>libqt4-xmlpatterns_4.7.4-0ubuntu8.2_amd64.deb<br>libqt4-network_4.7.4-0ubuntu8.2_amd64.deb<br>libqtgui4_4.7.4-0ubuntu8.2_amd64.deb<br>libqt4-sql_4.7.4-0ubuntu8.2_amd64.deb  </p>
</blockquote>
<p>下载地址：<a href="http://packages.ubuntu.com/">http://packages.ubuntu.com/</a>  </p>
<p>2、安装库文件<br>一、将库文件一个一个解压，再解压里面的data.tar.lzma，将相应的库文件放到相应的文件夹下<br>如：sudo cp -a ～/libqtcore4_4.7.4-0ubuntu8.2_amd64/usr/lib/x86_64-linux-gnu/*  /usr/lib/x86_64-linux-gnu/<br>       #这里我没有复制其中的文件夹，只复制和文件包名字相同在的库文件<br>二、sudo ldconfig  </p>
<p>3、安装阿里旺旺<br>解压阿里旺旺，把对应的文件放到对应的目录下面即可  </p>
<blockquote>
<p>把其中的AiWangWang AliWWAutoUpdate 放到/usr/bin下面<br>把其中的AiWangWang文件夹    放到/usr/share下面<br>把其中的aliwangwang.desktop 放到/usr/share/applications 下面<br>把其中的doc/aliwangwang        放到/usr/share/doc/ 下面<br>把其中的AliWangWang.png       放到/usr/share/pixmaps 下面  </p>
</blockquote>
<p>运行效果  </p>
<p><img src="http://img0.ph.126.net/ki1l8xMeD43XCvKSWu3QLg==/6598123098796218750.jpg" alt="Ubuntu10.04 X64 安装阿里旺旺方法 - leaf - ------坚持雅操------" title="Ubuntu10.04 X64 安装阿里旺旺方法 - leaf - ------坚持雅操------"></p>
<p><a href="http://pan.baidu.com/share/link?shareid=260186&amp;uk=336411764">http://pan.baidu.com/share/link?shareid=260186&amp;uk=336411764</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04 调整屏幕亮度</title>
    <url>/posts/3839016931/</url>
    <content><![CDATA[<p>参考：<a href="http://www.linuxidc.com/Linux/2012-06/63727.htm">http://www.linuxidc.com/Linux/2012-06/63727.htm</a>  </p>
<p>1、安装软件：sudo apt-get install laptop-mode-tools  </p>
<p>2、配置文件：<br>文章提到2个配置文件，但我笔记本上配置一个就可以了<br>sudo nano  /etc/laptop-mode/conf.d/lcd-brightness.conf  </p>
<blockquote>
<p>CONTROL_BRIGHTNESS=1<br>BATT_BRIGHTNESS_COMMAND=”echo 70”<br>LM_AC_BRIGHTNESS_COMMAND=”echo 70”<br>NOLM_AC_BRIGHTNESS_COMMAND=”echo 70”<br>BRIGHTNESS_OUTPUT=”/proc/acpi/video/AVGA/LCD/brightness  </p>
<p>备注：<br>首先调整亮度，<br>然后 cat /proc/acpi/video/AVGA/LCD/brightness 会限制当前亮度<br>然后替代上面的70参数即可  </p>
<p>变量说明<br>BATT_BRIGHTNESS_COMMAND          使用电池时亮度<br>LM_AC_BRIGHTNESS_COMMAND       使用交流电时亮度<br>NOLM_AC_BRIGHTNESS_COMMAND  ？？  </p>
</blockquote>
<blockquote>
</blockquote>
<p>2、好像系统管理里面的电源管理也可以调的。绕弯了。。。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04加入到win2003域 相关配置文件</title>
    <url>/posts/3016358933/</url>
    <content><![CDATA[<p>/etc/hosts:127.0.0.1 ywz.leaf.com ywz localhost</p>
<p>/etc/krb5.conf</p>
<p>[libdefaults]</p>
<p>default_realm = LEAF.COM</p>
<p># The following krb5.conf variables are only for MIT Kerberos.</p>
<p>krb4_config = /etc/krb.conf</p>
<p>krb4_realms = /etc/krb.realms</p>
<p>kdc_timesync = 1</p>
<p>ccache_type = 4</p>
<p>forwardable = true</p>
<p>proxiable = true</p>
<p># The following encryption type specification will be used by MIT Kerberos</p>
<p># if uncommented.  In general, the defaults in the MIT Kerberos code are</p>
<p># correct and overriding these specifications only serves to disable new</p>
<p># encryption types as they are added, creating interoperability problems.</p>
<p>#</p>
<p># Thie only time when you might need to uncomment these lines and change</p>
<p># the enctypes is if you have local software that will break on ticket</p>
<p># caches containing ticket encryption types it doesn’t know about (such as</p>
<p># old versions of Sun Java).</p>
<h1 id="default-tgs-enctypes-des3-hmac-sha1"><a href="#default-tgs-enctypes-des3-hmac-sha1" class="headerlink" title="default_tgs_enctypes = des3-hmac-sha1"></a>default_tgs_enctypes = des3-hmac-sha1</h1><h1 id="default-tkt-enctypes-des3-hmac-sha1"><a href="#default-tkt-enctypes-des3-hmac-sha1" class="headerlink" title="default_tkt_enctypes = des3-hmac-sha1"></a>default_tkt_enctypes = des3-hmac-sha1</h1><h1 id="permitted-enctypes-des3-hmac-sha1"><a href="#permitted-enctypes-des3-hmac-sha1" class="headerlink" title="permitted_enctypes = des3-hmac-sha1"></a>permitted_enctypes = des3-hmac-sha1</h1><p># The following libdefaults parameters are only for Heimdal Kerberos.</p>
<p>v4_instance_resolve = false</p>
<p>v4_name_convert = {</p>
<p>host = {</p>
<p>rcmd = host</p>
<p>ftp = ftp</p>
<p>}</p>
<p>plain = {</p>
<p>something = something-else</p>
<p>}</p>
<p>}</p>
<p>fcc-mit-ticketflags = true</p>
<p>default_tgs_enctypes = RC4-HMAC DES-CBC-MD5 DES-CBC-CRC</p>
<p>default_tkt_enctypes = RC4-HMAC DES-CBC-MD5 DES-CBC-CRC</p>
<p>preferred_enctypes = RC4-HMAC DES-CBC-MD5 DES-CBC-CRC</p>
<p>dns_lookup_kdc = true</p>
<p>[realms]</p>
<p>ATHENA.MIT.EDU = {</p>
<p>kdc = kerberos.mit.edu:88</p>
<p>kdc = kerberos-1.mit.edu:88</p>
<p>kdc = kerberos-2.mit.edu:88</p>
<p>admin_server = kerberos.mit.edu</p>
<p>default_domain = mit.edu</p>
<p>}</p>
<p>MEDIA-LAB.MIT.EDU = {</p>
<p>kdc = kerberos.media.mit.edu</p>
<p>admin_server = kerberos.media.mit.edu</p>
<p>}</p>
<p>ZONE.MIT.EDU = {</p>
<p>kdc = casio.mit.edu</p>
<p>kdc = seiko.mit.edu</p>
<p>admin_server = casio.mit.edu</p>
<p>}</p>
<p>MOOF.MIT.EDU = {</p>
<p>kdc = three-headed-dogcow.mit.edu:88</p>
<p>kdc = three-headed-dogcow-1.mit.edu:88</p>
<p>admin_server = three-headed-dogcow.mit.edu</p>
<p>}</p>
<p>CSAIL.MIT.EDU = {</p>
<p>kdc = kerberos-1.csail.mit.edu</p>
<p>kdc = kerberos-2.csail.mit.edu</p>
<p>admin_server = kerberos.csail.mit.edu</p>
<p>default_domain = csail.mit.edu</p>
<p>krb524_server = krb524.csail.mit.edu</p>
<p>}</p>
<p>IHTFP.ORG = {</p>
<p>kdc = kerberos.ihtfp.org</p>
<p>admin_server = kerberos.ihtfp.org</p>
<p>}</p>
<p>GNU.ORG = {</p>
<p>kdc = kerberos.gnu.org</p>
<p>kdc = kerberos-2.gnu.org</p>
<p>kdc = kerberos-3.gnu.org</p>
<p>admin_server = kerberos.gnu.org</p>
<p>}</p>
<p>1TS.ORG = {</p>
<p>kdc = kerberos.1ts.org</p>
<p>admin_server = kerberos.1ts.org</p>
<p>}</p>
<p>GRATUITOUS.ORG = {</p>
<p>kdc = kerberos.gratuitous.org</p>
<p>admin_server = kerberos.gratuitous.org</p>
<p>}</p>
<p>DOOMCOM.ORG = {</p>
<p>kdc = kerberos.doomcom.org</p>
<p>admin_server = kerberos.doomcom.org</p>
<p>}</p>
<p>ANDREW.CMU.EDU = {</p>
<p>kdc = vice28.fs.andrew.cmu.edu</p>
<p>kdc = vice2.fs.andrew.cmu.edu</p>
<p>kdc = vice11.fs.andrew.cmu.edu</p>
<p>kdc = vice12.fs.andrew.cmu.edu</p>
<p>admin_server = vice28.fs.andrew.cmu.edu</p>
<p>default_domain = andrew.cmu.edu</p>
<p>}</p>
<p>CS.CMU.EDU = {</p>
<p>kdc = kerberos.cs.cmu.edu</p>
<p>kdc = kerberos-2.srv.cs.cmu.edu</p>
<p>admin_server = kerberos.cs.cmu.edu</p>
<p>}</p>
<p>DEMENTIA.ORG = {</p>
<p>kdc = kerberos.dementia.org</p>
<p>kdc = kerberos2.dementia.org</p>
<p>admin_server = kerberos.dementia.org</p>
<p>}</p>
<p>stanford.edu = {</p>
<p>kdc = krb5auth1.stanford.edu</p>
<p>kdc = krb5auth2.stanford.edu</p>
<p>kdc = krb5auth3.stanford.edu</p>
<p>master_kdc = krb5auth1.stanford.edu</p>
<p>admin_server = krb5-admin.stanford.edu</p>
<p>default_domain = stanford.edu</p>
<p>}</p>
<p>LEAF.COM = {</p>
<p>auth_to_local = RULE:[1:$0\$1](^LEAF\.COM\\.*)s/^LEAF\.COM/LEAF/</p>
<p>auth_to_local = RULE:[1:$0\$1](^LEAF\.COM\\.*)s/^LEAF\.COM/LEAF/</p>
<p>auth_to_local = DEFAULT</p>
<p>}</p>
<p>[domain_realm]</p>
<p>.mit.edu = ATHENA.MIT.EDU</p>
<p>mit.edu = ATHENA.MIT.EDU</p>
<p>.media.mit.edu = MEDIA-LAB.MIT.EDU</p>
<p>media.mit.edu = MEDIA-LAB.MIT.EDU</p>
<p>.csail.mit.edu = CSAIL.MIT.EDU</p>
<p>csail.mit.edu = CSAIL.MIT.EDU</p>
<p>.whoi.edu = ATHENA.MIT.EDU</p>
<p>whoi.edu = ATHENA.MIT.EDU</p>
<p>.stanford.edu = stanford.edu</p>
<p>.slac.stanford.edu = SLAC.STANFORD.EDU</p>
<p>.LEAF.com = LEAF.COM</p>
<p>[login]</p>
<p>krb4_convert = true</p>
<p>krb4_get_tickets = false</p>
<p>[appdefaults]</p>
<p>pam = {</p>
<p>   mappings = LEAF\\(.*) $1@LEAF.COM</p>
<p>   forwardable = true</p>
<p>   validate = true</p>
<p>}</p>
<p>httpd = {</p>
<p>   mappings = LEAF\\(.*) $1@LEAF.COM</p>
<p>   reverse_mappings = (.*)@LEAF\.COM LEAF\$1</p>
<p>}</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04加入到win2003域</title>
    <url>/posts/1311692127/</url>
    <content><![CDATA[<p>2014.08.13 ubuntu14.04加域</p>
<blockquote>
<p>1、下载PBIS</p>
<p>2、安装 sudo ./pbis-open-8.0.1.2029.linux.x86_64.deb.sh</p>
<p>3、加域命令</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo su</p>
<p>cd /opt/pbis/bin</p>
<p>domainjoin-cli join –disable ssh hy.com.cn  <a href="mailto:&#x32;&#x35;&#55;&#55;&#x36;&#x39;&#x40;&#104;&#x79;&#x2e;&#x63;&#x6f;&#109;&#x2e;&#x63;&#110;">&#x32;&#x35;&#55;&#55;&#x36;&#x39;&#x40;&#104;&#x79;&#x2e;&#x63;&#x6f;&#109;&#x2e;&#x63;&#110;</a></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/tgZoU6lfDmZSnb1ld2UIWg==/6608853232771323788.png" alt="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------" title="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------"></p>
</blockquote>
</blockquote>
<blockquote>
<p>4、重启 即可</p>
</blockquote>
<blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/X38cPQXr7whP9jh3vl9cvw==/6608444214445793399.png" alt="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------" title="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<p> 参考：<a href="http://community.spiceworks.com/how_to/show/80336-join-ubuntu-14-04lts-to-a-windows-domain-using-pbis-open">Join Ubuntu 14.04LTS to a Windows Domain using PBIS Open</a></p>
</blockquote>
<blockquote>
</blockquote>
<p>virtualbox下试验成功，用的就是likewise-open-gui  </p>
<p>win2003:192.168.56.10<br>ubuntu：192.168.56.101  </p>
<p>0、设置dns  </p>
<blockquote>
<p>sudo nano /etc/resolv.conf<br>nameserver 192.168.56.10     #nameserver就这么写就好了  </p>
</blockquote>
<p>1、安装samba smbfs  </p>
<blockquote>
<p>sudo apt-get install samba smbfs  </p>
</blockquote>
<p>2、安装likewise  </p>
<blockquote>
<p>sudo aptitude install likewise-open-gui   #默认即可  </p>
</blockquote>
<p>3、加域  </p>
<blockquote>
<p>sudo domainjoin-cli join leaf.com domain    #leaf.com为域  domain为域管理员<br>要求输入域管理员的密码  </p>
</blockquote>
<blockquote>
<p>之后会跳出secceeded，然后提示重启<br>你也可以用图形方式，最后会出现，#退出域点 leave domain  </p>
<p><img src="http://img618.ph.126.net/q8IJGyBPJu10aV67kTrpKw==/1969761887022951153.jpg" alt="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------" title="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------">  </p>
<p>win2003下的电脑信息  </p>
<p><img src="http://img2.ph.126.net/Dfync5Z1O0_o-lEaWSpo-Q==/2871044762548721789.png" alt="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------" title="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> <br>4、登陆  </p>
<blockquote>
<p>要填leaf\ywz      #leaf域的netbios名 ywz为win2003给的账户名。win2003里面先建账户  </p>
<p><img src="http://img396.ph.126.net/H9Cf2t6M5Qd6kfeux0F0RA==/3065262496380234663.jpg" alt="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------" title="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>   </p>
<blockquote>
<p>登陆后账号信息会显示：  </p>
<p><img src="http://img854.ph.126.net/PYjlPUmuniVCBwRlncRTyw==/2748040197627127591.jpg" alt="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------" title="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>   </p>
<p>5、允许AD管理员为ubuntu管理  </p>
<blockquote>
<p>有两种方法，都是在/etc/sudoers里面改：  </p>
</blockquote>
<blockquote>
<p>1、添加用户组  </p>
</blockquote>
<blockquote>
<blockquote>
<p>%leaf\\domain^users ALL=(ALL) ALL<br>%admin ：表示用户组  </p>
</blockquote>
<p>2、添加用户  </p>
<blockquote>
<p>leaf\\ywz ALL=(ALL) ALL<br>第一个\表示转意  </p>
</blockquote>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/B9d8j1IB2RqoltMnP84LVw==/1442559255742305386.png" alt="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------" title="ubuntu10.04加入到win2003域 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> <br>相关命令：<br>1、sudo domainjoin-cli join leaf.com domain<br>2、sudo domainjoin-cli leave  </p>
<p>#2013.10.02更新，解决全部加域问题。  </p>
<p>参考：<br><a href="http://hi.baidu.com/mihuo19/blog/item/08feafdeada40c4494ee378f.html">1、把ubuntu desktop10.4 加入windows 域</a><br>2、<a href="http://www.ubuntugeek.com/how-to-add-ubuntu-804-to-win-server-2003-active-directory-domain.html#comment-148131">How to add Ubuntu 8.04 to win server 2003 Active Directory Domain</a><br>3、<a href="http://wiki.ubuntu.org.cn/UbuntuHelp:ActiveDirectoryWinbindHowto/zh#.E6.9C.80.E5.BE.8C.E4.B8.80.E4.BB.B6.E4.BA.8B">UbuntuHelp:ActiveDirectoryWinbindHowto/zh</a><br>4、<a href="http://www.linuxidc.com/Linux/2013-09/89578.htm">Ubuntu 13.04 登录Windows域</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04安装64位ppstream</title>
    <url>/posts/421653662/</url>
    <content><![CDATA[<p>参考：<br><a href="http://hi.baidu.com/flashgive/item/6904fb09798fc1e5fe240d33">http://hi.baidu.com/flashgive/item/6904fb09798fc1e5fe240d33</a>  </p>
<p>下载：<br><a href="http://ppa.launchpad.net/cnav/ppa/ubuntu/pool/main/p/ppstream/ppstream/_1.0.0-3lucid2/_amd64.deb">http://ppa.launchpad.net/cnav/ppa/ubuntu/pool/main/p/ppstream/ppstream\_1.0.0-3lucid2\_amd64.deb</a><br><a href="http://packages.ubuntu.com/zh-tw/lucid-updates/libphonon4">http://packages.ubuntu.com/zh-tw/lucid-updates/libphonon4</a>    下载32位版本的libphonon  </p>
<p>安装  </p>
<blockquote>
<p>安装ppstream没有出现什么错误  </p>
</blockquote>
<p>运行  </p>
<blockquote>
<p>运行时提示缺少libphonon.so.4文件<br>1.1我找了下系统的库文件，发现/usr/lib/下面有libphonon.so.4<br>1.2做了链接 sudo ln -s /usr/lib/libphonon.so.4 /opt/pps/lib/libphonon.so.4<br>1.3需要32位版本的。<br>2.1下载了32位版本的libphonon<br>2.2解压后把libphonon.so.4.4.0复制为/opt/pps/lib/libphonon.so.4<br>2.3正常了  </p>
</blockquote>
<p><img src="http://img9.ph.126.net/JfPH-3hX2qmGlGVh5kmQag==/6597818534074982489.jpg" alt="ubuntu10.04安装64位ppstream - leaf - ------坚持雅操------" title="ubuntu10.04安装64位ppstream - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04安装nvidia官方驱动</title>
    <url>/posts/2285331920/</url>
    <content><![CDATA[<p>系统：ubuntu10.04 x64<br>CPU：AMD Athlon(tm) II X4 635 Processor × 4<br>主板：AMD 870 (无板载显卡)<br>内存：DDR3-1333 8G<br>显卡：8500GT  </p>
<p>1、安装环境  </p>
<blockquote>
<p>sudo apt-get install build-essential pkg-config linux-headers-$(uname -r)<br>下载驱动并设置权限 chmod a+x NVIDIA-Linux-x86_64-304.51.run  
   </p>
</blockquote>
<p>2、删除已有的模块和软件  </p>
<blockquote>
<p>移除旧的nvidia模块和组件  </p>
<blockquote>
<p>sudo apt-get –purge remove nvidia-glx nvidia-glx-legacy nvidia-glx-new nvidia-settings</p>
</blockquote>
</blockquote>
<blockquote>
<p>检查无关的nvidia软件是否已被完全删除  </p>
<blockquote>
<p>dpkg -l | grep nvidia</p>
</blockquote>
</blockquote>
<blockquote>
<p>删除这些软件  </p>
<blockquote>
<p>sudo aptitude purge $(dpkg -l | grep nvidia | awk ‘{print $2}’)  </p>
</blockquote>
</blockquote>
<blockquote>
<p>移除xorg-nv驱动  </p>
<blockquote>
<p>sudo apt-get –purge remove xserver-xorg-video-nv  </p>
</blockquote>
<p>禁用<code>nouveau   </code></p>
<blockquote>
<p><code>sudo gedit /etc/modprobe.d/blacklist.conf   添加blacklist nouveau   </code></p>
</blockquote>
</blockquote>
<blockquote>
<p>#总之就是将新立得里面所有的nvidia选项全删除，里面的jockey*这个不用删除没事。  </p>
</blockquote>
<p>3、重启并安装  </p>
<blockquote>
<p>重启后按ctrl+alt+f1 ，进tty1，关闭gdm：sudo /etc/init.d/gdm stop<br>安装  </p>
<blockquote>
<p>sudo su<br>sh ./NVIDIA-Linux-x86_64-304.51.run<br>1、前面如果模块没有删除干净，装的时候会帮我们先卸载再安装的<br>2、/usr/lib/xorg/modules/extensions/libglx.so 会帮我们自动做符号连接，连接到同目录下面的libglx.so.304.51  </p>
</blockquote>
<p>安装完后重启  </p>
<blockquote>
<p>sudo reboot  </p>
</blockquote>
</blockquote>
<p>4、仍然碰到分辨率的问题  </p>
<blockquote>
<p> gtf 1152 864 60 -x  </p>
<blockquote>
<p>  # 1152x864 @ 60.00 Hz (GTF) <strong>hsync: 53.70 kHz; pclk: 81.62 MHz</strong><br>  Modeline “1152x864_60.00”  81.62  1152 1216 1336 1520  864 865 868 895  -HSync +Vsync  </p>
</blockquote>
<p>sudo gedit /etc/X11/xorg.conf  </p>
<blockquote>
<p>Section “Monitor”<br>    Identifier     “Monitor0”<br>    VendorName     “Unknown”<br>    ModelName      “Unknown”<br>    HorizSync       28.0 - <strong>53.70</strong><br>    VertRefresh     43.0 - <strong>81.62</strong><br>    Option         “DPMS”<br>EndSection  </p>
</blockquote>
</blockquote>
<p>参考：  </p>
<blockquote>
<p><a href="http://www.5dlinux.com/article/1/2011/linux_42055.html">Ubuntu中安装NViDIA官方驱动</a>  </p>
</blockquote>
<p>效果  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/SXMSsuyEqs9UR3TzM5dSmg==/30117822525904591.jpg" alt="ubuntu10.04安装nvidia官方驱动 - leaf - ------坚持雅操------" title="ubuntu10.04安装nvidia官方驱动 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<blockquote>
</blockquote>
<p>继续问题：  </p>
<blockquote>
<p>问题1：firefox开2个页面，一个页面放视频，另一个开网页，看网页的这个页面会出现视频画面  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/YgLW2bK4xbMjpXSwbQRzlA==/6597256683634594001.jpg" alt="ubuntu10.04安装nvidia官方驱动 - leaf - ------坚持雅操------" title="ubuntu10.04安装nvidia官方驱动 - leaf - ------坚持雅操------">  </p>
</blockquote>
<p>问题2：firefox—帮助—故障排除信息：图像列表显示  </p>
<blockquote>
<p>适配器描述        Mesa Project – Software Rasterizer<br>厂商 ID              Mesa Project<br>设备 ID              Software Rasterizer<br>驱动程序版本    2.1 Mesa 7.7.1<br>WebGL 渲染器  因您的显卡驱动版本已屏蔽。尝试更新您的显卡驱动至版本 304.51 或更新版本。<br>GPU 加速窗口   0. 因您的显卡驱动版本已屏蔽。尝试更新您的显卡驱动至版本 304.51 或更新版本。  </p>
</blockquote>
<p>问题3：点外观—视频效果，开不起来说驱动没有装  </p>
</blockquote>
<p>解决方法：  </p>
<blockquote>
<p>20121206：终于找到原因了，我把nvidia模块关掉了竟然。。。。<br><code>查看 /etc/modprobe.d/blacklist.conf</code>。发现里面加入了 blacklist nvidiafb  </p>
</blockquote>
<blockquote>
<p>删除blacklist nvidiafb，然后我又重装了驱动就好了，重装同步骤3  </p>
</blockquote>
<p>附：删除nvidia操作：<br>上面的步骤2无效，使用如下命令<br>sudo /usr/sbin/dkms remove -m nvidia -v 304.51 –all  </p>
<p>参考：<a href="http://www.mystone7.com/2012/05/20/ubuntu_install_nvidia/">http://www.mystone7.com/2012/05/20/ubuntu_install_nvidia/</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04安装openldap</title>
    <url>/posts/2209076749/</url>
    <content><![CDATA[<p>软件：<br>1、openssl-1.0.0g.tar.gz<br>2、db-4.7.25.tar.gz  (下载了5.2 但又换成4.7了。4.7也折腾了不少时间)<br>3、cyrus-sasl-2.1.25.tar.gz<br>4、openldap-stable-20100719.tgz  </p>
<p>安装<br>1、安装openssl ：用于SSL/TLS连接<br>        ./config shared –openssldir=/usr/local<br>        make<br>        sudo make install<br>     #安装没出现什么问题  </p>
<p>2、安装Berkeley DB<br>         cd db-4.7.25/build_unix<br>         ../dist/configure<br>         make<br>         sudo make install<br>         sudo  &lt; - page margin cm p margin-bottom cm –&gt; –&lt;cp /usr/local/BerkeleyDB.4.7/include/* /usr/include<br>         sudo cp /usr/local/BerkeleyDB.4.7/lib/* /usr/lib<br>         sudo mv db-4.7.25 /usr/local/src/  </p>
<p>3、安装cyrus-sasl ：用于和其他软件整合时认证用(Kerberos)<br>      ./configure<br>      make<br>      sudo make install<br>      sudo ln -s /usr/local/lib/sasl2 /usr/lib/sasl2  </p>
<p>    make出现问题：<br>        make[2]: Leaving directory `/root/postfix/cyrus-sasl-2.1.25/sasldb’<br>        make[1]: *** [all-recursive] 错误 1<br>        make[1]: Leaving directory `/root/postfix/cyrus-sasl-2.1.25’  </p>
<p>   解决：<br>    在sasldb和utils各添加一个NULL即可<br>    参考：<br>    <a href="http://www.irbs.net/internet/cyrus-sasl/0301/0042.html">http://www.irbs.net/internet/cyrus-sasl/0301/0042.html</a><br>    <a href="http://lidiantian.blog.51cto.com/456473/366144">http://lidiantian.blog.51cto.com/456473/366144</a>  </p>
<p>4、安装openldap<br>       ./configure<br>       make depend<br>       make<br>       make test<br>       sudo  make install  </p>
<p>     configure就出现问题：<br>        configure: error: BDB/HDB: BerkeleyDB not available  </p>
<p>     解决：<br>      1、sudo su<br>           输入一下3个环境变量<br>            export LDFLAGS=”-L/usr/local/lib -L/usr/local/BerkeleyDB.4.7/lib -R/usr/local/BerkeleyDB.4.7/lib”<br>            export CPPFLAGS=”-I/usr/local/BerkeleyDB.4.7/include/“<br>            export LD_LIBRARY_PATH=”/usr/local/BerkeleyDB.4.7/lib”<br>     2、输入env查看是不是输入的多能看到，多能看到的情况下就可以./configure了  </p>
<p>  make depend  和 make 正常<br>  make test 检查58个项目，第58个项目错误3个，不知道有没有影响<br>  make install 正常  </p>
<p>slapd.conf 文件放置在/usr/local/etc/openldap文件夹下  </p>
<p>实验等，待续。。。  </p>
<p>参考：<br>1、ldap系统管理书 (书不详细)<br>2、<a href="http://www.linuxso.com/sql/18619.html">源代码方式安装openldap</a><br>3、<a href="http://blog.chinaunix.net/space.php?uid=24799710&do=blog&id=3014278">openldap (1) 基本安装</a><br>4、<a href="http://www.irbs.net/internet/cyrus-sasl/0301/0042.html">http://www.irbs.net/internet/cyrus-sasl/0301/0042.html</a><br>5、<a href="http://lidiantian.blog.51cto.com/456473/366144">http://lidiantian.blog.51cto.com/456473/366144</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu10.04安装官方ati显卡驱动</title>
    <url>/posts/2936125880/</url>
    <content><![CDATA[<p>配置<br>系统：ubuntu10.04 X64<br>CPU：INTEL T4500(等价格降了换个p8700，或者T9600)<br>主板：PM45<br>内存：DDR2-800 2GX2<br>显卡：ATI Mobility Radeon HD 5470  </p>
<p>1、安装编译相关软件  </p>
<blockquote>
<p>sudo apt-get install build-essential cdbs fakeroot dh-make debhelper debconf libstdc++6 dkms libqtgui4 wget execstack libelfg0  </p>
</blockquote>
<p>2、下载ati显卡驱动  </p>
<blockquote>
<p><a href="http://www2.ati.com/drivers/linux/amd-driver-installer-12-8-x86.x86/_64.zip">http://www2.ati.com/drivers/linux/amd-driver-installer-12-8-x86.x86\_64.zip</a><br>解压之后是run文件  </p>
</blockquote>
<p>3、制作deb包  </p>
<blockquote>
<p>其实直接装也没关系的<br>sudo su<br>sh amd-driver-installer-8.982-x86.x86_64.run –buildpkg Ubuntu/lucid<br>出来5个文件  </p>
<blockquote>
<p>fglrx_8.982-0ubuntu1_amd64.deb<br>fglrx-amdcccle_8.982-0ubuntu1_amd64.deb<br>fglrx-dev_8.982-0ubuntu1_amd64.deb<br>fglrx-installer_8.982-0ubuntu1_amd64.changes<br>fglrx-modaliases_8.982-0ubuntu1_amd64.deb  </p>
</blockquote>
</blockquote>
<p>4、删除原有驱动和配置  </p>
<blockquote>
<p>sudo apt-get remove –purge fglrx fglrx_* fglrx-amdcccle* fglrx-dev* xorg-driver-fglrx xserver-xorg-video-ati xserver-xorg-video-radeon  </p>
</blockquote>
<blockquote>
<p>sudo mv /etc/X11/xorg.conf  /etc/X11/xorg.con.old  </p>
</blockquote>
<p>4.1、禁用<code>nouveau</code>  </p>
<blockquote>
<p><code>sudo gedit /etc/modprobe.d/blacklist.conf   添加blacklist nouveau</code>  </p>
</blockquote>
<p>5、安装  </p>
<blockquote>
<p>重启<br>进桌面后，按ctrl+alt+f1<br>sudo /etc/init.d/gdm stop            #sudo /etc/init.d/lightdm stop   #ubuntu12.04</p>
</blockquote>
<blockquote>
<p>sudo dpkg -i fglrx*.deb<br>sudo aticonfig –initial -f              #建配置文件xorg.conf  </p>
</blockquote>
<blockquote>
<p>重启  </p>
</blockquote>
<p>6、测试  </p>
<blockquote>
<p>lsmod | grep fglrx  </p>
<blockquote>
<p>fglrx                2690265  115  </p>
</blockquote>
</blockquote>
<blockquote>
<p>fglrxinfo  </p>
<blockquote>
<p>display: :0.0  screen: 0<br>OpenGL vendor string: Advanced Micro Devices, Inc.<br>OpenGL renderer string: ATI Mobility Radeon HD 5400 Series<br>OpenGL version string: 4.2.11762 Compatibility Profile Context  </p>
</blockquote>
<p>amdcccle</p>
</blockquote>
<blockquote>
<blockquote>
<p><img src="http://img4.ph.126.net/mmKFXj0V8YZNpMDVBPLfkA==/6597647010260863324.jpg" alt="ubuntu10.04安装官方ati显卡驱动 - leaf - ------坚持雅操------" title="ubuntu10.04安装官方ati显卡驱动 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
</blockquote>
<p>7、参考：  </p>
<blockquote>
<p><a href="http://wiki.cchtml.com/index.php/Main/_Page">http://wiki.cchtml.com/index.php/Main\_Page</a>  </p>
</blockquote>
<p>其他  </p>
<blockquote>
<p>过时的软件：envyng<br>解决花屏的：<a href="http://hi.baidu.com/ypqnwahlyjbcmtq/item/35cabf25f6acba0873863e5e">http://hi.baidu.com/ypqnwahlyjbcmtq/item/35cabf25f6acba0873863e5e</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu12.04 安装kvm</title>
    <url>/posts/1973501180/</url>
    <content><![CDATA[<p>笔记本原先是T4500，一直用不了kvm。前段时间换成P8700了，终于有机会试验一下了。<br>因我使用net模式就够用了，所以就没设置/etc/network/interfaces 文件  </p>
<p>参考：<br><a href="http://blog.csdn.net/chdhust/article/details/7690119">http://blog.csdn.net/chdhust/article/details/7690119</a><br><a href="http://blog.csdn.net/sheismylife/article/category/1256795">http://blog.csdn.net/sheismylife/article/category/1256795</a>  </p>
<p>命令如下;<br>0、BIOS开启虚拟化，我的没有这个选项，但是能用<br>1、检查CPU是否支持虚拟化  </p>
<blockquote>
<p>egrep ‘(vmx|svm)’ –color=always /proc/cpuinfo  </p>
</blockquote>
<blockquote>
</blockquote>
<p>2、安装相关软件  </p>
<blockquote>
<p>apt-get install ubuntu-virt-server python-vm-builder kvm-ipxe virt-manager  </p>
</blockquote>
<p>3、将当前root用户加入到kvm和libvirtd组  </p>
<blockquote>
<p>adduser `id -un` libvirtd<br>adduser `id-un` kvm  </p>
</blockquote>
<p>4、注销并重新登录，检查相关服务是否已开启  </p>
<blockquote>
<p>virsh -c qemu:///system list  </p>
<blockquote>
<p> Id 名称               状态<br>-———————————  </p>
</blockquote>
<p>lsmod | grep kvm  </p>
<blockquote>
<p>kvm_intel             137888  0<br>kvm                   422160  1 kvm_intel  </p>
</blockquote>
<p>service libvirt-bin status  </p>
<blockquote>
<p>service libvirt-bin status<br>libvirt-bin start/running, process 13309  </p>
</blockquote>
</blockquote>
<p>管理器界面  </p>
<blockquote>
<p><img src="http://img0.ph.126.net/G6LQVX0IqLkYjN5Q_y9mNw==/1374442311378353604.png" alt="ubuntu12.04 安装kvm - leaf - ------坚持雅操------" title="ubuntu12.04 安装kvm - leaf - ------坚持雅操------"></p>
</blockquote>
<p>5、新建/删除存储池  </p>
<blockquote>
<p>1、virsh pool-define-as kvm-disk –type dir –target /home/ywz/5Soft/kvm/       建存储池<br>2、virsh pool-start kvm-disk                设置状态为活动<br>3、virsh pool-autostart kvm-disk        设置为自动开始<br>-——————————<br>1、virsh pool-destroy default              设置状态为不活跃<br>2、virsh pool-undefine default            删除存储池  </p>
</blockquote>
<p>6、使用virtio模式  </p>
<blockquote>
<p>我的电脑使用这个模式没有啥感觉，可能是我的笔记本本身无法设置achi的缘故吧<br>针对XP系统，安装的时候按F6直接加载软驱的驱动安装即可  </p>
<p>使用vmvga，安装vmware显卡驱动。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>UBUNTU14.04.3 x64安装记录</title>
    <url>/posts/4136471457/</url>
    <content><![CDATA[<p>零、安装</p>
<blockquote>
<p>用ultraiso或者unetbootin将系统iso文件写入到U盘，然后安装。</p>
<p>我用的是uefi+gpt分区。<br>分了3个区100M的fat32分区，50G的root分区，其他归home分区<br>引导安装在100M的fat32分区上<br>最好先用gparted分区，不然会出现一些空白区域。</p>
</blockquote>
<p>一、安装驱动</p>
<blockquote>
<p><a href="http://wiki.cchtml.com/index.php/Ubuntu/_Trusty/_Installation/_Guide">http://wiki.cchtml.com/index.php/Ubuntu\_Trusty\_Installation\_Guide</a></p>
<p>1、下载催化剂驱动</p>
<p><a href="http://support.amd.com/zh-cn/download/desktop?os=Linux+x86">http://support.amd.com/zh-cn/download/desktop?os=Linux+x86</a>  </p>
</blockquote>
<blockquote>
<p>2、安装编译环境<br>sudo apt-get install cdbs dh-make dkms execstack dh-modaliases linux-headers-generic libqtgui4  </p>
<p>3、制作安装包</p>
<p>sudo sh amd-driver-installer-14.501.1003-x86.x86_64.run –buildpkg Ubuntu/trusty  </p>
<p>4、安装和配置<br>sudo dpkg -i fglrx*.deb  </p>
<p>sudo aticonfig –initial  -f  </p>
<p>3、安装驱动<br>sudo apt-get install lib32gcc1<br>./amd-driver-installer-15.302-x86.x86_64.run  </p>
<p>5、重启并检测<br><a href="http://blog.csdn.net/tecn14/article/details/24554187">http://blog.csdn.net/tecn14/article/details/24554187</a><br>sudo reboot<br>ywz@Ynotebook:~$ lsmod | grep f  </p>
<blockquote>
<p>fglrx               15474688  290  </p>
</blockquote>
<p>ywz@Ynotebook:~$     fglrxinfo   </p>
<blockquote>
<p>display: :0  screen: 0<br>OpenGL vendor string: Advanced Micro Devices, Inc.<br>OpenGL renderer string: AMD Radeon HD 7700 Series  <br>OpenGL version string: 4.5.13416 Compatibility Profile Context 15.302  </p>
</blockquote>
<p>ywz@Ynotebook:~$      fgl_glxgears  </p>
<blockquote>
<p>Using GLX_SGIX_pbuffer<br>9469 frames in 5.0 seconds = 1893.800 FPS<br>10740 frames in 5.0 seconds = 2148.000 FPS<br>10810 frames in 5.0 seconds = 2162.000 FPS<br>10722 frames in 5.0 seconds = 2144.400 FPS<br>10749 frames in 5.0 seconds = 2149.800 FPS<br>10724 frames in 5.0 seconds = 2144.800 FPS<br>10132 frames in 5.0 seconds = 2026.400 FPS  </p>
</blockquote>
<p>6、更新<br>sudo apt-get remove –purge fglrx fglrx_* fglrx-amdcccle* fglrx-dev*<br>sudo reboot<br>sudo dpkg -i fglrx*.deb<br>sudo aticonfig –initial  </p>
</blockquote>
<p>二、设置</p>
<blockquote>
<p>1、更新源，下载163的就好了 mirrors.163.com</p>
<p>2、关闭访客模式：</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo sh -c ‘echo “allow-guest=false” &gt;&gt; /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf’</p>
</blockquote>
<blockquote>
<p>sudo service lightdm restart</p>
</blockquote>
</blockquote>
<blockquote>
<p>3、安装基础插件</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo apt-get install nautilus-open-terminal  右键终端选项</p>
<p>sudo apt-get install classicmenu-indicator   菜单栏</p>
<p>sudo apt-get install p7zip-full                        7-zip</p>
<p>sudo apt-get install ubuntu-restricted-extras 受限程序</p>
</blockquote>
</blockquote>
<blockquote>
<p>4、下载安装搜狗输入法，安装极点五笔(可选)</p>
</blockquote>
<blockquote>
<p>5、更换字体和壁纸  </p>
</blockquote>
<blockquote>
<blockquote>
<p>字体用华文黑体，华文细黑，monaco</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>sudo cp -a Galaxy.jpg /usr/share/backgrounds/</p>
</blockquote>
</blockquote>
<blockquote>
<p>6、充分利用物理内存  </p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo nano /etc/sysctl.conf</p>
</blockquote>
<blockquote>
<blockquote>
<p>vm.swappiness=10</p>
</blockquote>
</blockquote>
<blockquote>
<p>sudo sysctl -p</p>
</blockquote>
</blockquote>
<blockquote>
<p>7、开机启动应用程序设置  </p>
</blockquote>
<blockquote>
<blockquote>
<p><code>gnome-session-properties   </code></p>
</blockquote>
<p><code>8、安装经典界面   </code></p>
<blockquote>
<p><code>sudo apt-get install gnome-session-flashback</code><br><code>sudo apt-get install gnome-tweak-tool</code><br><code>sudo apt-get install compizconfig-settings-manager</code><br>右击面板然后按住Alt+Super(win)键，来定制面板<br>窗口按钮右置<br><code>gsettings set org.gnome.desktop.wm.preferences button-layout &#39;menu:minimize,maximize,close&#39;</code><br>其他详见<br><a href="http://server.zol.com.cn/516/5169533.html">http://server.zol.com.cn/516/5169533.html</a></p>
</blockquote>
</blockquote>
<p>三、增删软件  </p>
<blockquote>
<p><a href="http://lvzejun.cn/2015/03/31/ubuntu-software/">http://lvzejun.cn/2015/03/31/ubuntu-software/</a>  </p>
</blockquote>
<blockquote>
<p>办公  </p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo apt-get remove libreoffice*</p>
</blockquote>
<blockquote>
<p>wps office</p>
</blockquote>
<blockquote>
<p>有道词典（ubuntu14.04.2可以安装）</p>
</blockquote>
<blockquote>
<p>为知笔记</p>
</blockquote>
<blockquote>
<p>sudo add-apt-repository ppa:wiznote-team</p>
</blockquote>
<blockquote>
<p>sudo apt-get update</p>
</blockquote>
<blockquote>
<p>sudo apt-get install wiznote  </p>
</blockquote>
</blockquote>
<blockquote>
<p>网络  </p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo apt-get install skype</p>
</blockquote>
<blockquote>
<p>google浏览器</p>
</blockquote>
<blockquote>
<p>bcloud</p>
</blockquote>
<blockquote>
<p>kuaipan</p>
</blockquote>
<blockquote>
<p>xware-desktop<br>QQ<br><code>sudo apt-get install pidgin   sudo add-apt-repository ppa:lainme/pidgin-lwqq   sudo apt-get update   sudo apt-get install pidgin-lwqq</code>  </p>
</blockquote>
</blockquote>
<blockquote>
<p>影音  </p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo apt-get install smplayer vlc</p>
</blockquote>
</blockquote>
<blockquote>
<p>维护  </p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo apt-get install backintime-gnome</p>
</blockquote>
<blockquote>
<p>sudo apt-get install  unetbootin gparted<br>sudo apt-get install hwloc  </p>
<blockquote>
<p>效果 lstopo  </p>
<p><img src="http://img1.ph.126.net/Q9xYz7DFE75j_gKSNAQSvQ==/6631360235796767896.png" alt="UBUNTU14.04.3 x64安装记录 - leaf - ------勤解万难------" title="UBUNTU14.04.3 x64安装记录 - leaf - ------勤解万难------"></p>
<p>   </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>开发  </p>
</blockquote>
<blockquote>
<blockquote>
<p>JAVA</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo add-apt-repository ppa:webupd8team/java</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>sudo apt-get update</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>sudo apt-get install oracle-java8-installer oracle-java8-set-default</p>
</blockquote>
</blockquote>
<blockquote>
<p>sudo apt-get install geany</p>
</blockquote>
<blockquote>
<p>wingide5</p>
</blockquote>
</blockquote>
<blockquote>
<p>专项  </p>
<blockquote>
<p>gns3<br><a href="https://beta.gns3.com/support/docs/">https://beta.gns3.com/support/docs/</a>  </p>
<blockquote>
<p>sudo add-apt-repository ppa:gns3/ppa<br>sudo apt-get update<br>sudo apt-get install gns3-gui<br>sudo dpkg –add-architecture i386<br>sudo apt-get install gns3-iou  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>kvm</p>
</blockquote>
<blockquote>
<p>vmware</p>
</blockquote>
<blockquote>
<p>lxc</p>
</blockquote>
<blockquote>
<p>gns3</p>
</blockquote>
<blockquote>
<p>arduino</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu14.04 server 安装keepalived</title>
    <url>/posts/810151373/</url>
    <content><![CDATA[<p>keepalived功能就是实现VRRP协议，解决单点故障问题。</p>
<p>参考：<br>keepalived权威指南<br>ubuntu server最佳方案2  </p>
<p>设备：  </p>
<blockquote>
<p>树莓派2-1：Yrpi2-cryst，192.168.3.17，当MASTER<br>树莓派2-2：Yrpi2-black，192.168.3.18，当BACKUP<br>IP地址：192.168.3.16</p>
</blockquote>
<p>树莓派2-1 配置  </p>
<blockquote>
<p>/etc/hosts：192.168.3.17    Yrpi2-cryst</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>/etc/sysctl.conf  </p>
</blockquote>
<blockquote>
<blockquote>
<p>net.ipv4.ip_forward=1</p>
</blockquote>
<blockquote>
<p>net.ipv4.ip_nonlocal_bind=1</p>
</blockquote>
<blockquote>
<p>net.ipv4.tcp_fin_timeout=30</p>
</blockquote>
<blockquote>
<p>net.ipv4.tcp_syncookies=1</p>
</blockquote>
</blockquote>
<blockquote>
<p>sudo sysctl -p</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>/etc/keepalived/keepalived.conf<br>global_defs  {</p>
</blockquote>
<blockquote>
<blockquote>
<p>notification_email {</p>
</blockquote>
<blockquote>
<p><a href="mailto:&#121;&#x77;&#x7a;&#64;&#x6c;&#x65;&#97;&#102;&#x2e;&#99;&#111;&#109;">&#121;&#x77;&#x7a;&#64;&#x6c;&#x65;&#97;&#102;&#x2e;&#99;&#111;&#109;</a></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>}</p>
</blockquote>
</blockquote>
<blockquote>
<p>notification_email_from <a href="mailto:&#51;&#48;&#x36;&#64;&#x6c;&#101;&#x61;&#102;&#46;&#99;&#111;&#x6d;">&#51;&#48;&#x36;&#64;&#x6c;&#101;&#x61;&#102;&#46;&#99;&#111;&#x6d;</a><br>smtp_server 127.0.0.1<br>smtp_connect_timeout 20<br>router_id Yrpi2-cryst       #机器标识<br>}  </p>
<p>vrrp_script chk_haproxy {</p>
</blockquote>
<blockquote>
<blockquote>
<p>script  “killall -0 haproxy”</p>
</blockquote>
<blockquote>
<p>interval  2</p>
</blockquote>
<blockquote>
<p>weight    2</p>
</blockquote>
</blockquote>
<blockquote>
<p>}  </p>
<p>#一个虚拟路由器包含多个物理的VRRP路由器<br>vrrp_instance VI_1 {        #VRRP路由器</p>
</blockquote>
<blockquote>
<blockquote>
<p>state BACKUP</p>
</blockquote>
<blockquote>
<p>smtp_alert               #启用email通知</p>
</blockquote>
<blockquote>
<p>nopreempt               #设置非抢占式，只有设置为BKUP才能设置这个选项</p>
</blockquote>
<blockquote>
<p>interface eth0           #要绑定的网卡</p>
</blockquote>
<blockquote>
<p>virtual_router_id 51  #所属虚拟路由器</p>
</blockquote>
<blockquote>
<p>priority 150              #通过优先级来设置MASTER，跟BACKUP相差要50以上</p>
</blockquote>
<blockquote>
<p>advert_int 1             #每隔1s进行检测</p>
</blockquote>
</blockquote>
<blockquote>
<p>#设置认证方式和密码<br>authentication {</p>
</blockquote>
<blockquote>
<blockquote>
<p>auth_type PASS</p>
</blockquote>
<blockquote>
<p>auth_pass Amitabha</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
</blockquote>
<blockquote>
<p>#设置共享的虚拟IP地址<br>virtual_ipaddress {</p>
</blockquote>
<blockquote>
<blockquote>
<p>192.168.3.16</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
</blockquote>
<blockquote>
<p>#haproxy相关设置：故障检测<br>track_script {</p>
</blockquote>
<blockquote>
<blockquote>
<p>chk_haproxy</p>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
</blockquote>
<blockquote>
<p>}</p>
</blockquote>
<blockquote>
</blockquote>
<p>树莓派2-2 配置  </p>
<blockquote>
<p>/etc/hosts：192.168.3.18    Yrpi2-black</p>
</blockquote>
<blockquote>
<p>/etc/sysctl.conf  </p>
</blockquote>
<blockquote>
<blockquote>
<p>net.ipv4.ip_forward=1</p>
</blockquote>
<blockquote>
<p>net.ipv4.ip_nonlocal_bind=1</p>
</blockquote>
<blockquote>
<p>net.ipv4.tcp_fin_timeout=30</p>
</blockquote>
<blockquote>
<p>net.ipv4.tcp_syncookies=1</p>
</blockquote>
</blockquote>
<blockquote>
<p>sudo sysctl -p</p>
</blockquote>
<blockquote>
<p>/etc/keepalived/keepalived.conf</p>
</blockquote>
<blockquote>
<p>global_defs  {<br>    notification_email {<br>        <a href="mailto:&#x79;&#x77;&#122;&#64;&#x6c;&#x65;&#97;&#x66;&#x2e;&#x63;&#111;&#x6d;">&#x79;&#x77;&#122;&#64;&#x6c;&#x65;&#97;&#x66;&#x2e;&#x63;&#111;&#x6d;</a><br>    }<br>    notification_email_from <a href="mailto:&#x33;&#48;&#x36;&#x40;&#108;&#101;&#97;&#102;&#x2e;&#x63;&#x6f;&#x6d;">&#x33;&#48;&#x36;&#x40;&#108;&#101;&#97;&#102;&#x2e;&#x63;&#x6f;&#x6d;</a><br>    smtp_server 127.0.0.1<br>    smtp_connect_timeout 20<br>    router_id Yrpi2-black<br>}  </p>
<p>vrrp_script chk_haproxy {<br>    script  “killall -0 haproxy”<br>    interval  2<br>    weight    2<br>}  </p>
<p>vrrp_instance VI_1 {<br>    state BACKUP<br>    smtp_alert<br>    interface eth0<br>    virtual_router_id 51<br>    priority 100<br>    advert_int 1<br>    authentication {<br>        auth_type PASS<br>        auth_pass Amitabha<br>    }<br>    virtual_ipaddress {<br>        192.168.3.20<br>    }<br>    track_script {<br>        chk_haproxy<br>    }<br>}</p>
</blockquote>
<p>效果  </p>
<p><img src="http://img1.ph.126.net/jlfVjqg5EpRMYPOHRDgg1Q==/6630387168001870027.png" alt="ubuntu14.04 server 安装keepalived - leaf - ------勤解万难------" title="ubuntu14.04 server 安装keepalived - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/wLB5cRdbZZnQ8PuVnowjgw==/6630474029420464148.png" alt="ubuntu14.04 server 安装keepalived - leaf - ------勤解万难------" title="ubuntu14.04 server 安装keepalived - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu14.04 Server 设置网络</title>
    <url>/posts/157253944/</url>
    <content><![CDATA[<p>静态地址设置</p>
<blockquote>
<p>cat /etc/network/interfaces</p>
<p># This file describes the network interfaces available on your system</p>
<p># and how to activate them. For more information, see interfaces(5).</p>
<p># The loopback network interface</p>
<p>auto lo</p>
<p>iface lo inet loopback</p>
<p># The primary network interface</p>
<p>auto eth0</p>
<p>iface eth0 inet static</p>
<p>address 192.168.1.20</p>
<p>netmask 255.255.255.0</p>
<p>gateway 192.168.1.1</p>
<p>dns-nameservers 192.168.1.1  #dns在这边改了，不是在/etc/resolv.conf改</p>
</blockquote>
<p>改网络接口名称（原先接口名称为p2p1）</p>
<p>1、查mac地址</p>
<p>2、新建文件</p>
<blockquote>
<p>nano /etc/udev/rules.d/70-persistent-net.rules</p>
</blockquote>
<blockquote>
<p>SUBSYSTEM==”net”, ACTION==”add”,  ATTR{address}==”00:e0:4c:60:d1:59”,  NAME=”eth0”</p>
</blockquote>
<p>3、更改上面的文件</p>
<blockquote>
<p>/etc/network/interfaces</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>UBUNTU14.04 server安装AWStats</title>
    <url>/posts/201714586/</url>
    <content><![CDATA[<p>0、设置网站的log存放地址  </p>
<blockquote>
<p>cd /etc/apache2/sites-available</p>
</blockquote>
<blockquote>
<p>sudo cp 000-default.conf blog.mytest.com.conf</p>
<p>sudo nano blog.mytest.com.conf</p>
</blockquote>
<blockquote>
<blockquote>
<p>DocumentRoot /var/www/blog.mytest.com</p>
<p>ErrorLog ${APACHE_LOG_DIR}/error-blog.mytest.com.log</p>
<p>CustomLog ${APACHE_LOG_DIR}/access-blog.mytest.com.log combined</p>
</blockquote>
</blockquote>
<blockquote>
<p>sudo mkdir /var/www/blog.mytest.com</p>
<p>echo “<h1>Amitabha</h1>“ | sudo tee /var/www/blog.mytest.com/index.html</p>
<p>sudo a2dissite 000-default &amp;&amp; sudo a2ensite blog.mytest.com</p>
<p>sudo service apache2 restart</p>
</blockquote>
<p>1、安装配置awstats</p>
<blockquote>
<p>sudo apt-get install awstats -y</p>
</blockquote>
<blockquote>
<p>新建apache配置文件local-awstats.conf</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo nano /etc/apache2/conf-available/local-awstats.conf</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>Alias /awstatsclasses “/usr/share/awstats/lib/“</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>Alias /awstats-icon/ “/usr/share/awstats/icon/“</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>Alias /awstatscss “/usr/share/doc/awstats/examples/css”</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>ScriptAlias /awstats/ /usr/lib/cgi-bin/</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>启用配置文件</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo a2enconf local-awstats</p>
</blockquote>
</blockquote>
<blockquote>
<p>启用cgi模块</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo  a2enmod cgi</p>
</blockquote>
<blockquote>
<p>sudo service apache2 reload</p>
</blockquote>
</blockquote>
<blockquote>
<p>为网站建立awstats配置文件，主要是指定网站的log地址</p>
<p>cd /etc/awstats</p>
<p>sudo cp awstats.conf     awstats.blog.mytest.com.conf</p>
<p>sudo nano awstats.blog.mytest.com.conf</p>
</blockquote>
<blockquote>
<blockquote>
<p>LogFile=”/var/log/apache2/access-blog.mytest.com.log”  </p>
<p>SiteDomain=”blog.mytest.com”  </p>
<p>HostAliases=”localhost 127.0.0.1 blog.mytest.com”</p>
</blockquote>
</blockquote>
<p>3、运行awstats分析</p>
<blockquote>
<p>sudo chmod a+r /var/log/apache2/access-blog.mytest.com.log*</p>
</blockquote>
<blockquote>
<p>sudo perl /usr/lib/cgi-bin/awstats.pl -update -config=blog.mytest.com</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>打开网页查看</p>
</blockquote>
<blockquote>
<p><a href="http://blog.mytest.com/awstats/awstats.pl?config=blog.mytest.com">http://blog.mytest.com/awstats/awstats.pl?config=blog.mytest.com</a></p>
</blockquote>
<blockquote>
<p><img src="http://img0.ph.126.net/zr0X7GYYlTWwGucgI-YRiw==/6630260724164504700.png" alt="UBUNTU SERVER14.04 安装AWStats - leaf - ------勤解万难------" title="UBUNTU SERVER14.04 安装AWStats - leaf - ------勤解万难------"></p>
</blockquote>
<p>4、awstats的cron任务</p>
<blockquote>
<p>MAILTO=root</p>
<p>*/10 * * * * www-data [ -x /usr/share/awstats/tools/update.sh ] &amp;&amp; /usr/share/awstats/tools/update.sh</p>
<p># Generate static reports:</p>
<p>10 03 * * * www-data [ -x /usr/share/awstats/tools/buildstatic.sh ] &amp;&amp; /usr/share/awstats/tools/buildstatic.sh</p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu14.04 X64安装Dota2</title>
    <url>/posts/4072456105/</url>
    <content><![CDATA[<p>1、<a href="http://store.steampowered.com/about/">http://store.steampowered.com/about/</a>  下载steam<br>2、注册 steam账号<br>3、<a href="http://www.dota2.com.cn/">http://www.dota2.com.cn/</a>   注册dota2账号<br>4、将steam设置为中文   view-setting-interface  里面设置为中文<br>5、打开浏览器(如火狐)，输入 steam://run/570  按确定。提示使用什么软件打开  </p>
<blockquote>
<p>然后选择/usr/bin/steam  打开  (选那个脚本的)  </p>
</blockquote>
<p>6、下载dota2 下载  </p>
<p><img src="http://img0.ph.126.net/WZVwUzltG-6mYrIVdepzZA==/3682255645429244871.png" alt="ubuntu14.04 X64安装Dota2 - leaf - ------坚持雅操------" title="ubuntu14.04 X64安装Dota2 - leaf - ------坚持雅操------">  </p>
<p>7、还有终端输入.export LC_CTYPE=”en_US.UTF-8” &amp;&amp; steam 不然好像是无法在steam在输入  </p>
<p>参考：<a href="http://tieba.baidu.com/p/3139011858#">http://tieba.baidu.com/p/3139011858#</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu14.04 安装kvm</title>
    <url>/posts/2372106058/</url>
    <content><![CDATA[<p>0、检查是否有kvm模块</p>
<blockquote>
<p>ls /dev 看看是否有kvm</p>
</blockquote>
<p>1、安装时遇到的问题</p>
<blockquote>
<p><a href="http://my.oschina.net/lhplj/blog/336313">http://my.oschina.net/lhplj/blog/336313</a></p>
</blockquote>
<blockquote>
<p>sudo apt-get install openssh-server</p>
<blockquote>
<p>提示openssh-server : 依赖: openssh-client (= 1:6.6p1-2ubuntu1)</p>
</blockquote>
<p>安装 sudo apt-get install openssh-client=1:6.6p1-2ubuntu1</p>
<p>sudo apt-get install openssh-server</p>
</blockquote>
<p>2、安装</p>
<blockquote>
<p>sudo apt-get install ubuntu-virt-server</p>
<p>sudo apt-get install virtinst</p>
<p>sudo apt-get install virt-manager (图形界面)</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu14.04 链接iscsi</title>
    <url>/posts/2480527377/</url>
    <content><![CDATA[<p>一、安装  </p>
<blockquote>
<p>sudo apt-get install open-iscsi 然后重启  </p>
</blockquote>
<p>二、配置  </p>
<blockquote>
<p>sudo nano /etc/iscsi/iscsi.conf<br>#设置开机自动连接iscsi设备  </p>
<blockquote>
<p>node.startup = automatic   </p>
</blockquote>
<p>#设置单向验证的账号密码  </p>
<blockquote>
<p>node.session.auth.authmethod = CHAP<br>node.session.auth.username = username<br>node.session.auth.password = password<br>-———双向验证再增加以下两行—————<br>node.session.auth.username_in = username<br>node.session.auth.password_in = password</p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>三、连接  </p>
<blockquote>
<p>查找iscsi设备<br>运行该命令后在/etc/iscsi下面会多出nodes和send_targets文件夹  </p>
<blockquote>
<p>sudo iscsiadm -m discovery -t sendtargets -p 192.168.3.12  </p>
</blockquote>
<p>连接  </p>
<blockquote>
<p>sudo iscsiadm -m node -T iqn.ubuntu -p 192.168.3.12 -l  </p>
<p><img src="http://img2.ph.126.net/MAwRwRK7yJjnuvmtUKIAaA==/6631214000750360321.png" alt="ubuntu14.04 链接iscsi - leaf - ------勤解万难------" title="ubuntu14.04 链接iscsi - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/93IO30mUx6IiDu-2D2kXPg==/6598138492018427937.png" alt="ubuntu14.04 链接iscsi - leaf - ------勤解万难------" title="ubuntu14.04 链接iscsi - leaf - ------勤解万难------"></p>
<p>   </p>
</blockquote>
<p>格式化及挂载  </p>
<blockquote>
<p>fdisk /dev/sdd<br>mkfs.ext4 /dev/sdd1<br>mkdir /mnt/iscsi1<br>mount /dev/sdd1 /mnt/iscsi1  </p>
</blockquote>
</blockquote>
<p>四、配置开机挂载  </p>
<blockquote>
<p>设置网络为动态获取或者静态地址/etc/network/interface</p>
<blockquote>
<p>auto eth1<br>iface eth1 inet dhcp  </p>
</blockquote>
<p>查看设备UUID  </p>
<blockquote>
<p>ls -l /dev/disk/by-uuid 可以看到刚挂载的设备的UUID  </p>
</blockquote>
<p>更改/etc/fstab  </p>
<blockquote>
<p>UUID=c017977c-a0d8-4e6b-9eee-38b6f5c17ebc    /mnt/iscsi1 ext4 _netdev,relatime 0 2  </p>
</blockquote>
</blockquote>
<p>参考<br><a href="http://blog.csdn.net/sinchb/article/details/8433994">http://blog.csdn.net/sinchb/article/details/8433994</a><br><a href="http://blog.csdn.net/wbryfl/article/details/6702347">http://blog.csdn.net/wbryfl/article/details/6702347</a><br>其他<br><a href="http://www.server-world.info/en/note?os=Ubuntu%5C_14.04&amp;p=iscsi&amp;f=2">http://www.server-world.info/en/note?os=Ubuntu\_14.04&amp;p=iscsi&amp;f=2</a><br><a href="http://manpages.ubuntu.com/manpages/hardy/man8/iscsiadm.8.html">http://manpages.ubuntu.com/manpages/hardy/man8/iscsiadm.8.html</a>  </p>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>UBUNTU14.04安装BIND9_DLZ</title>
    <url>/posts/174363137/</url>
    <content><![CDATA[<p>参考：  </p>
<blockquote>
<p><a href="http://ubuntuforums.org/showthread.php?t=823578">http://ubuntuforums.org/showthread.php?t=823578</a><br><a href="http://ubuntuforums.org/showthread.php?p=11380598">http://ubuntuforums.org/showthread.php?p=11380598</a><br><a href="http://bind-dlz.sourceforge.net/">http://bind-dlz.sourceforge.net/</a>  </p>
</blockquote>
<p>环境  </p>
<blockquote>
<p>服务器OS：UBUNTU14.04<br>服务器主机名：bind9<br>域：leaf.org<br>完整名字：bind9.leaf.org<br>mysql密码：123456<br>db名字：bind9dlz<br>服务器IP：192.168.122.41<br>网关：192.168.122.1  </p>
</blockquote>
<p>服务器名称及IP地址设置  </p>
<blockquote>
<p>cat /etc/hostname  </p>
<blockquote>
<p>bind9.leaf.org  </p>
</blockquote>
<p>cat /etc/hosts  </p>
<blockquote>
<p>127.0.0.1    bind9.leaf.org   bind9  </p>
</blockquote>
<p>cat /etc/network/interfaces  </p>
<blockquote>
<p># The loopback network interface<br>auto lo<br>iface lo inet loopback  </p>
<p># The primary network interface<br>auto eth0<br>iface eth0 inet static<br>    address 192.168.122.41<br>    netmask 255.255.255.0<br>    gateway 192.168.122.1<br>    dns-nameservers 192.168.122.41 192.168.122.1<br>    dns-search leaf.org  </p>
</blockquote>
<p>sudo reboot  </p>
</blockquote>
<p>1、安装带dlz功能的bind9  </p>
<blockquote>
<p>sudo su<br>apt-get install bind9<br>apt-get install bind9utils<br>apt-get remove bind9<br>apt-get build-dep bind9<br>apt-get install fakeroot<br>mkdir /home/ywz/bind9<br>cd /home/ywz/bind9<br>apt-get source bind9<br>apt-get install libpq-dev<br>apt-get install libmysqlclient-dev<br>apt-get install unixodbc unixodbc-dev<br>apt-get install mysql-server mysql-client  </p>
<p>nano /home/ywz/bind9/bind9-9.9.5.dfsg/debian/rules  </p>
<blockquote>
<p>在configure-stamp:下面加入    –with-dlz-mysql \  </p>
</blockquote>
<p>然后制作软件包 dpkg-buildpackage -rfakeroot -b  </p>
<p><img src="http://img2.ph.126.net/dZv-i8qbHFlbF3c5bOJeOQ==/6631405315769279714.png" alt="UBUNTU14.04安装BIND9_DLZ - leaf - ------勤解万难------" title="UBUNTU14.04安装BIND9_DLZ - leaf - ------勤解万难------"></p>
<p>然后安装：dpkg -i *.deb  </p>
</blockquote>
<p>bind9配置  </p>
<blockquote>
<p>nano /etc/bind/named.conf.options<br>加入  </p>
<blockquote>
<p>forwarders {  </p>
<blockquote>
<p>192.168.122.41；<br>192.168.122.1；  </p>
</blockquote>
<p>};  </p>
</blockquote>
</blockquote>
<blockquote>
<p>nano /etc/bind/named.conf.local<br>加入<br>dlz “Mysql zone” {<br>  database “mysql<br>   {host=127.0.0.1 dbname=bind9dlz user=root pass=123456}<br>   {select zone from dns_records where zone = ‘$zone$’}<br>   {select ttl, type, mx_priority, case when lower(type)=’txt’ then concat(‘\“‘, data, ‘\“‘) when lower(type) = ‘soa’ then concat_ws(‘ ‘, data, resp_person, serial, refresh, retry, expire, minimum) else data end from dns_records where zone = ‘$zone$’ and host = ‘$record$’}”;<br>};<br>或者<br>dlz “Mysql zone” {<br>   database “mysql<br>   {host=127.0.0.1 dbname=bind9dlz user=root pass=123456}<br>   {select zone from dns_records where zone = ‘$zone$’}<br>   {select ttl, type, mx_priority, case when lower(type)=’txt’ then concat(‘\“‘, data, ‘\“‘)<br>        when lower(type) = ‘soa’ then concat_ws(‘ ‘, data, resp_person, serial, refresh, retry, expire, minimum)<br>        else data end from dns_records where zone = ‘$zone$’ and host = ‘$record$’}<br>   {}<br>   {select ttl, type, host, mx_priority, case when lower(type)=’txt’ then<br>        concat(‘\“‘, data, ‘\“‘) else data end, resp_person, serial, refresh, retry, expire,<br>        minimum from dns_records where zone = ‘$zone$’}<br>   {select zone from xfr_table where zone = ‘$zone$’ and client = ‘$client$’}”;<br>};  </p>
</blockquote>
<p>mysql配置  </p>
<blockquote>
<p>mysql -u root -p<br>#建数据库<br>create database bind9dlz;<br>grant all privileges on bind9dlz.* to root@localhost identified by ‘123456’;<br>#建表<br>use bind9dlz;  </p>
<blockquote>
<p>CREATE TABLE `dns_records` (<br>  `id` int(11) NOT NULL auto_increment,<br>  `zone` varchar(64) default NULL,<br>  `host` varchar(64) default NULL,<br>  `type` varchar(8) default NULL,<br>  `data` varchar(64) default NULL,<br>  `ttl` int(11) NOT NULL default ‘3600’,<br>  `mx_priority` int(11) default NULL,<br>  `refresh` int(11) NOT NULL default ‘3600’,<br>  `retry` int(11) NOT NULL default ‘3600’,<br>  `expire` int(11) NOT NULL default ‘86400’,<br>  `minimum` int(11) NOT NULL default ‘3600’,<br>  `serial` bigint(20) NOT NULL default ‘2008082700’,<br>  `resp_person` varchar(64) NOT NULL default ‘ywz@163.com’,<br>  `primary_ns` varchar(64) NOT NULL default ‘bind9.leaf.org’,<br>  `data_count` int(11) NOT NULL default ‘0’,<br>  PRIMARY KEY  (`id`),<br>  KEY `host` (`host`),<br>  KEY `zone` (`zone`),<br>  KEY `type` (`type`)<br>) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>
</blockquote>
<p>#写入DNS记录 insert开头这四句<br>// for <a href="http://www.leaf.org/">www.leaf.org</a> to resolve to 192.168.122.41<br>insert into dns_records (zone, host, type, data, mx_priority) values (‘leaf.org’, ‘www’, ‘A’, ‘192.168.122.41’, null);  </p>
<p>// for leaf.org to resolve to 192.168.122.41<br>insert into dns_records (zone, host, type, data, mx_priority) values (‘leaf.org’, ‘@’, ‘A’, ‘192.168.122.41’, null);  </p>
<p>// for bind9.leaf.org to alias to <a href="http://www.leaf.org/">www.leaf.org</a><br>// note the trailing period in the data field<br>insert into dns_records (zone, host, type, data, mx_priority) values (‘leaf.org’, ‘bing9’, ‘CNAME’, ‘<a href="http://www.leaf.org.&/#39;">www.leaf.org.&#39;</a>, null);  </p>
<p>// for mail for leaf.org to go to leaf.org<br>// note the trailing period in the data field<br>insert into dns_records (zone, host, type, data, mx_priority) values (‘leaf.org’, ‘@’, ‘MX’, ‘leaf.org.’, ‘0’);  </p>
</blockquote>
<blockquote>
<p>insert into dns_records (zone, host, type, data, mx_priority) values (‘leaf.org’, ‘@’, ‘SOA’, ‘192.168.122.41’, 10800);<br>insert into dns_records (zone, host, type, data, mx_priority) values (‘leaf.org’, ‘@’, ‘NS’, ‘192.168.122.41’, null);  </p>
</blockquote>
<blockquote>
<p>quit  </p>
</blockquote>
<p>验证  </p>
<blockquote>
<p>sudo /etc/init.d/bind9 start  </p>
</blockquote>
<blockquote>
<p>dig @192.168.122.41 leaf.org  </p>
<p><img src="http://img2.ph.126.net/j_E32s1s-kz3vAm_aRaiNg==/6630455337723668096.png" alt="UBUNTU14.04安装BIND9_DLZ - leaf - ------勤解万难------" title="UBUNTU14.04安装BIND9_DLZ - leaf - ------勤解万难------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>UBUNTU14.04安装SAMBA4.1.6作AD，DNS，ldap</title>
    <url>/posts/2180576762/</url>
    <content><![CDATA[<p>参考  </p>
<blockquote>
<p><a href="https://wiki.samba.org/index.php/Samba/_AD/_DC/_HOWTO">https://wiki.samba.org/index.php/Samba\_AD\_DC\_HOWTO</a><br><a href="http://www.jadota.com/2013/01/installing-samba4-on-ubuntu-12-04/">http://www.jadota.com/2013/01/installing-samba4-on-ubuntu-12-04/</a>  </p>
</blockquote>
<p>环境：  </p>
<blockquote>
<p>服务器OS：UBUNTU14.04  </p>
<blockquote>
<p>服务器主机名：sambadc<br>域：ye.org<br>完整名字：sambadc.ye.org<br>NETBIOS名：YE<br>域控管理员密码：Password0<br>服务器IP：192.168.122.30<br>网关：192.168.122.1  </p>
</blockquote>
<p>客户端OS：winxp  </p>
<blockquote>
<p>192.168.122.110<br>255.255.255.0<br>192.168.122.1<br>-————————<br>192.168.122.30  </p>
</blockquote>
<p>管理端OS：win2003，win7  </p>
</blockquote>
<p>服务器名称及IP地址设置  </p>
<blockquote>
<p>cat /etc/hostname  </p>
<blockquote>
<p>sambadc.ye.org  </p>
</blockquote>
<p>cat /etc/hosts  </p>
<blockquote>
<p>127.0.0.1    sambadc.ye.org    sambadc  </p>
</blockquote>
<p>cat /etc/network/interfaces  </p>
<blockquote>
<p># The loopback network interface<br>auto lo<br>iface lo inet loopback  </p>
<p># The primary network interface<br>auto eth0<br>iface eth0 inet static<br>    address 192.168.122.30<br>    netmask 255.255.255.0<br>    gateway 192.168.122.1<br>    dns-nameservers 192.168.122.30 192.168.122.1<br>    dns-search ye.org  </p>
</blockquote>
<p>sudo reboot  </p>
</blockquote>
<p>安装OPENSSH  </p>
<blockquote>
<p>sudo apt-get update<br>sudo apt-get install openssh-server  </p>
</blockquote>
<blockquote>
<p>sudo reboot  </p>
</blockquote>
<p>安装NTP</p>
<blockquote>
<p><a href="http://chenpeng.info/html/241">http://chenpeng.info/html/241</a></p>
</blockquote>
<blockquote>
<p>sudo apt-get install ntp</p>
</blockquote>
<blockquote>
</blockquote>
<p>安装SAMBA  </p>
<blockquote>
<p>sudo apt-get install build-essential libacl1-dev python-dev libldap2-dev pkg-config gdb libgnutls-dev libblkid-dev libreadline-dev libattr1-dev python-dnspython libpopt-dev libbsd-dev attr docbook-xsl libcups2-dev git      #只需要安装python-dev就可以，方便期间全部安装<br>sudo apt-get instajll samba<br>samba -V  </p>
<blockquote>
<p>Version 4.1.6-Ubuntu #查询samba版本号  </p>
</blockquote>
<p>sudo reboot  </p>
</blockquote>
<p>配置SAMBA  </p>
<blockquote>
<p>sudo mv /etc/samba/smb.conf    /etc/samba/smb.conf-orig  </p>
</blockquote>
<blockquote>
<p>sudo su  </p>
</blockquote>
<blockquote>
<p>samba-tool domain provision –use-rfc2307 –interactive  </p>
</blockquote>
<p><strong>Realm: YE.ORG</strong><br> <strong>Domain [YE]: YE</strong><br> <strong>Server Role (dc, member, standalone) [dc]: dc</strong><br> <strong>DNS backend (SAMBA_INTERNAL, BIND9_FLATFILE, BIND9_DLZ, NONE) [SAMBA_INTERNAL]:</strong><br> <strong>DNS forwarder IP address (write ‘none’ to disable forwarding) [192.168.122.30]: 192.168.122.1</strong><br><strong>Administrator password:</strong><br><strong>Retype password:</strong><br><strong>Looking up IPv4 addresses</strong><br><strong>Looking up IPv6 addresses</strong><br><strong>No IPv6 address will be assigned</strong><br><strong>Setting up share.ldb</strong><br><strong>Setting up secrets.ldb</strong><br><strong>Setting up the registry</strong><br><strong>Setting up the privileges database</strong><br><strong>Setting up idmap db</strong><br><strong>Setting up SAM db</strong><br><strong>Setting up sam.ldb partitions and settings</strong><br><strong>Setting up sam.ldb rootDSE</strong><br><strong>Pre-loading the Samba 4 and AD schema</strong><br><strong>Adding DomainDN: DC=ye,DC=org</strong><br><strong>Adding configuration container</strong><br><strong>Setting up sam.ldb schema</strong><br><strong>Setting up sam.ldb configuration data</strong><br><strong>Setting up display specifiers</strong><br><strong>Modifying display specifiers</strong><br><strong>Adding users container</strong><br><strong>Modifying users container</strong><br><strong>Adding computers container</strong><br><strong>Modifying computers container</strong><br><strong>Setting up sam.ldb data</strong><br><strong>Setting up well known security principals</strong><br><strong>Setting up sam.ldb users and groups</strong><br><strong>Setting up self join</strong><br><strong>Adding DNS accounts</strong><br><strong>Creating CN=MicrosoftDNS,CN=System,DC=ye,DC=org</strong><br><strong>Creating DomainDnsZones and ForestDnsZones partitions</strong><br><strong>Populating DomainDnsZones and ForestDnsZones partitions</strong><br><strong>Setting up sam.ldb rootDSE marking as synchronized</strong><br><strong>Fixing provision GUIDs</strong><br><strong>A Kerberos configuration suitable for Samba 4 has been generated at /var/lib/samba/private/krb5.conf</strong><br><strong>Setting up fake yp server settings</strong><br><strong>Once the above files are installed, your Samba4 server will be ready to use</strong><br><strong>Server Role:           active directory domain controller</strong><br><strong>Hostname:              sambadc</strong><br><strong>NetBIOS Domain:        YE</strong><br><strong>DNS Domain:            ye.org</strong><br><strong>DOMAIN SID:            S-1-5-21-3720594679-4085702030-3410277671</strong>  </p>
<blockquote>
<p>sudo nano  /etc/network/interfaces  </p>
<blockquote>
<p># The loopback network interface<br>auto lo<br>iface lo inet loopback  </p>
<p># The primary network interface<br>auto eth0<br>iface eth0 inet static<br>    address 192.168.122.30<br>    netmask 255.255.255.0<br>    gateway 192.168.122.1<br>    dns-nameservers 192.168.122.30<br>    dns-search ye.org  </p>
</blockquote>
<p>sudo reboot  </p>
</blockquote>
<p>验证SAMBA  </p>
<blockquote>
<p>sudo apt-get install smbclient<br>smbclient -L localhost -U%  </p>
<blockquote>
<p>Domain=[YE] OS=[Unix] Server=[Samba 4.1.6-Ubuntu]  </p>
<p>    Sharename       Type      Comment<br>    ———       —-      ——-<br>    netlogon        Disk     <br>    sysvol          Disk     <br>    IPC$            IPC       IPC Service (Samba 4.1.6-Ubuntu)<br>Domain=[YE] OS=[Unix] Server=[Samba 4.1.6-Ubuntu]  </p>
<p>    Server               Comment<br>    ———            ——-  </p>
<p>    Workgroup            Master<br>    ———            ——-<br>    WORKGROUP            SAMBA  </p>
</blockquote>
<p>smbclient //localhost/netlogon -U ‘administrator’  </p>
<blockquote>
<p>Enter administrator’s password:<br>Domain=[YE] OS=[Unix] Server=[Samba 4.1.6-Ubuntu]<br>smb: \&gt; ls<br>  .                                   D        0  Wed Sep  9 21:29:19 2015<br>  ..                                  D        0  Wed Sep  9 21:29:27 2015  </p>
<p>        60333 blocks of size 131072. 46075 blocks available  </p>
</blockquote>
</blockquote>
<p>测试DNS  </p>
<blockquote>
<p>host -t SRV _ldap._tcp.ye.org.  </p>
<blockquote>
<p>_ldap._tcp.ye.org has SRV record 0 100 389 sambadc.ye.org.  </p>
</blockquote>
<p>host -t SRV _kerberos._udp.ye.org.  </p>
<blockquote>
<p>_kerberos._udp.ye.org has SRV record 0 100 88 sambadc.ye.org.  </p>
</blockquote>
<p>host -t A sambadc.ye.org.  </p>
<blockquote>
<p>sambadc.ye.org has address 192.168.122.30  </p>
</blockquote>
</blockquote>
<p>安装Kerberos  </p>
<blockquote>
<p>sudo apt-get install krb5-user<br>kinit administrator<br>    Password for <a href="mailto:&#x61;&#x64;&#109;&#105;&#x6e;&#105;&#115;&#116;&#114;&#x61;&#116;&#x6f;&#114;&#64;&#89;&#69;&#x2e;&#79;&#x52;&#71;">&#x61;&#x64;&#109;&#105;&#x6e;&#105;&#115;&#116;&#114;&#x61;&#116;&#x6f;&#114;&#64;&#89;&#69;&#x2e;&#79;&#x52;&#71;</a>:<br>    Warning: Your password will expire in 41 days on Wed 21 Oct 2015 09:29:26 PM CST<br>klist<br>    Ticket cache: FILE:/tmp/krb5cc_1000<br>    Default principal: <a href="mailto:&#x61;&#100;&#109;&#x69;&#x6e;&#x69;&#115;&#x74;&#114;&#97;&#116;&#111;&#114;&#x40;&#x59;&#x45;&#x2e;&#x4f;&#82;&#x47;">&#x61;&#100;&#109;&#x69;&#x6e;&#x69;&#115;&#x74;&#114;&#97;&#116;&#111;&#114;&#x40;&#x59;&#x45;&#x2e;&#x4f;&#82;&#x47;</a>  </p>
<p>    Valid starting       Expires              Service principal<br>    09/09/2015 23:44:49  09/10/2015 09:44:49  krbtgt/YE.ORG@YE.ORG<br>        renew until 09/10/2015 23:44:44  </p>
</blockquote>
<p>查看SAMBA配置文件  </p>
<blockquote>
<p>samba -b<br>Samba version: 4.1.6-Ubuntu<br>Build environment:<br>   Build host:  Linux lgw01-45 3.19.0-25-generic #26~14.04.1-Ubuntu SMP Fri Jul 24 21:16:20 UTC 2015 i686 i686 i686 GNU/Linux<br>Paths:<br>   BINDIR: /usr/bin<br>   SBINDIR: /usr/sbin<br>   CONFIGFILE: /etc/samba/smb.conf<br>   NCALRPCDIR: /var/run/samba/ncalrpc<br>   LOGFILEBASE: /var/log/samba<br>   LMHOSTSFILE: /etc/samba/lmhosts<br>   DATADIR: /usr/share<br>   MODULESDIR: /usr/lib/i386-linux-gnu/samba<br>   LOCKDIR: /var/run/samba<br>   STATEDIR: /var/lib/samba<br>   CACHEDIR: /var/cache/samba<br>   PIDDIR: /var/run/samba<br> PRIVATE_DIR: /var/lib/samba/private<br>   CODEPAGEDIR: /usr/share/samba/codepages<br>   SETUPDIR: /usr/share/samba/setup<br>   WINBINDD_SOCKET_DIR: /var/run/samba/winbindd<br>   WINBINDD_PRIVILEGED_SOCKET_DIR: /var/lib/samba/winbindd_privileged<br>   NTP_SIGND_SOCKET_DIR: /var/lib/samba/ntp_signd  </p>
</blockquote>
<p>XP加域<br>win2003安装管理工具包  </p>
<blockquote>
<p><a href="http://www.microsoft.com/zh-CN/download/details.aspx?id=6315">http://www.microsoft.com/zh-CN/download/details.aspx?id=6315</a>  </p>
</blockquote>
<p>win7安装管理工具包  </p>
<blockquote>
<p><a href="http://www.microsoft.com/zh-CN/download/details.aspx?id=7887">http://www.microsoft.com/zh-CN/download/details.aspx?id=7887</a><br><a href="https://wiki.samba.org/index.php/Installing/_RSAT">https://wiki.samba.org/index.php/Installing\_RSAT</a>  </p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>UBUNTU14.04安装SAMBA4.1.6做BDC</title>
    <url>/posts/1457996796/</url>
    <content><![CDATA[<p>参考：<br><a href="https://wiki.samba.org/index.php/Samba4/HOWTO/Join/_a/_domain/_as/_a/_DC">https://wiki.samba.org/index.php/Samba4/HOWTO/Join\_a\_domain\_as\_a\_DC</a><br><a href="https://wiki.samba.org/index.php/Check/_and/_fix/_DNS/_entries/_on/_DC/_joins">https://wiki.samba.org/index.php/Check\_and\_fix\_DNS\_entries\_on\_DC\_joins</a>  </p>
<p>环境：  </p>
<blockquote>
<p>服务器OS1：UBUNTU14.04<br>服务器主机名：sambadc<br>域：ye.org<br>完整名字：sambadc.ye.org<br>NETBIOS名：YE<br>域控管理员密码：Password0<br>服务器IP：192.168.122.30<br>网关：192.168.122.1  </p>
<p>服务器OS2：UBUNTU14.04<br>服务器主机名：sambabdc<br>域：ye.org<br>完整名字：sambabdc.ye.org<br>NETBIOS名：YE<br>域控管理员密码：Password0<br>服务器IP：192.168.122.31<br>网关：192.168.122.1  </p>
</blockquote>
<p>服务器OS2及IP地址设置  </p>
<blockquote>
<p>cat /etc/hostname  </p>
<blockquote>
<p>sambabdc.ye.org  </p>
</blockquote>
<p>cat /etc/hosts  </p>
<blockquote>
<p>127.0.0.1       localhost.localdomain    localhost<br>192.168.122.31    sambabdc.ye.org    sambabdc  </p>
</blockquote>
<p>cat /etc/network/interfaces  </p>
<blockquote>
<p># The loopback network interface<br>auto lo<br>iface lo inet loopback  </p>
<p># The primary network interface<br>auto eth0<br>iface eth0 inet static  </p>
</blockquote>
<blockquote>
<p>    address 192.168.122.31  </p>
</blockquote>
<blockquote>
<p>    netmask 255.255.255.0<br>    gateway 192.168.122.1<br>    dns-nameservers 192.168.122.30<br>    dns-search ye.org  </p>
</blockquote>
<p>sudo reboot  </p>
</blockquote>
<blockquote>
<p>测试dns设置：host -t -A sambadc.ye.org  </p>
</blockquote>
<p>安装samba  </p>
<blockquote>
<p>sudo apt-get install samba smbclient python-dev  </p>
</blockquote>
<p>安装Kerberos  </p>
<blockquote>
<p>sudo apt-get install krb5-user<br>sudo nano /etc/krb5.conf  </p>
<blockquote>
<p>[libdefaults]<br>    dns_lookup_realm = false<br>    dns_lookup_kdc = true<br>    default_realm = YE.ORG  </p>
</blockquote>
<p>kinit administrator<br>    Password for <a href="mailto:&#x61;&#x64;&#x6d;&#105;&#x6e;&#x69;&#115;&#116;&#x72;&#x61;&#x74;&#111;&#114;&#64;&#x59;&#x45;&#46;&#79;&#82;&#x47;">&#x61;&#x64;&#x6d;&#105;&#x6e;&#x69;&#115;&#116;&#x72;&#x61;&#x74;&#111;&#114;&#64;&#x59;&#x45;&#46;&#79;&#82;&#x47;</a>:<br>    Warning: Your password will expire in 41 days on Wed 21 Oct 2015 09:29:26 PM CST<br>klist<br>    Ticket cache: FILE:/tmp/krb5cc_1000<br>    Default principal: <a href="mailto:&#x61;&#100;&#109;&#105;&#x6e;&#x69;&#x73;&#116;&#x72;&#97;&#x74;&#111;&#114;&#x40;&#x59;&#69;&#x2e;&#x4f;&#82;&#71;">&#x61;&#100;&#109;&#105;&#x6e;&#x69;&#x73;&#116;&#x72;&#97;&#x74;&#111;&#114;&#x40;&#x59;&#69;&#x2e;&#x4f;&#82;&#71;</a>  </p>
<p>    Valid starting       Expires              Service principal<br>    09/09/2015 23:44:49  09/10/2015 09:44:49  krbtgt/YE.ORG@YE.ORG<br>        renew until 09/10/2015 23:44:44</p>
</blockquote>
<blockquote>
</blockquote>
<p>加入域  </p>
<blockquote>
<p>sudo su<br>mv /etc/samba/smb.conf /etc/samba/smb.conf-orig<br>samba-tool domain join ye.org DC -Uadministrator –realm=ye.org –dns-backend=SAMBA_INTERNAL  </p>
</blockquote>
<blockquote>
</blockquote>
<p>检查DNS条目  </p>
<blockquote>
<p>加host记录<br>测试：<br>host -t -A sambabdc.ye.org.  </p>
<blockquote>
<p>会出现 Host sambabdc.ye.org. not found: 3(NXDOMAIN) 之类的提示  </p>
</blockquote>
</blockquote>
<blockquote>
<p>加入：<br>samba-tool dns add SAMBADC ye.org SAMBABDC A 192.168.122.31 -Uadministrator  </p>
<blockquote>
<p>Password for [SAMDOM\administrator]: Password0<br>Record added successfully  </p>
</blockquote>
<p>加CNAME记录<br>sudo su<br>ldbsearch -H /var/lib/samba/private/sam.ldb ‘(invocationId=*)’ –cross-ncs objectguid  </p>
<blockquote>
<p># record 1<br>dn: CN=NTDS Settings,CN=SAMBABDC,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=ye,DC=org<br>objectGUID: 619eabd6-9d28-42d1-8a2f-d11ffacfa948  </p>
<p># record 2<br>dn: CN=NTDS Settings,CN=SAMBADC,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=ye,DC=org<br>objectGUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6  </p>
<p># returned 2 records<br># 2 entries<br># 0 referrals  </p>
</blockquote>
<p>测试：<br>host -t CNAME 619eabd6-9d28-42d1-8a2f-d11ffacfa948._msdcs.ye.org.  </p>
<blockquote>
<p>Host 619eabd6-9d28-42d1-8a2f-d11ffacfa948._msdcs.ye.org. not found: 3(NXDOMAIN)  </p>
</blockquote>
<p>加入：<br>samba-tool dns add SAMBADC _msdcs.ye.org 619eabd6-9d28-42d1-8a2f-d11ffacfa948 CNAME SAMBABDC.ye.org -Uadministrator  </p>
<blockquote>
<p>Password for [SAMDOM\administrator]: passw0rd<br>Record added successfully  </p>
</blockquote>
</blockquote>
<p>目录复制<br>samba-tool drs showrepl  </p>
<blockquote>
<p>Default-First-Site-Name\SAMBABDC<br>DSA Options: 0x00000001<br>DSA object GUID: 619eabd6-9d28-42d1-8a2f-d11ffacfa948<br>DSA invocationId: 5d417388-c68d-4784-8aa4-167c9a40a5b4  </p>
<p>==== INBOUND NEIGHBORS ====  </p>
<p>DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ Fri Sep 11 11:41:05 2015 CST was successful<br>        0 consecutive failure(s).<br>        Last success @ Fri Sep 11 11:41:05 2015 CST  </p>
<p>CN=Configuration,DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ Fri Sep 11 11:41:06 2015 CST was successful<br>        0 consecutive failure(s).<br>        Last success @ Fri Sep 11 11:41:06 2015 CST  </p>
<p>DC=ForestDnsZones,DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ Fri Sep 11 11:41:05 2015 CST was successful<br>        0 consecutive failure(s).<br>        Last success @ Fri Sep 11 11:41:05 2015 CST  </p>
<p>CN=Schema,CN=Configuration,DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ Fri Sep 11 11:41:06 2015 CST was successful<br>        0 consecutive failure(s).<br>        Last success @ Fri Sep 11 11:41:06 2015 CST  </p>
<p>DC=DomainDnsZones,DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ Fri Sep 11 11:41:05 2015 CST was successful<br>        0 consecutive failure(s).<br>        Last success @ Fri Sep 11 11:41:05 2015 CST  </p>
<p>==== OUTBOUND NEIGHBORS ====  </p>
<p>DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ NTTIME(0) was successful<br>        0 consecutive failure(s).<br>        Last success @ NTTIME(0)  </p>
<p>CN=Configuration,DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ NTTIME(0) was successful<br>        0 consecutive failure(s).<br>        Last success @ NTTIME(0)  </p>
<p>DC=ForestDnsZones,DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ NTTIME(0) was successful<br>        0 consecutive failure(s).<br>        Last success @ NTTIME(0)  </p>
<p>CN=Schema,CN=Configuration,DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ NTTIME(0) was successful<br>        0 consecutive failure(s).<br>        Last success @ NTTIME(0)  </p>
<p>DC=DomainDnsZones,DC=ye,DC=org<br>    Default-First-Site-Name\SAMBADC via RPC<br>        DSA object GUID: f2de8425-5a1d-4e27-92ea-705b1039bbe6<br>        Last attempt @ NTTIME(0) was successful<br>        0 consecutive failure(s).<br>        Last success @ NTTIME(0)  </p>
<p>==== KCC CONNECTION OBJECTS ====  </p>
<p>Connection –<br>    Connection name: 435389c9-22f8-4ae0-aa1b-046cc684cb40<br>    Enabled        : TRUE<br>    Server DNS name : sambadc.ye.org<br>    Server DN name  : CN=NTDS Settings,CN=SAMBADC,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=ye,DC=org<br>        TransportType: RPC<br>        options: 0x00000001<br>Warning: No NC replicated for Connection!  </p>
</blockquote>
<p>更新DNS设置  </p>
<blockquote>
<p>/etc/network/interfaces on SAMBABDC<br>nameserver 192.168.122.30<br>nameserver 127.0.0.1<br>search ye.org<br> <br>/etc/network/interfaces on SAMBADC<br>nameserver 192.168.122.31<br>nameserver 127.0.0.1<br>search ye.org  </p>
</blockquote>
<p>域控管理  </p>
<blockquote>
<p><img src="http://img0.ph.126.net/T_xbdZhdBzvw-2Axls3mqw==/6630082603281836382.png" alt="UBUNTU14.04安装SAMBA4.1.6做BDC - leaf - ------勤解万难------" title="UBUNTU14.04安装SAMBA4.1.6做BDC - leaf - ------勤解万难------"></p>
<p>   </p>
<p><img src="http://img1.ph.126.net/DYmimScDudNxu-HMHgLnzA==/6619451425352315557.png" alt="UBUNTU14.04安装SAMBA4.1.6做BDC - leaf - ------勤解万难------" title="UBUNTU14.04安装SAMBA4.1.6做BDC - leaf - ------勤解万难------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>UBUNTU14.04安装SAMBA4.1.6并使用BIND9_DLZ</title>
    <url>/posts/1528754021/</url>
    <content><![CDATA[<p>参考：  </p>
<blockquote>
<p><a href="http://blogging.dragon.org.uk/samba4-ad-dc-on-ubuntu-14-04/">http://blogging.dragon.org.uk/samba4-ad-dc-on-ubuntu-14-04/</a><br><a href="https://wiki.samba.org/index.php/DNS/_Backend/_BIND">https://wiki.samba.org/index.php/DNS\_Backend\_BIND</a><br><a href="http://blog.163.com/ywz/_306/blog/static/1325771120158137124386/">http://blog.163.com/ywz\_306/blog/static/1325771120158137124386/</a>  </p>
</blockquote>
<p>思路：  </p>
<blockquote>
<p>首先把bind_dlz，ntp，(openldap)等都设置好，<br>然后安装samba，<br>最后配置samba的时候把bind_dlz,openldap都带上即可  </p>
</blockquote>
<p>环境  </p>
<blockquote>
<p>服务器OS：UBUNTU14.04<br>服务器主机名：bind9<br>域：leaf.org<br>完整名字：bind9.leaf.org<br>mysql密码：123456<br>db名字：bind9dlz<br>服务器IP：192.168.122.41<br>网关：192.168.122.1  </p>
</blockquote>
<p>服务器名称及IP地址设置  </p>
<blockquote>
<p>cat /etc/hostname  </p>
<blockquote>
<p>bind9.leaf.org  </p>
</blockquote>
<p>cat /etc/hosts  </p>
<blockquote>
<p>127.0.0.1    bind9.leaf.org   bind9  </p>
</blockquote>
<p>cat /etc/network/interfaces  </p>
<blockquote>
<p># The loopback network interface<br>auto lo<br>iface lo inet loopback  </p>
<p># The primary network interface<br>auto eth0<br>iface eth0 inet static<br>    address 192.168.122.41<br>    netmask 255.255.255.0<br>    gateway 192.168.122.1<br>    dns-nameservers 192.168.122.41 192.168.122.1 #bind配置完后把122.1去掉<br>    dns-search leaf.org  </p>
</blockquote>
<p>sudo reboot  </p>
</blockquote>
<p>一、BIND9_DLZ  </p>
<blockquote>
<p><a href="http://blog.163.com/ywz/_306/blog/static/1325771120158137124386/">http://blog.163.com/ywz\_306/blog/static/1325771120158137124386/</a></p>
</blockquote>
<p>二、安装NTP服务  </p>
<blockquote>
<p>sudo apt-get install ntp  </p>
</blockquote>
<p>三、安装samba4  </p>
<blockquote>
<p>安装软件包<br>sudo apt-get install samba smbclient build-essential libacl1-dev libattr1-dev \ libblkid-dev libgnutls-dev libreadline-dev python-dev libpam0g-dev \ python-dnspython gdb pkg-config libpopt-dev libldap2-dev \ dnsutils libbsd-dev krb5-user docbook-xsl libcups2-dev ldb-tools</p>
</blockquote>
<blockquote>
<p>Kerberos设置的时候会跳出设置，依次是  </p>
<blockquote>
<p>Configuring Kerberos Authentication: LEAF.ORG<br>hostname of Kerberos servers in the BLACK.DRAGON.LAB: bind9<br>hostname of the Administrative (password changing) servers: bind9  </p>
</blockquote>
<p>配置<br>1、先移除原有smb.conf<br>sudo mv /etc/samba/smb.conf{,-orig}<br>sudo samba-tool domain provision –use-rfc2307 –interactive  </p>
<blockquote>
<p>Realm: LEAF.ORG<br>Domain: LEAF<br>Server Role: dc<br>DNS Backend: BIND_DLZ  </p>
</blockquote>
<p>配置/etc/samba/smb.conf  </p>
<blockquote>
<p>[global]里面加入  </p>
</blockquote>
<blockquote>
<p>allow dns updates = nonsecure and secure<br>dns forwarder = 192.168.122.41  </p>
</blockquote>
<p>配置/var/lib/samba/private/named.conf  </p>
<blockquote>
<p>named -V<br>可以看到bind版本号为 BIND 9.9.5-3ubuntu0.5-Ubuntu  </p>
<p>然后更改/var/lib/samba/private/named.conf<br>把9.8注销掉，启用9.9  </p>
</blockquote>
<blockquote>
<p>dlz “AD DNS Zone” {<br>    # For BIND 9.8.0<br>   # database “dlopen /usr/lib/i386-linux-gnu/samba/bind9/dlz_bind9.so”;  </p>
<p>    # For BIND 9.9.0<br>     database “dlopen /usr/lib/i386-linux-gnu/samba/bind9/dlz_bind9_9.so”;<br>};  </p>
</blockquote>
<p>配置/etc/bind/named.conf.options  </p>
<blockquote>
<p>options{}里面加入<br>tkey-gssapi-keytab “/var/lib/samba/private/dns.keytab”;  </p>
</blockquote>
<p>配置/etc/bind/named.conf  </p>
<blockquote>
<p>第二行加入include “/var/lib/samba/private/named.conf”;  </p>
</blockquote>
<blockquote>
<p>配置权限sudo nano /etc/apparmor.d/usr.sbin.named  </p>
<blockquote>
<p>/usr/lib/i386-linux-gnu/ldb/** rwmk,<br>/usr/lib/i386-linux-gnu/samba/** rwmk,<br>/var/lib/samba/private/dns/** rwmk,<br>/var/lib/samba/private/named.conf r,<br>/var/lib/samba/private/dns.keytab r,<br>/var/tmp/* rw,<br>/dev/urandom rw,  </p>
</blockquote>
<p>sudo service apparmor reload  </p>
</blockquote>
<blockquote>
<p>更改dns.keytab权限<br>sudo chgrp bind /var/lib/samba/private/dns.keytab<br>sudo chmod g+r /var/lib/samba/private/dns.keytab  </p>
</blockquote>
<p>删除/etc/bind/named.conf.local下的dlz全部内容。  </p>
</blockquote>
<p>sudo reboot。<br>至此，全部配完。  </p>
<blockquote>
</blockquote>
<p>三、碰到的问题  </p>
<blockquote>
<p>检查bind问题  </p>
<blockquote>
<p>named -d 3 -f -g<br>named-checkconf  </p>
</blockquote>
</blockquote>
<blockquote>
<p>问题1：  </p>
</blockquote>
<blockquote>
<p>open /var/lib/samba/private/named.conf permission denied  </p>
<blockquote>
<p>在/etc/apparmor.d/usr.sbin.named 加入以下内容<br>或者/etc/apparmor.d/local/usr.sbin.named加入以下内容  </p>
<blockquote>
<p>/usr/lib/i386-linux-gnu/ldb/** rwmk,<br>/usr/lib/i386-linux-gnu/samba/** rwmk,<br>/var/lib/samba/private/dns/** rwmk,<br>/var/lib/samba/private/named.conf r,<br>/var/lib/samba/private/dns.keytab r,<br>/var/tmp/* rw,<br>/dev/urandom rw,  </p>
</blockquote>
<p>sudo service apparmor reload  </p>
</blockquote>
<p>问题2：<br>‘dlz’ redefined near ‘dlz’  </p>
<blockquote>
<p>把原先加在nano /etc/bind/named.conf.local下的dlz全部删除即可</p>
</blockquote>
</blockquote>
<p>四、测试  </p>
<blockquote>
<p> smbclient -L localhost -U%  </p>
<blockquote>
<p>Domain=[LEAF] OS=[Unix] Server=[Samba 4.1.6-Ubuntu]  </p>
<p>    Sharename       Type      Comment<br>    ———       —-      ——-<br>    netlogon        Disk     <br>    sysvol          Disk     <br>    IPC$            IPC       IPC Service (Samba 4.1.6-Ubuntu)<br>Domain=[LEAF] OS=[Unix] Server=[Samba 4.1.6-Ubuntu]  </p>
<p>    Server               Comment<br>    ———            ——-  </p>
<p>    Workgroup            Master<br>    ———            ——-<br>    WORKGROUP            BIND9  </p>
</blockquote>
<p>ywz@bind9:/var/log$ smbclient //localhost/netlogon -UAdministrator -c ‘ls’  </p>
<blockquote>
<p>Enter Administrator’s password:<br>Domain=[LEAF] OS=[Unix] Server=[Samba 4.1.6-Ubuntu]<br>  .                                   D        0  Tue Sep 15 17:42:22 2015<br>  ..                                  D        0  Tue Sep 15 17:42:31 2015  </p>
<p>        60333 blocks of size 131072. 43559 blocks available  </p>
</blockquote>
<p>ywz@bind9:/var/log$ host -t SRV _ldap._tcp.leaf.org.  </p>
<blockquote>
<p>_ldap._tcp.leaf.org has SRV record 0 100 389 bind9.leaf.org.  </p>
</blockquote>
<p>ywz@bind9:/var/log$ host -t SRV _kerberos._udp.leaf.org.  </p>
<blockquote>
<p>_kerberos._udp.leaf.org has SRV record 0 100 88 bind9.leaf.org.  </p>
</blockquote>
<p>ywz@bind9:/var/log$ host -t A bind9.leaf.org.  </p>
<blockquote>
<p>bind9.leaf.org has address 192.168.122.41  </p>
</blockquote>
<p>ywz@bind9:/var/log$ kinit administrator  </p>
<blockquote>
<p>Password for <a href="mailto:&#97;&#100;&#109;&#x69;&#110;&#105;&#115;&#116;&#x72;&#97;&#116;&#x6f;&#x72;&#64;&#76;&#69;&#65;&#70;&#x2e;&#79;&#x52;&#x47;">&#97;&#100;&#109;&#x69;&#110;&#105;&#115;&#116;&#x72;&#97;&#116;&#x6f;&#x72;&#64;&#76;&#69;&#65;&#70;&#x2e;&#79;&#x52;&#x47;</a>:<br>Warning: Your password will expire in 41 days on Tue 27 Oct 2015 05:42:29 PM CST  </p>
</blockquote>
<p>ywz@bind9:/var/log$ klist  </p>
<blockquote>
<p>Ticket cache: FILE:/tmp/krb5cc_1000<br>Default principal: <a href="mailto:&#97;&#100;&#109;&#x69;&#110;&#x69;&#115;&#x74;&#114;&#97;&#x74;&#111;&#x72;&#64;&#x4c;&#x45;&#x41;&#70;&#46;&#x4f;&#x52;&#71;">&#97;&#100;&#109;&#x69;&#110;&#x69;&#115;&#x74;&#114;&#97;&#x74;&#111;&#x72;&#64;&#x4c;&#x45;&#x41;&#70;&#46;&#x4f;&#x52;&#71;</a>  </p>
<p>Valid starting       Expires              Service principal<br>09/16/2015 10:02:07  09/16/2015 20:02:07  krbtgt/LEAF.ORG@LEAF.ORG<br>    renew until 09/17/2015 10:02:03  </p>
</blockquote>
<p>ywz@bind9:/var/log$ samba-tool dns query bind9 LEAF.ORG @ ALL  </p>
<blockquote>
<p>  Name=, Records=3, Children=0<br>    SOA: serial=1, refresh=900, retry=600, expire=86400, minttl=0, ns=bind9.leaf.org., email=hostmaster.leaf.org. (flags=600000f0, serial=1, ttl=3600)<br>    NS: bind9.leaf.org. (flags=600000f0, serial=1, ttl=900)<br>    A: 192.168.122.41 (flags=600000f0, serial=1, ttl=900)<br>  Name=_msdcs, Records=0, Children=0<br>  Name=_sites, Records=0, Children=1<br>  Name=_tcp, Records=0, Children=4<br>  Name=_udp, Records=0, Children=2<br>  Name=bind9, Records=1, Children=0<br>    A: 192.168.122.41 (flags=f0, serial=1, ttl=900)<br>  Name=DomainDnsZones, Records=0, Children=2<br>  Name=ForestDnsZones, Records=0, Children=2  </p>
</blockquote>
<p>ywz@bind9:/var/log$ ping <a href="http://www.baidu.com/">www.baidu.com</a>  </p>
<blockquote>
<p>PING <a href="http://www.a.shifen.com/">www.a.shifen.com</a> (103.235.46.39) 56(84) bytes of data.<br>^C64 bytes from 103.235.46.39: icmp_seq=1 ttl=49 time=420 ms  </p>
<p>-– <a href="http://www.a.shifen.com/">www.a.shifen.com</a> ping statistics —<br>1 packets transmitted, 1 received, 0% packet loss, time 0ms<br>rtt min/avg/max/mdev = 420.071/420.071/420.071/0.000 ms</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu14.04开启vnc服务</title>
    <url>/posts/2161474433/</url>
    <content><![CDATA[<p>参考：<a href="http://broderick-tech.com/vncxstartup-files-ubuntu-14-04/">http://broderick-tech.com/vncxstartup-files-ubuntu-14-04/</a><br>ubuntu14.04操作：前面的步骤跟ubuntu10.04一样的，只需要改一改xstartup即可  </p>
<p>#!/bin/sh<br>def<br>export XKL_XMODMAP_DISABLE=1<br>unset SESSION_MANAGER<br>unset DBUS_SESSION_BUS_ADDRESS  </p>
<p>gnome-panel &amp;<br>gnome-settings-daemon &amp;<br>metacity &amp;<br>nautilus &amp;<br>gnome-terminal &amp;  </p>
<p>效果  </p>
<p><img src="http://img2.ph.126.net/5w9tvL6jeHMrOgSmaN2J_Q==/6598112103739446374.png" alt="ubuntu14.04开启vnc服务 - leaf - ------勤解万难------" title="ubuntu14.04开启vnc服务 - leaf - ------勤解万难------"></p>
<p>   </p>
<p>备注：一般我们都用ssh连接  </p>
<p>实验配置：<br>服务器：ubuntu10.04 X86，win7<br>客户端：ubuntu10.04 X64  </p>
<p>客户端：  </p>
<blockquote>
<p>安装命令：sudo apt-get install vncviewer<br>连接命令：vncviewer  172.16.43.135:1    #连入ubuntu  </p>
<blockquote>
<blockquote>
<p>vncviewer  172.16.43.135       #连入win7  </p>
</blockquote>
</blockquote>
</blockquote>
<p>win7服务端：  </p>
<blockquote>
<p>加密选项：设置为：更喜欢打开<br>这是为了防止：No configured security type is supported by 3.3 viewer  </p>
</blockquote>
<p>ubuntu服务器端：  </p>
<blockquote>
<p>安装：sudo apt-get install vnc4server  </p>
</blockquote>
<blockquote>
<p>当前用户输入：  </p>
<blockquote>
<p>vnc4server  :1<br>输入密码  </p>
</blockquote>
<p>会建立.vnc目录：passwd  xstartup  ywz-desktop:1.log  ywz-desktop:1.pid  </p>
</blockquote>
<blockquote>
<p>xstartup默认配置如下：  </p>
</blockquote>
<blockquote>
<p>#!/bin/sh<br># Uncomment the following two lines for normal desktop:<br># unset SESSION_MANAGER<br># exec /etc/X11/xinit/xinitrc<br>[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup<br>[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources<br>xsetroot -solid grey<br>vncconfig -iconic &amp;<br>x-terminal-emulator -geometry 80x24+10+10 -ls -title “$VNCDESKTOP Desktop” &amp;<br>x-window-manager &amp;</p>
</blockquote>
<p>1、修改配置：  </p>
<blockquote>
<p>修改配置的目的：能进图形界面，而不是字符界面<br>也为了解决：could not acquire name on session bus  </p>
</blockquote>
<blockquote>
<p>#!/bin/sh<br># Uncomment the following two lines for normal desktop:<br>unset SESSION_MANAGER<br>exec /etc/X11/xinit/xinitrc<br>[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup<br>[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources<br>#xsetroot -solid grey<br>#vncconfig -iconic &amp;<br>#x-terminal-emulator -geometry 80x24+10+10 -ls -title “$VNCDESKTOP Desktop” &amp;<br>#x-window-manager &amp;</p>
</blockquote>
<p>2、修改/etc/X11/xinit/xinitrc权限：sudo chmod a+x /etc/X11/xinit/xinitrc<br>3、设置防火墙：  </p>
<blockquote>
<p>netstat -tunlp  </p>
<blockquote>
<p>tcp        0      0 0.0.0.0:6001            0.0.0.0:*               LISTEN      5080/Xvnc4           <br>tcp6      0     0 :::5901                      :::*                        LISTEN      5080/Xvnc4    </p>
</blockquote>
<p>sudo ufw allow from 172.16.43.100 to any port 5901  </p>
</blockquote>
<p>4、然后重启vnc4server  </p>
<blockquote>
<p>vnc4server -kill :1<br>vnc4server :1      #:1表示开启第一个界面  </p>
</blockquote>
<p>5、开机自启动vnc服务<br>sudo gedit  /etc/init.d/vncserver  </p>
<blockquote>
<p>`#!/bin/sh -e  </p>
<h3 id="BEGIN-INIT-INFO"><a href="#BEGIN-INIT-INFO" class="headerlink" title="BEGIN INIT INFO"></a>BEGIN INIT INFO</h3><h1 id="Provides-vncserver"><a href="#Provides-vncserver" class="headerlink" title="Provides:          vncserver"></a>Provides:          vncserver</h1><h1 id="Required-Start-networking"><a href="#Required-Start-networking" class="headerlink" title="Required-Start:    networking"></a>Required-Start:    networking</h1><h1 id="Default-Start-3-4-5"><a href="#Default-Start-3-4-5" class="headerlink" title="Default-Start:     3 4 5"></a>Default-Start:     3 4 5</h1><h1 id="Default-Stop-0-6"><a href="#Default-Stop-0-6" class="headerlink" title="Default-Stop:      0 6"></a>Default-Stop:      0 6</h1><h3 id="END-INIT-INFO"><a href="#END-INIT-INFO" class="headerlink" title="END INIT INFO`"></a>END INIT INFO`</h3><p><code>PATH=&quot;$PATH:/usr/X11R6/bin/&quot;</code></p>
<p><code># The Username:Group that will run VNC   export USER=&quot;使用哪个账户来远程连接&quot;   #$&#123;RUNAS&#125;</code></p>
<p><code># The display that VNC will use   DISPLAY=&quot;1&quot;</code></p>
<p><code># Color depth (between 8 and 32)   DEPTH=&quot;24&quot;</code></p>
<p><code># The Desktop geometry to use.   #GEOMETRY=&quot;&lt;WIDTH&gt;x&lt;HEIGHT&gt;&quot;   GEOMETRY=&quot;800x600&quot;   #GEOMETRY=&quot;1024x768&quot;   #GEOMETRY=&quot;1280x1024&quot;</code></p>
<p><code># The name that the VNC Desktop will have.   NAME=&quot;vnc-server&quot;</code></p>
<p><code>OPTIONS=&quot;-name $&#123;NAME&#125; -depth $&#123;DEPTH&#125; -geometry $&#123;GEOMETRY&#125; :$&#123;DISPLAY&#125;&quot;</code></p>
<p><code>. /lib/lsb/init-functions</code></p>
<p><code>case &quot;$1&quot; in   start)   log_action_begin_msg &quot;Starting vncserver for user &#39;$&#123;USER&#125;&#39; on localhost:$&#123;DISPLAY&#125;&quot;   su $&#123;USER&#125; -c &quot;/usr/bin/vnc4server $&#123;OPTIONS&#125;&quot;   ;;</code></p>
<p><code>stop)   log_action_begin_msg &quot;Stoping vncserver for user &#39;$&#123;USER&#125;&#39; on localhost:$&#123;DISPLAY&#125;&quot;   su $&#123;USER&#125; -c &quot;/usr/bin/vnc4server -kill :$&#123;DISPLAY&#125;&quot;   ;;</code></p>
<p><code>restart)   $0 stop   $0 start   ;;   esac</code></p>
<p><code>exit 0</code></p>
</blockquote>
<p><code>sudo chmod +x /etc/init.d/vncserver   ``sudo update-rc.d vncserver defaults</code>  </p>
<p>参考：<br><a href="http://www.linuxidc.com/Linux/2011-10/46228.htm">http://www.linuxidc.com/Linux/2011-10/46228.htm</a><br><a href="http://www.abdevelopment.ca/blog/start-vnc-server-ubuntu-boot">http://www.abdevelopment.ca/blog/start-vnc-server-ubuntu-boot</a>  </p>
<p><img src="http://img8.ph.126.net/s4wmt5pmV-QYi5ZwIq8wvg==/6597163225146148528.jpg" alt="ubuntu开启vnc服务 - leaf - ------坚持雅操------" title="ubuntu开启vnc服务 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu16.04安装NVIDIA GT710驱动</title>
    <url>/posts/1460166489/</url>
    <content><![CDATA[<p>1、将nouveau模块移除</p>
<p>mv /lib/modules/3-???-generic/kernel/drivers/gpu/drm/nouveau/nouveau.ko ./</p>
<p>2、更新initramfs</p>
<p>update-initramfs -u</p>
<p>3、重启后关闭lightdm</p>
<p>/etc/init.d/lightdm stop</p>
<p>4、安装nvidia驱动</p>
<p>./Nvidia….run </p>
<p>搞定</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntus 最佳方案 -2</title>
    <url>/posts/387816121/</url>
    <content><![CDATA[<p>系统使用：ubuntu-8.04.4-server-i386.iso  </p>
<p>1、文件目录<br>/sys：用于存放系统信息  </p>
<p><img src="http://img5.ph.126.net/cXj5mkGxWJmsMc7bmwVVKg==/2583095861291110315.jpg" alt="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------"></p>
<p> <br>2、/etc/fstab<br>      sudo blkid  查看分区uuid  </p>
<p>3、lvm  逻辑卷管理器<br>     硬盘上面建lvm，lvm上面建分区。易于扩容和备份等  </p>
<p>4、tasksel  用于快速安装服务套件  </p>
<p>     <img src="http://img9.ph.126.net/STWB9322u2SY1-r6MX3cOQ==/634163122546532059.jpg" alt="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------"></p>
<p> </p>
<p> 5、更改语系<br>       查看当前语言设置：locale<br>       语言设置文件：/etc/default/locale  </p>
<p>       <img src="http://img8.ph.126.net/WNWkGw6u0Doq-dfdelmgPQ==/3084684269789498848.jpg" alt="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------"></p>
<p> <br>6、nano使用方法<br>      ctrl+o ：保存<br>      ctrl+x ：退出<br>      ctrl+w：查找<br>      ctrl+k： 剪切<br>      ctrl+u：撤销  </p>
<p>      <img src="http://img2.ph.126.net/99RlVjpIJA2LoTEI86bCtw==/2601954684730730712.jpg" alt="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------"></p>
<p> <br>7、mc 图形化资源管理器   </p>
<p>8、包管理软件<br>     —-apt工具<br>     apt相关文件<br>        /etc/apt/sources.list          软件包资源列表<br>        /etc/apt/apt.conf.d            apt零碎配置文件<br>        /var/cache/apt/archives    存放已经下载的软件包<br>    apt软件仓库分类<br>        main           自由软件，ubuntu完全支持<br>        restricted    不完全自由软件，但被广泛使用，ubuntu也提供支持<br>        universe     依赖社区提供支持，ubuntu不提供安全补丁等支持<br>        multiverse   非自由软件，完全没有支持<br>     apt-get命令<br>        update         更新软件包列表<br>        upgrade       升级所有软件包<br>        purge           彻底删除软件包<br>        source          下载源码包<br>        dist-upgrade  升级整个发行版<br>      apt-cache命令<br>         search          搜索软件包在ubuntu下的名字<br>      aptitude命令<br>         图形界面安装软件<br>      dpkg命令<br>         dpkg -l         查找软件包是否已经安装<br>         dpkg -L        查找软件包包含哪些文件<br>         dpkg -C        查找哪些软件未完成安装<br>         dpkg-reconfigure     自动配置已安装的软件包  </p>
<p>9、服务的启动和停止<br> update-rc.d  apache defaults    设置默认启动<br>         update-rc.d  apache purge        不自动启动  </p>
<p>10、网络配置<br>                /etc/network/interfaces   网卡及IP地址配置文件<br>                <img src="http://img2.ph.126.net/1WnTuBHmsufWHtDGPaKQ3w==/1299569967490523612.jpg" alt="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------"><br>      重启网络<br>                 /etc/init.d/networking restart       <br>      DNS配置文件<br>                 /etc/resolv.conf<br>                 <img src="http://img2.ph.126.net/dp58g5iEd6j07JkpRHcuQQ==/2759580671688692722.jpg" alt="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------"><br>       hosts文件<br>                 /etc/hosts   </p>
<p>11、时间同步（每天同步一次）<br>       sudo nano /etc/cron.daily/timeupdate<br>          添加： ntpdate ntp.ubuntu.com<br>                     关于ntp servers，访问：<a href="http://tf.nist.gov/tf-cgi/servers.cgi">http://tf.nist.gov/tf-cgi/servers.cgi</a><br>       sudo chmod 755 /etc/cron.daily/timeupdate  </p>
<p>12、远程管理ubuntus<br>       —服务器上安装ssh-s<br>           sudo apt-get install openssh-server<br>                 ssh配置文件：/etc/ssh/sshd_config<br>       —客户端远程登录服务器<br>           ssh <a href="mailto:&#120;&#x78;&#x78;&#x40;&#49;&#x37;&#x32;&#x2e;&#x31;&#54;&#x2e;&#52;&#51;&#x2e;&#49;&#52;&#x30;">&#120;&#x78;&#x78;&#x40;&#49;&#x37;&#x32;&#x2e;&#x31;&#54;&#x2e;&#52;&#51;&#x2e;&#49;&#52;&#x30;</a>    然后输入xxx的密码(xxx为服务器的用户名)  </p>
<p>        <img src="http://img8.ph.126.net/XNEalyrGgPBGQtUW3fdrig==/1275081644516690278.jpg" alt="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>        查看那些人登录到本机：who<br>        踢出用户：<br>               ps -ef | grep pts/0<br>               kill -9 5593<br>        <img src="http://img0.ph.126.net/HeI2Igi3XztxiaNamKlQYQ==/2655434930305746040.jpg" alt="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -2 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntus 最佳方案  3-apache.conf</title>
    <url>/posts/2254503815/</url>
    <content><![CDATA[<p>apache2.conf默认配置如下</p>
<blockquote>
<p>ServerRoot “/etc/apache2”</p>
</blockquote>
<blockquote>
<p>LockFile /var/lock/apache2/accept.lock</p>
</blockquote>
<blockquote>
<p>PidFile ${APACHE_PID_FILE}</p>
<p># Timeout: The number of seconds before receives and sends time out.</p>
<p>Timeout 300</p>
<p># KeepAlive: Whether or not to allow persistent connections (more than</p>
<p># one request per connection). Set to “Off” to deactivate.</p>
<p>KeepAlive On</p>
<p># MaxKeepAliveRequests: The maximum number of requests to allow</p>
<p># during a persistent connection. Set to 0 to allow an unlimited amount.</p>
<p># We recommend you leave this number high, for maximum performance.</p>
<p>MaxKeepAliveRequests 100</p>
<p># KeepAliveTimeout: Number of seconds to wait for the next request from the</p>
<p># same client on the same connection.</p>
<p>KeepAliveTimeout 15    #保持连接15秒不断开</p>
<p># prefork MPM</p>
<p>&lt;IfModule mpm_prefork_module&gt;</p>
<p>    StartServers          5</p>
<p>    MinSpareServers       5</p>
<p>    MaxSpareServers      10</p>
<p>    MaxClients          150</p>
<p>    MaxRequestsPerChild   0</p>
</IfModule>



<p># worker MPM</p>
<p>&lt;IfModule mpm_worker_module&gt;</p>
<p>    StartServers          2</p>
<p>    MaxClients          150       #最大连接数</p>
<p>    MinSpareThreads      25</p>
<p>    MaxSpareThreads      75 </p>
<p>    ThreadsPerChild      25</p>
<p>    MaxRequestsPerChild   0</p>
</IfModule>



<p># These need to be set in /etc/apache2/envvars</p>
<p>User ${APACHE_RUN_USER}</p>
<p>Group ${APACHE_RUN_GROUP}</p>
<p>AccessFileName .htaccess</p>
<p># The following lines prevent .htaccess and .htpasswd files from being </p>
<p># viewed by Web clients. </p>
<p>&lt;Files ~ “^\.ht”&gt;</p>
<p>    Order allow,deny</p>
<p>    Deny from all</p>
</Files>



<p>DefaultType text/plain</p>
<p>HostnameLookups Off   #off只获取客户的IP地址，on则获取客户的DNS</p>
<p>ErrorLog /var/log/apache2/error.log</p>
<p>LogLevel warn</p>
<p># Include module configuration:</p>
<p>Include /etc/apache2/mods-enabled/*.load</p>
<p>Include /etc/apache2/mods-enabled/*.conf</p>
<p># Include all the user configurations:</p>
<p>Include /etc/apache2/httpd.conf</p>
<p># Include ports listing</p>
<p>Include /etc/apache2/ports.conf</p>
<p>LogFormat “%h %l %u %t \“%r\“ %&gt;s %b \“%{Referer}i\“ \“%{User-Agent}i\“” combined</p>
<p>LogFormat “%h %l %u %t \“%r\“ %&gt;s %b” common</p>
<p>LogFormat “%{Referer}i -&gt; %U” referer</p>
<p>LogFormat “%{User-agent}i” agent</p>
<p>ServerTokens Full            #显示HTTP响应头的信息 </p>
<p>ServerSignature On</p>
<p>Include /etc/apache2/sites-enabled/</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntus 最佳方案 -3 apache</title>
    <url>/posts/2706917480/</url>
    <content><![CDATA[<p>安装apache2-mpm-worker  </p>
<blockquote>
<p>sudo apt-get install apache2</p>
</blockquote>
<p>配置文件说明<img src="http://img2.ph.126.net/rjDrEcnNpCK8qcSGcrkM1A==/2500060743161473472.jpg" alt="ubuntus 最佳方案 -3 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -3 - leaf - ------坚持雅操------">  </p>
<blockquote>
<p>apache2.conf:全局配置文件，如允许的进程数、日志等级、ServerTokens等多在这边设置<br>envvars:环境变量，运行apache的用户名和组就在这边设置<br>httpd.conf:用户配置文件，默认空<br>ports.conf:SSL的端口号<br>conf.d:好像是跟编码有关的配置，不是很清楚<br>mods-available:  可用的模块<br>mods-enabled：已在用的模块<br>sites-available:   存在的虚拟主机(网站)<br>sites-enabled:    已经对外服务的虚拟主机</p>
</blockquote>
<p>查看模块  </p>
<blockquote>
<p>查看可用模块：sudo a2enmod<br>查看已用模块：sudo a2dismod<br>查找要安装的模块名称：apt-cache search xxx</p>
</blockquote>
<p>虚拟主机  </p>
<blockquote>
<p>虚拟主机有两种：基于IP和基于域名<br>虚拟主机(网站)存放位置：一般为 /var/www/ 下<br>虚拟主机的配置文件放在：/etc/apache2/sites-available/   注:对每个虚拟主机单独建配置文件比较好<br>已用的虚拟主机配置文件：/etc/apache2/sites-enable/   通过a2dissite 和a2ensite 来关闭/开启虚拟主机<br>注：用a2ensite和a2dissite后，sites-enable下会自动创建符号链接<br>详见：ubuntus 最佳方案  3-基于端口的多虚拟主机</p>
</blockquote>
<p>虚拟主机配置详解  </p>
<blockquote>
<p>详见：ubuntus 最佳方案  3-apache2 default文件介绍</p>
</blockquote>
<p>HTTPS的实现  </p>
<blockquote>
<p>sudo a2enmod ssl<br>sudo /etc/init.d/apache2 reload<br>sudo apt-get install openssl<br>-————————————-<br>openssl genrsa -des3 -out server.key 1024    #然后输入密码<br>openssl req -new -key server.key -out server.csr    #先输入密码，再输信息<br>openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt<br>sudo cp server.crt /etc/ssl/certs   #公钥<br>sudo cp server.key /etc/ssl/private   #私钥<br>-————————————<br>更改虚拟主机配置<br>添加：<br>SSLEngine on<br>SSLOptions +StrictRequire<br>SSLCertificateFile /etc/ssl/certs/server.crt<br>SSLCertificateKeyFile /etc/ssl/private/server.key  </p>
<p><img src="http://img1.ph.126.net/EWKDYD0fPBHsN0y_3ZXbLA==/2824601391308859841.jpg" alt="ubuntus 最佳方案 -3 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -3 - leaf - ------坚持雅操------"><br>-—————————————–  </p>
<p>sudo /etc/init.d/apache2 restart<br><a href="https://172.16.43.140/">https://172.16.43.140</a>  </p>
<p><img src="http://img2.ph.126.net/vcjije7yiPpC1kYykPBB0w==/110619665864714502.jpg" alt="ubuntus 最佳方案 -3 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -3 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> Apache 性能优化</p>
<blockquote>
<p>详见 ubuntus 最佳方案  3-apache.conf</p>
<p>启用压缩</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo a2enmod deflate</p>
</blockquote>
<blockquote>
<p>sudo /etc/init.d/apache2 force-reload</p>
</blockquote>
<blockquote>
<p>配置文件为：/etc/apache2/mods-enabled/deflate.conf</p>
</blockquote>
<blockquote>
<p>&lt;IfModule mod_deflate.c&gt;</p>
</blockquote>
<blockquote>
<p>          AddOutputFilterByType DEFLATE text/html text/plain text/xml</p>
</blockquote>
<blockquote>
</IfModule>
</blockquote>
</blockquote>
<blockquote>
<p>使用缓存</p>
<p>sudo a2enmod disk_cache           (sudo a2enmod mem_cache)</p>
<p>配置文件/etc/apache2/sites-available/<a href="http://www.a.com/">www.a.com</a></p>
<p>在最后添加：</p>
<p>    &lt;IfModule mod_disk_cache.c&gt;</p>
<p>        CacheEnable disk /               #缓存类型为硬盘   /为网站的根目录，即对整个网站启用缓存</p>
<p>        CacheRoot /var/www/<a href="http://www.a.com/cache">www.a.com/cache</a></p>
<p>        CacheDefaultExpire 7200    #失效周期，7200s</p>
<p>        CacheMaxExpire 604800    #最大失效周期，604800s</p>
<p>    </IfModule></p>
<p>创建cache文件夹</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo mkdir /var/www/<a href="http://www.a.com/cache">www.a.com/cache</a></p>
</blockquote>
<blockquote>
<p>sudo chown www-data:www-data /var/www/<a href="http://www.a.com/cache">www.a.com/cache</a></p>
</blockquote>
<blockquote>
<p>sudo /etc/init.d/apache2 restart</p>
</blockquote>
</blockquote>
<blockquote>
<p>压力测试</p>
</blockquote>
<blockquote>
<blockquote>
<p>ab -n 20000 -c 200 <a href="http://localhost/">http://localhost/</a></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>ab apache benchmarking</p>
</blockquote>
<blockquote>
<p>-n 发送总数</p>
</blockquote>
<blockquote>
<p>-c 一次发送</p>
</blockquote>
<blockquote>
</blockquote>
</blockquote>
<p>Apache安全相关  </p>
<blockquote>
<p>查看http文件头</p>
</blockquote>
<blockquote>
<blockquote>
<p>telnet 172.16.43.140 80 </p>
</blockquote>
<blockquote>
<p>然后输入HEAD / HTTP/1.0 </p>
</blockquote>
<blockquote>
<p>然后可以看到</p>
</blockquote>
</blockquote>
<blockquote>
<p><img src="http://img6.ph.126.net/MA9PPoapzN4loDA5xqZ5_A==/605452674922044526.jpg" alt="ubuntus 最佳方案 -3 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -3 - leaf - ------坚持雅操------"></p>
</blockquote>
<blockquote>
<blockquote>
<p> 更改方法：更改/etc/apache2/apache2.conf 里面的ServerTokens：prod </p>
</blockquote>
</blockquote>
<blockquote>
<p>DDOS防范</p>
</blockquote>
<blockquote>
<blockquote>
<p>略</p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>Apache 日志分析  </p>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntus 最佳方案 3-apache2 default文件介绍</title>
    <url>/posts/3499039072/</url>
    <content><![CDATA[<p>文件位置：/etc/apache2/sites-available/default</p>
<p>文档分2部分：NameVirtualHost 和<VirtualHost></VirtualHost></p>
<p>NameVirtualHost *         指定服务器的网卡，开通线路等<br>&lt;VirtualHost *&gt;               指定虚拟主机的IP地址。<br>        ServerAdmin webmaster@localhost         指定站长EMAIL<br>        <br>        DocumentRoot /var/www/                          指定网站根目录     </p>
<p> 1&gt;更改为网站存放的位置：如/var/www/blog.test.com<br>        <Directory />                                        ？？全部虚拟主机的设置？？<br>                Options FollowSymLinks                     网站根目录的特性，允许使用符号链接<br>                AllowOverride None                            网站根目录的特性，忽略.htaccess文件的作用<br>        </Directory><br>        &lt;Directory /var/www/&gt;                      2&gt;更改为网站存放的位置：如/var/www/blog.test.com<br>                Options Indexes FollowSymLinks MultiViews<br>                AllowOverride None<br>                Order allow,deny          acl设置，符合下一行allow规则的都能访问，不符合allow规则的不能访问</p>
<p>               # Order deny,allow        acl设置，符合下一行deny规则的都不能访问，不符合deny规则的能访问<br>                allow from all                控制哪些主机可以访问，默认所有主机都可以访问<br>        </Directory>  </p>
<p>        ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/<br>        &lt;Directory “/usr/lib/cgi-bin”&gt;<br>                AllowOverride None<br>                Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch<br>                Order allow,deny<br>                Allow from all<br>        </Directory>  </p>
<p>        ErrorLog /var/log/apache2/error.log    3&gt;log存放的文档位置  </p>
<p>        # Possible values include: debug, info, notice, warn, error, crit,<br>        # alert, emerg.<br>        LogLevel warn                                     4&gt;设置log信息的等级  </p>
<p>        CustomLog /var/log/apache2/access.log combined<br>        ServerSignature On  </p>
<p>    Alias /doc/ “/usr/share/doc/“    设置别名，访问/var/www/blog.test.com/doc 其实就是访问/usr/share/doc<br>    &lt;Directory “/usr/share/doc/“&gt;<br>        Options Indexes MultiViews FollowSymLinks<br>        AllowOverride None<br>        Order deny,allow<br>        Deny from all<br>        Allow from 127.0.0.0/255.0.0.0 ::1/128<br>    </Directory>  </p>
</VirtualHost>]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntus 最佳方案 3-基于单IP的多虚拟主机</title>
    <url>/posts/3424829500/</url>
    <content><![CDATA[<p>环境：  </p>
<blockquote>
<p>本机：ubuntu10.04.4<br>vmware：ubuntu8.04.4  </p>
</blockquote>
<p>说明：  </p>
<blockquote>
<p>由于没有建DNS服务器，所以在本机上修改了hosts文件<br>sudo nano /etc/hosts  添加<br>172.16.43.140   <a href="http://www.a.com/">www.a.com</a><br>172.16.43.140   <a href="http://www.b.com/">www.b.com</a>  </p>
</blockquote>
<p>1、建虚拟目录<br>      /var/www/<a href="http://www.a.com/">www.a.com</a><br>      /var/www/<a href="http://www.b.com/">www.b.com</a>  </p>
<p>2、建配置文件<br>     cd /etc/apache2/sites-available<br>     sudo cp default <a href="http://www.a.com/">www.a.com</a><br>     sudo cp default <a href="http://www.b.com/">www.b.com</a>  </p>
<p>3、修改<a href="http://www.a.com/">www.a.com</a> 和 <a href="http://www.b.com/">www.b.com</a> 的配置文件<br>     <a href="http://www.a.com配置如下/">www.a.com配置如下</a>  </p>
<blockquote>
<p>NameVirtualHost 172.16.43.140<br>&lt;VirtualHost 172.16.43.140&gt;<br>        ServerAdmin webmaster@localhost<br>        DocumentRoot /var/www/<a href="http://www.a.com/">www.a.com</a><br>        ServerName <a href="http://www.a.com/">www.a.com</a><br>        <Directory /><br>                Options FollowSymLinks<br>                AllowOverride None<br>        </Directory><br>        &lt;Directory /var/www/<a href="http://www.a.com/&gt;">www.a.com/&gt;</a><br>                Options Indexes FollowSymLinks MultiViews<br>                AllowOverride all<br>                Order allow,deny<br>                allow from all<br>        </Directory>  </p>
</blockquote>
<blockquote>
<p>后面略。。。。  </p>
</blockquote>
<p>       <a href="http://www.b.com配置如下/">www.b.com配置如下</a>  </p>
<blockquote>
<p>#NameVirtualHost *<br>&lt;VirtualHost 172.16.43.140&gt;<br>    ServerAdmin webmaster@localhost<br> DocumentRoot /var/www/<a href="http://www.b.com/">www.b.com</a><br>    ServerName <a href="http://www.b.com/">www.b.com</a><br>    <Directory /><br>        Options FollowSymLinks<br>        AllowOverride None<br>    </Directory><br> &lt;Directory /var/www/<a href="http://www.b.com/&gt;">www.b.com/&gt;</a><br>        Options Indexes FollowSymLinks MultiViews<br>        AllowOverride None<br>        Order allow,deny<br>        allow from all<br>    </Directory>  </p>
</blockquote>
<blockquote>
<p>后面略。。。  </p>
</blockquote>
<p>4、重启apache2<br>      sudo a2dissite default<br>      sudo a2ensite <a href="http://www.a.com/">www.a.com</a><br>      sudo a2ensite <a href="http://www.b.com/">www.b.com</a><br>      sudo /etc/init.d/apache2 restart  </p>
<p>5、访问网站  </p>
<blockquote>
<p><a href="http://www.a.com/">http://www.a.com</a><br><a href="http://www.b.com/">http://www.b.com</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntus 最佳方案  3-基于端口的多虚拟主机</title>
    <url>/posts/2458785665/</url>
    <content><![CDATA[<p>1、建虚拟目录<br>      /var/www/<a href="http://www.a.com/">www.a.com</a><br>      /var/www/<a href="http://www.b.com/">www.b.com</a>  </p>
<p>2、修改/etc/apache2/ports.conf<br>      加入Listen 8080  </p>
<p>3、建配置文件<br>     cd /etc/apache2/sites-available<br>     sudo cp default <a href="http://www.a.com/">www.a.com</a><br>     sudo cp default <a href="http://www.b.com/">www.b.com</a>  </p>
<p>4、修改<a href="http://www.a.com/">www.a.com</a> 和 <a href="http://www.b.com/">www.b.com</a> 的配置文件<br>     <a href="http://www.a.com配置如下/">www.a.com配置如下</a>  </p>
<blockquote>
<p>NameVirtualHost *<br>&lt;VirtualHost *&gt;<br>        ServerAdmin webmaster@localhost<br>        DocumentRoot /var/www/<a href="http://www.a.com/">www.a.com</a><br>        ServerName  <a href="http://www.a.com/">www.a.com</a><br>        <Directory /><br>                Options FollowSymLinks<br>                AllowOverride None<br>        </Directory><br>        &lt;Directory /var/www/<a href="http://www.a.com/&gt;">www.a.com/&gt;</a><br>                Options Indexes FollowSymLinks MultiViews<br>                AllowOverride None<br>                Order allow,deny<br>                allow from all<br>        </Directory>  </p>
</blockquote>
<blockquote>
<p>后面略。。。。  </p>
</blockquote>
<p>       <a href="http://www.b.com配置如下/">www.b.com配置如下</a>  </p>
<blockquote>
<p>&lt;VirtualHost 172.16.43.140:8080&gt;  </p>
</blockquote>
<blockquote>
<p>        ServerAdmin webmaster@localhost<br>       <br>        DocumentRoot /var/www/<a href="http://www.b.com/">www.b.com</a><br>       <br>        ServerName <a href="http://www.b.com/">www.b.com</a>  </p>
<p>        <Directory /><br>                Options FollowSymLinks<br>                AllowOverride None<br>        </Directory><br>        &lt;Directory /var/www/<a href="http://www.b.com/&gt;">www.b.com/&gt;</a><br>                Options Indexes FollowSymLinks MultiViews<br>                AllowOverride None<br>                Order allow,deny<br>                allow from all<br>        </Directory>  </p>
</blockquote>
<blockquote>
<p>后面略。。。  </p>
</blockquote>
<p>5、重启apache2<br>      sudo a2dissite default<br>      sudo a2ensite <a href="http://www.a.com/">www.a.com</a><br>      sudo a2ensite <a href="http://www.b.com/">www.b.com</a><br>      sudo /etc/init.d/apache2 restart  </p>
<p>然后访问<a href="http://www.a.com/">www.a.com</a> 就输入 172.16.43.140<br>       访问<a href="http://www.b.com/">www.b.com</a> 就输入 172.16.43.140:8080  </p>
<p>参考：<br><a href="http://wenku.baidu.com/view/c61a0dd6b9f3f90f76c61b18.html">http://wenku.baidu.com/view/c61a0dd6b9f3f90f76c61b18.html</a><br><a href="http://httpd.apache.org/docs/2.2/vhosts/examples.html">http://httpd.apache.org/docs/2.2/vhosts/examples.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntus 最佳方案 -4 LAMP</title>
    <url>/posts/2177598682/</url>
    <content><![CDATA[<p>1、安装lamp套装  </p>
<blockquote>
<p>sudo apt-get install apache2 libapache2-mod-php5 php5-mysql mysql-server php5-memcache php5-gd<br>说明：<br>php5-gd用于处理图片格式<br>php5-memcache 用于把内存做缓存用  </p>
</blockquote>
<p>2、创建数据库、建用户等  </p>
<blockquote>
<p>nano mydb.sql  </p>
</blockquote>
<blockquote>
<blockquote>
<p>DROP TABLE IF EXISTS `users`;<br>CREATE TABLE `users`(<br>  `uid` int(10) unsigned NOT NULL default ‘0’,<br>  `name` varchar(60) NOT NULL default ‘’,<br>  `pass` varchar(32) NOT NULL default ‘’,<br>  `mail` varchar(64) default ‘’,<br>  PRIMARY KEY (`uid`),<br>  UNIQUE KEY `name` (`name`)<br>);  </p>
<p>INSERT INTO `users` (`uid`, `name`, `pass`, `mail`) VALUES<br>(1, ‘Hiweed’, MD5(‘passwdHiweed’), ‘hiweed@test.com’),<br>(2, ‘Ning’, MD5(‘passwdNing’), ‘ning@test.com’),<br>(3, ‘Guoce’, MD5(‘passwdGuoce’), ‘guoce@test.com’)  </p>
</blockquote>
<p>mysqladmin -uroot -p create mydb<br>mysql mydb -uroot -p &lt; mydb.sql<br>检查导入的数据是否正确<br>mysql mydb -uroot -p 然后输入密码<br>mysql&gt; select * from users;  </p>
<p><img src="http://img1.ph.126.net/_YJiklBfcPvLaHGWFYHlsA==/2493586818696969731.jpg" alt="ubuntus 最佳方案 -4 - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -4 - leaf - ------坚持雅操------"></p>
<p> 建用户并设置权限<br>mysql&gt; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, INDEX, ALTER ON mydb.* TO ‘abc’@’localhost’ IDENTIFIED BY ‘123456’;<br>Query OK, 0 rows affected (0.00 sec)  </p>
<p>mysql&gt; flush privileges;    #刷新使之生效<br>Query OK, 0 rows affected (0.00 sec)  </p>
<p>mysql&gt; exit<br>Bye  </p>
</blockquote>
<p>3、测试PHP  </p>
<blockquote>
<p>echo “<?php phpinfo(); ?>“  | sudo tee /var/www/<a href="http://www.a.com/phpinfo.php">www.a.com/phpinfo.php</a>  </p>
</blockquote>
<blockquote>
<p>装phpmyadmin<br>sudo apt-get install phpmyadmin<br>sudo ln -s /usr/share/phpmyadmin /var/www/<a href="http://www.a.com/phpmyadmin">www.a.com/phpmyadmin</a>  </p>
</blockquote>
<p>4、建站实例drupal  </p>
<blockquote>
<p>1、下载drupal  </p>
<blockquote>
<p><a href="http://drupal.org/node/3060/release?api%5C_version%5C%5B%5C%5D=87">http://drupal.org/node/3060/release?api\_version\[\]=87</a><br>按书上的，我下载的也是6.6版本<br>tar xvf drupal-6.6.tar.gz<br>sudo mv drupal-6.6/{*,.htaccess} /var/www/<a href="http://www.a.com/">www.a.com</a>  </p>
</blockquote>
<p>2、建drupal数据库和用户  </p>
<blockquote>
<p>mysqladmin -uroot -p create drupal6  </p>
</blockquote>
<blockquote>
<p>mysql -uroot -p  </p>
</blockquote>
<blockquote>
<p>mysql&gt; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES ON drupal6.* TO ‘drupaluser’@’localhost’ IDENTIFIED BY ‘123456’;<br>Query OK, 0 rows affected (0.01 sec)  </p>
<p>mysql&gt; FLUSH PRIVILEGES;<br>Query OK, 0 rows affected (0.01 sec)  </p>
<p>mysql&gt; \q<br>Bye  </p>
</blockquote>
<p>3、开启clean url功能  </p>
<blockquote>
<p>sudo nano /etc/apache2/sites-available/<a href="http://www.a.com/">www.a.com</a><br>把&lt;Direectory /var/www/<a href="http://www.a.com/&gt;">www.a.com/&gt;</a> 下面的<br>allowoverride none  改为allowoverride all  </p>
</blockquote>
<p>4、配置drupal  </p>
<blockquote>
<p>第二步 要更改权限<br>sudo chmod o+w /var/www/<a href="http://www.a.com/sites/default">www.a.com/sites/default</a><br>sudo chmod o+w /var/www/<a href="http://www.a.com/sites/default/settings.php">www.a.com/sites/default/settings.php</a><br>第五步 再把权限改回来<br>sudo chmod o-w /var/www/<a href="http://www.a.com/sites/default">www.a.com/sites/default</a><br>sudo chmod o-w /var/www/<a href="http://www.a.com/sites/default/settings.php">www.a.com/sites/default/settings.php</a>  </p>
<p>下载中文模块<br><a href="http://drupal.org/node/265348">http://drupal.org/node/265348</a>  </p>
</blockquote>
</blockquote>
<p>5、建wordpress  </p>
<blockquote>
<p>1、建wordpress数据库和用户  </p>
<blockquote>
<p>mysqladmin -uroot -p create wordpress  </p>
</blockquote>
<blockquote>
<p>mysql -uroot -p  </p>
</blockquote>
<p>mysql&gt; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES ON wordpress.* TO ‘wordpress’@’localhost’ IDENTIFIED BY ‘123456’;<br>Query OK, 0 rows affected (0.01 sec)  </p>
<p>mysql&gt; FLUSH PRIVILEGES;<br>Query OK, 0 rows affected (0.01 sec)  </p>
<p>mysql&gt; \q<br>Bye  </p>
<p>2、改所有者<br>sudo chown -R www-data:www-data /var/www/wordpress  </p>
<p>3、然后下一步下一步即可  </p>
<p>附、更改上传文件的大小限制<br>sudo gedit /etc/php5/apache2/php.ini<br>更改  </p>
<blockquote>
<p>post_max_size=200M<br>file_uploads=On<br>upload_max_filesize=100M  </p>
</blockquote>
<p><img src="http://img2.ph.126.net/b-5dciHZHxuNErJeRiLVHw==/1074952936075702232.jpg" alt="ubuntus 最佳方案 -4 LAMP - leaf - ------坚持雅操------" title="ubuntus 最佳方案 -4 LAMP - leaf - ------坚持雅操------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntus 最佳方案 -8 squidGuard</title>
    <url>/posts/3846105662/</url>
    <content><![CDATA[<p>安装<br>sudo apt-get install squid<br>sudo apt-get install squidguard  </p>
<p>正向代理：<br>反向代理：对外表现为WEB服务器，但是数据不在代理服务器上，从而增加安全性<br>透明代理：代理服务器做网关，从而不用去设置浏览器  </p>
<p>ACL规则、语法等该书没多少介绍，有机会最好专门读一下  </p>
<p>关于squidguard<br>专门的访问控制插件，功能很强大  </p>
<p>建议这一章还是读专门的书比较好</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntus 最佳方案 第一章</title>
    <url>/posts/563734183/</url>
    <content><![CDATA[<p>linux是你废寝忘食的实验，是你在屡次失败的实验中得来的成长。  </p>
<p>学习linux，要多多实验，多多尝试。  </p>
<p>反复研读lfs文档，并能够成功编译两遍以上，这样，对linux的了解会深刻许多<br>(只有能看懂了才能去研读，对里面的基础知识要有一定的了解)  </p>
<p>知之者不如好知者，好之者不如乐之者。<br>(兴趣永远是最重要的，想想玩游戏是多么有兴致)</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntuserver 支持鼠标操作</title>
    <url>/posts/4027130446/</url>
    <content><![CDATA[<p>sudo apt-get install gpm 即可<br>右击表示粘帖</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntuserver10.04 安装LAMP：PHP及配置drupal</title>
    <url>/posts/3835034022/</url>
    <content><![CDATA[<p>1、安装lamp环境<br>     sudo apt-get install apache2 libapache2-mod-php5 php5-mysql mysql-server php5-memcache  </p>
<p>1、配置apache2 及awstats 日志分析文件  </p>
<p>2、配置mysql<br>     1、设置root密码<br>     2、为drupal创建数据库 和用户  </p>
<p>3、配置php<br>      用phpinfo()才测试php是否被apache2支持  </p>
<p>4、安装phpmyadmin，并将phpmyadmin链接到自己的网站目录下  </p>
<p>5、安装及配置drupal<br>      软件下载 <a href="http://drupal.org/download">http://drupal.org/download</a><br>      语言包     <a href="http://localize.drupal.org/">http://localize.drupal.org/</a><br>          将./sites/default 权限设置为 646<br>          复制./sites/default/default.settings.php 到./sites/default/settings.php 并将settings.php 权限设置为646<br>     一步一步设置即可～</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu下wireshark无法找到网卡信息</title>
    <url>/posts/1758743069/</url>
    <content><![CDATA[<p>转载自：<a href="http://ubuntusir.blog.51cto.com/884643/406621">http://ubuntusir.blog.51cto.com/884643/406621</a>  </p>
<p>用sudo wireshark 开起来即可</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu使用gns3里面的云</title>
    <url>/posts/2281735761/</url>
    <content><![CDATA[<p><img src="http://img3.ph.126.net/i9rtzE1JV_dBxKRttmg4KA==/2724677774576652283.jpg" alt="ubuntu使用gns3里面的云 - leaf - ------坚持雅操------" title="ubuntu使用gns3里面的云 - leaf - ------坚持雅操------"></p>
<p> <br>说明：只对vmet8 进行说明<br>环境：  </p>
<blockquote>
<p>vmet8 ：172.16.43.0网段  </p>
</blockquote>
<blockquote>
<p>vmware虚拟机IP：172.16.43.141  </p>
</blockquote>
<blockquote>
<p>R3 IP：                  172.16.43.150  </p>
</blockquote>
<p>注：linux需要用 sudo gns3 来启动  </p>
<p>1、云设置:  </p>
<blockquote>
<p>双击云，然后添加vmet8 即可  </p>
<p><img src="http://img6.ph.126.net/9P-rRwHWyfXioyqu2NWeeg==/3095098843927878076.jpg" alt="ubuntu使用gns3里面的云 - leaf - ------坚持雅操------" title="ubuntu使用gns3里面的云 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>2、添加R3，连接云和R3，开启云和R3  </p>
<p>3、设置R3 IP地址，开启f1/0端口  </p>
<p>4、能相互ping通～～  </p>
<blockquote>
<p><img src="http://img0.ph.126.net/ekc1qTjFfcN9oJd6Ws5r6g==/3093972944021031640.jpg" alt="ubuntu使用gns3里面的云 - leaf - ------坚持雅操------" title="ubuntu使用gns3里面的云 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/YdHqigKX3OIgmqdo99ep4A==/109493765957949262.jpg" alt="ubuntu使用gns3里面的云 - leaf - ------坚持雅操------" title="ubuntu使用gns3里面的云 - leaf - ------坚持雅操------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu相关收藏</title>
    <url>/posts/2863864731/</url>
    <content><![CDATA[<p>ubuntu9.10 桌面培训     <a href="http://people.ubuntu.com/~happyaron/udc-cn/">http://people.ubuntu.com/~happyaron/udc-cn/</a>  </p>
<p>linux 加入到windows域中 <a href="http://rainbird.blog.51cto.com/211214/197509">http://rainbird.blog.51cto.com/211214/197509</a>            (可惜是centos下的)  </p>
<p>TortoiseSVN  <a href="http://tortoisesvn.net/docs/nightly/TortoiseSVN/_zh/_CN/tsvn-preface.html#tsvn-preface-about">http://tortoisesvn.net/docs/nightly/TortoiseSVN\_zh\_CN/tsvn-preface.html#tsvn-preface-about</a>  </p>
<p>RFC文档目录 <a href="http://oss.org.cn/man/develop/rfc/default.htm">http://oss.org.cn/man/develop/rfc/default.htm</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>unetlab</title>
    <url>/posts/987425272/</url>
    <content><![CDATA[<p>网络实验神器<br>下载地址<br><a href="https://cloud.mail.ru/public/MxRX/QJBWXcEuX">https://cloud.mail.ru/public/MxRX/QJBWXcEuX</a><br>我的是Version 0.9.0-54  </p>
<p>网页的账号admin 密码是 unl<br>终端的账号root     密码是 unl</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>USB量产操作</title>
    <url>/posts/2647626534/</url>
    <content><![CDATA[<p>以下全部按照 <a href="http://bbs.mydigit.cn/">数码之家</a> 里介绍的进行操作</p>
<p>买了一款 pny-m1-8G的U盘，准备做光驱用，这样就不用买光驱了</p>
<p>方法有2种：1、UltraISO      2、对USB进行底层设置</p>
<p>-——————————————————————————————————————–</p>
<p>我买的pny m1 详细信息：</p>
<p>芯片是：SMI SM3255AB 的</p>
<p><img src="http://img.ph.126.net/YJlXLQdXDVuMgJ5Vb_-P3Q==/2742973648062255091.jpg" alt="USB量产 - leaf - ------坚持雅操------" title="USB量产 - leaf - ------坚持雅操------"></p>
<p>用量产工具检测出flash型号，并用闪存精灵检查出闪存的参数如下：</p>
<p><img src="http://img.ph.126.net/Ogwg3oMmUVw5fryb5Y7bhA==/2490772068929505785.jpg" alt="USB量产 - leaf - ------坚持雅操------" title="USB量产 - leaf - ------坚持雅操------"></p>
<p>-——————————————————————————————————————–</p>
<p>软件：</p>
<p>MyDiskTest V2.93｜U盘扩容检测/速度测试工具 <a href="http://dl.mydigit.net/2010/09/mydisktest.html">http://dl.mydigit.net/2010/09/mydisktest.html</a></p>
<p>ChipGenius芯片精灵V3.01｜USB主控芯片检测工具 ：<a href="http://www.mydigit.cn/chipgenius.htm">http://www.mydigit.cn/chipgenius.htm</a> </p>
<p>SMI3255AB最新量产工具SM32x_K0530_SM3255AB_(v2.03.42  )</p>
<p><a href="http://bbs.mydigit.cn/read.php?tid=290932">http://bbs.mydigit.cn/read.php?tid=290932</a></p>
<p>FlashGenius V3.5｜闪存精灵/FLASH参数查询 <a href="http://dl.mydigit.net/2010/09/FlashGenius.html">http://dl.mydigit.net/2010/09/FlashGenius.html</a></p>
<p>-———————————————————————————————————————-</p>
<p>量产操作：</p>
<p>1、第一次量产操作</p>
<p>按照这个一步一步操作即可</p>
<p> <a href="http://bbs.mydigit.cn/read.php?tid=211490">慧荣SM321~SM3257 量产CDROM成功 全文图解</a></p>
<p><a href="http://bbs.mydigit.cn/read.php?tid=46874">一看就会，smi32x量产详细图示教程(已添加说明文字）</a></p>
<p>做好后我看跳出来说要格式化，然后就格式化了，格了之后才知道错了。。。把光驱格成空了。(本来直接拔出来，再插即可)</p>
<p>2、然后工程调试，把权限分出去的盘清除掉</p>
<p>参考 <a href="http://bbs.mydigit.cn/read.php?tid=107138">预防及解决“SMI方案量产CDROM后，再次量产引起无法识别出盘符问题”</a></p>
<p>点-tools-multiple erase all 清除</p>
<p>清除后拔出内存再插虽然能显示USB，却显示0M空间，我郁闷了。。。。</p>
<p>而且setting也不能操作</p>
<p>3、重做量产操作，然后直接拔掉U盘，再插上，搞定</p>
<p>这时，setting可以重新设置，跟第一步是一样的，做好后就是你想要的U盘了</p>
<p><img src="http://img.ph.126.net/Oj36vbdG1tsPwPUN9FdXZg==/3098758018624523789.jpg" alt="USB量产操作 - leaf - ------坚持雅操------" title="USB量产操作 - leaf - ------坚持雅操------"></p>
<p>其他：<a href="http://bbs.mydigit.cn/read.php?tid=117966">SMI方案U盘不识别盘后安装工厂驱动详细步骤</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>U盘安装ESXI 6</title>
    <url>/posts/810652655/</url>
    <content><![CDATA[<p>一、U盘制作  </p>
<p><img src="http://img1.ph.126.net/t65RyWO6ecLjVKGHsfbZxQ==/1062005087147784037.png" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/-gQ0Z0RK-Q7DWur_SKvKrw==/2783224569733136829.png" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/Q8CW_LtAz6wtPcPRWH-CmA==/6598214358320531577.png" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p>二、esxi6 安装 </p>
<p><img src="http://img2.ph.126.net/ddygF-_U_qPjUNWDxETegQ==/6619108377724573034.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/jdsZ6ahSLfabubfdWmyqnQ==/6619318384445479417.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/_kA6CX7vYcVtadQTi9S0YQ==/1059753287334112724.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/omjb7SvE5irl3imeqZBauA==/6608434318841873984.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/53AQFL8vfEcSvJ71dyK8ng==/6598198965157742920.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/XNj5WEm3EvRLjyFE0V8nkA==/6631233791959448065.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/QMHcPS6dALW3qBBfhw7uoQ==/2441513948006886049.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/RjgY5PoABqNiCoQ-xb0tyg==/6631361335308268702.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/QEUs_UDcbNDTBAZaYx1qGw==/6598240746599598519.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/to_hcCJXii_EvA-SAVkcww==/6630810479980925665.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/A_RATbLRWPlQAUP2rI0V2A==/6598169278343793459.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/gTE4yGTBU-BGBpDql6E2KA==/665125369985446191.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/lbNn4gJoU2KKeQedlJlgxg==/6598213258808903859.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/wh8uA8-WcQ-gzXV8mcE2kQ==/6619288697631528827.jpg" alt="U盘安装ESXI 6 - leaf - ------勤解万难------" title="U盘安装ESXI 6 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>win10 ISCSI 双向CHAP认证</title>
    <url>/posts/1821313599/</url>
    <content><![CDATA[<p>iscsi发现程序在控制面板-管理工具里面可以找到</p>
<p>1、群晖iscsi设置</p>
<p><img src="http://img2.ph.126.net/44I5GPifecLl602GRKBgQA==/4914834568445127989.png" alt="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------" title="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------"></p>
<p> 2、win10设置</p>
<blockquote>
<p>在配置里设置名称和chap密码，chap密码必须是12个字的</p>
</blockquote>
<p><img src="http://img0.ph.126.net/DjbwrgYPr4NlrlSNo2yG6A==/6631422907960572528.png" alt="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------" title="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------"></p>
<p> </p>
<p>3、连接设置</p>
<blockquote>
<p>点发现，点连接，然后设置名称和密码，还有勾选相互身份认证</p>
</blockquote>
<p><img src="http://img1.ph.126.net/ANyONITAzBWEht8wvvb6_Q==/6598278129996094156.png" alt="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------" title="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------"></p>
<p> 4、搞定</p>
<p><img src="http://img0.ph.126.net/6lRvLSLycE0_dQcoIPSBeg==/6631231592937321393.png" alt="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------" title="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/i4joLFSBlhUqzkQP6KH6Fw==/6631318454355939167.png" alt="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------" title="win10 ISCSI 双向CHAP认证 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>win2008 R2 四网口绑定</title>
    <url>/posts/500960709/</url>
    <content><![CDATA[<p>参考</p>
<p><a href="http://support.icafe8.com/technologynews/focus/1943.html">http://support.icafe8.com/technologynews/focus/1943.html</a></p>
<p><a href="https://www.broadcom.cn/support/download-search?dk=bacs">https://www.broadcom.cn/support/download-search?dk=bacs</a></p>
<p>我的是BCM5709C</p>
<p>下载软件</p>
<p><img src="http://img1.ph.126.net/qFZyY_Z-aYu-sj7c7zrcxA==/6631874807234833246.png" alt="win2008 R2 四网口绑定 - leaf - ------勤解万难------" title="win2008 R2 四网口绑定 - leaf - ------勤解万难------"></p>
<p><img src="http://img2.ph.126.net/4wjPUf4OWYK0iccF1IcD9g==/6632018843258289422.png" alt="win2008 R2 四网口绑定 - leaf - ------勤解万难------" title="win2008 R2 四网口绑定 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>win2012 安装用友U8</title>
    <url>/posts/3877819662/</url>
    <content><![CDATA[<p>0、安装IIS6，要全部勾选安装</p>
<p>1、安装sql server 2005 (用友是这么要求的)</p>
<p>2、安装用友U8</p>
<blockquote>
<p>安装没啥问题</p>
<p>初始化数据库出了点问题</p>
</blockquote>
<blockquote>
<blockquote>
<p>初始化存储过程出错，Microsoft OLE DB Provider for SQL Server  禁用执行 .NET Framework 代码。 设置 “clr enabled” 配置选项，然后重新启动</p>
<p>打开 sql server management studio ，点新建查询，粘贴如下代码，</p>
<p>exec sp_configure ‘show advanced options’, ‘1’;<br>go<br>reconfigure;<br>go<br>exec sp_configure ‘clr enabled’, ‘1’<br>go<br>reconfigure;<br>exec sp_configure ‘show advanced options’, ‘1’;<br>go</p>
<p>然后重启即可解决。</p>
</blockquote>
<p>连接不上问题</p>
</blockquote>
<blockquote>
<blockquote>
<p>1、防火墙放行或者关闭</p>
<p>2、hosts文件里面添加对应关系</p>
<p>3、设置sql server configuration manage 里面的 sql server 2005 网络配置里面的named pipes 和tcp/ip 两个都要启动</p>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/boOR48pV5iJGt15v2FBsbw==/6598159382740314310.png" alt="win2012 安装用友U8 - leaf - ------勤解万难------" title="win2012 安装用友U8 - leaf - ------勤解万难------"></p>
</blockquote>
<p>日期格式问题</p>
</blockquote>
<blockquote>
<blockquote>
<p>这次主要是版本装错的问题，，，，</p>
</blockquote>
<blockquote>
<p>日期更改就是将短日期改为 yyyy-M-d 即可。</p>
</blockquote>
</blockquote>
<p>3、添加ISCSI盘</p>
<blockquote>
<p>由于管理员设置的策略，该磁盘处于脱机状态</p>
<p>运行：cmd  </p>
<p>输入：DISKPART  </p>
<p>DISKPART&gt; san  </p>
<p>DISKPART&gt; san policy=onlineall  </p>
<p>DISKPART&gt;list disk  </p>
<p>DISKPART&gt; select disk 1  </p>
<p>DISKPART&gt;attributes disk clear readonly  </p>
<p>DISKPART&gt;online disk</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>win2012域控分发exe文件</title>
    <url>/posts/2464779298/</url>
    <content><![CDATA[<p>exe文件分发基本上就三种方式</p>
<p>1、用SCCM,LANDESK，ManageEngine Desktop Central等去更新部署</p>
<p>2、发布msi文件，或者用advanced installed 制作msi文件。（zap发布exe程序好像不能用了）</p>
<p>3、批处理命令配合au3等软件做安装脚本去部署软件</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>win2012无法安装.net3.5</title>
    <url>/posts/3763007372/</url>
    <content><![CDATA[<p><a href="https://www.baidu.com/s?ie=UTF-8&amp;wd=win2012%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85.net3.5">https://www.baidu.com/s?ie=UTF-8&amp;wd=win2012%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85.net3.5</a></p>
<p>1、挂载安装盘</p>
<p>2、安装的时候选指定备用源路径</p>
<p>3、选择安装盘路径 如E:\Sources\SxS</p>
<p>安装完毕</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>windows控制面板的用户帐号图标找不到了</title>
    <url>/posts/2992577269/</url>
    <content><![CDATA[<p>运行 里面 输入 control userpasswords2</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>winxp下安装字体</title>
    <url>/posts/2200098253/</url>
    <content><![CDATA[<p>系统原先是win7，后来装了winxp。<br>重装之前把win7的字体全部复制出来了 ，然后装好后进winpe把字体复制回去了，<br>结果复制进去的字体一个多找不到  </p>
<p>解决方法：<br><a href="http://wenku.baidu.com/view/9772b5c18bd63186bcebbcb9.html">http://wenku.baidu.com/view/9772b5c18bd63186bcebbcb9.html</a>  </p>
<p>1、cmd下输入 attrib +s +c c:\windows\fonts  </p>
<p>2、c:\windows\fonts\desktop.ini下写入<br>[.ShellClassInfo]<br>UICLSID ={BD84B380 -8CA2 -1069 -ABID -08000948F534}  </p>
<p>里面的第三种是文件被病毒破坏<br>c:\windows\system32\fontext.dll</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>XP链接win10打印机</title>
    <url>/posts/2897485980/</url>
    <content><![CDATA[<p>xp连win10打印机会出现这种提示</p>
<blockquote>
<p>提供的凭证不足，无法访问这台打印机。要指定新的凭证吗？</p>
<p><img src="http://img0.ph.126.net/7qq6IcQ3RcmUB1JxjvqlQA==/4881057571240450947.jpg" alt="XP链接win10打印机 - leaf - ------勤解万难------" title="XP链接win10打印机 - leaf - ------勤解万难------"></p>
</blockquote>
<p> </p>
<p>0、下载对应型号的打印机驱动</p>
<p>1、本地添加打印机</p>
<blockquote>
<p>新建打印机，默认下去，然后选打印机，装好打印机</p>
</blockquote>
<p>2、复制网络打印机地址</p>
<blockquote>
<p><img src="http://img0.ph.126.net/sE1nK4TraiyF_rB0vOBEvw==/6598195666625001612.jpg" alt="XP链接win10打印机 - leaf - ------勤解万难------" title="XP链接win10打印机 - leaf - ------勤解万难------"></p>
<p>点浏览打印机</p>
<p><img src="http://img1.ph.126.net/2Wo_Yw0qetU230WNlS2pcw==/2876111312130663454.jpg" alt="XP链接win10打印机 - leaf - ------勤解万难------" title="XP链接win10打印机 - leaf - ------勤解万难------"></p>
<p> 复制打印机地址 \\wl 这行</p>
</blockquote>
<blockquote>
<p> <img src="http://img0.ph.126.net/UJVv6leCkRBc_wV7mGwwHQ==/6598267134880808994.jpg" alt="XP链接win10打印机 - leaf - ------勤解万难------" title="XP链接win10打印机 - leaf - ------勤解万难------"></p>
</blockquote>
<p>3、设置打印机</p>
<blockquote>
<p>右击打印机-选属性-选端口-选添加端口-选local port -选新端口，粘贴刚才复制的地址即可。</p>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/Tn447VE7CroeP7JLTArWvQ==/4813785051806249402.jpg" alt="XP链接win10打印机 - leaf - ------勤解万难------" title="XP链接win10打印机 - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>4、显示效果</p>
<blockquote>
<p><img src="http://img1.ph.126.net/TPHlgqpBHPjR16FdWS_2EQ==/6598209960276167119.jpg" alt="XP链接win10打印机 - leaf - ------勤解万难------" title="XP链接win10打印机 - leaf - ------勤解万难------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>【引用】佳能IP1180连供改装图（原创）</title>
    <url>/posts/604432014/</url>
    <content><![CDATA[<p>        买了个IP1180的打印机用了一年多，每次缺墨灌墨水都搞一手墨，有时还要清洗好长时间才能正常用。后去电脑城问加一个联供多少钱，多则4<del>500元，少则3</del>400百元(一般另带墨盒的)。无意中在淘宝网看到一款，加邮费75元，稍加咨询就淘了一个回来；<img src="http://img685.ph.126.net/bmkeIQ-RvuPiqyJl7Yj8YA==/46161896181822175.jpg" alt="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客" title="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客"></p>
<p>        拿到产品就按图纸和卖家提供的安装视频进行钻孔、走线路，很快便大功告成了；但调试打印时才傻了眼，一启动打印小车靠右就“咔”一下，红灯就亮，出错了。我反复试验，又把软管切了重装，还是不行，在网上搜索又换一种管路走法，还是不行。我开始有点着急了。</p>
<p>       晚上，我又在网上查能够参考的信息，看到一个网友发表的图文并茂的“将连供进行到底！佳能IP1180连供超强走线图”，才受到启发，原来这款机反连供方面够强，只能明天对它进行手术了。</p>
<p>      第二天星期六，我开始想怎样对它进行手术，认为左边的管路走得比较顺，不用解剖，问题出在右边；我用电烙铁和美工刀将右边容易挡管的一块塑料挖掉，装上，哎，可以正常打印了！可我试了有三四张纸的时候，红灯还是亮，又出错了；我观察发现软管还是有点碰右边，再切狠一点（图中蓝色标注部位），试打十多张，OK了！</p>
<p>    心里美滋滋的！</p>
<p><img src="http://img20.ph.126.net/vnBA1Wkqr-6MrZLuz1Xphw==/3165749063066947588.jpg" alt="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客" title="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客"></p>
<p><img src="http://img381.ph.126.net/JBYxgso5RS2oXl3H0va_gw==/2387189277484252964.jpg" alt="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客" title="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客"></p>
<p><img src="http://img.ph.126.net/R_62zDW8JmTlglvLsdBB_g==/3330130449464705661.jpg" alt="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客" title="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客"></p>
<p> </p>
<p><img src="http://img839.ph.126.net/59-POL_qLlE6FMuHWl1cAA==/1796373301369373782.jpg" alt="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客" title="佳能IP1180连供改装图（原创） - 豆老D - 清水绿林　博客"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】issh 连 IPAD</title>
    <url>/posts/3755962332/</url>
    <content><![CDATA[<p>设置端口：22的话会提示 operation not permitted</p>
<p>0、ipad 用cydia安装openssh，nano</p>
<p>1、ipad，电脑要同一网段</p>
<p>2、电脑用ssh连接ipad （默认密码alpine）</p>
<ol start="3">
<li>備份兩個設定檔 (/etc/service, /Library/LaunchDaemons/com.openssh.sshd.plist)</li>
</ol>
<p>        cp /etc/service ~/</p>
<p>        cp /Library/LaunchDaemons/com.openssh.sshd.plist ~/</p>
<ol start="4">
<li>更改設定檔</li>
</ol>
<p>     說明：把內鍵 ssh port 從 22 改到 50000 (假設)，其實 50000以上的port都可以</p>
<p>   a)     echo ‘pttssh 50000/tcp #Secure sshd port’ &gt;&gt; /etc/services</p>
<p>   b)     用喜好的軟體(vim, nano)編輯</p>
<p>          nano /Library/LaunchDaemons/com.openssh.sshd.plist</p>
<p>          尋找 <string>ssh</string></p>
<p>          會有兩個位置 (Sockets/Listeners/Bonjour, SockServiceName)（ipad只有Sock一处）</p>
<p>          改為 <string>pttssh</string></p>
<ol start="5">
<li>儲存後 reboot</li>
</ol>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】kvm p2v 操作说明</title>
    <url>/posts/1107034260/</url>
    <content><![CDATA[<p>转载自：<br><a href="http://xiaoli110.blog.51cto.com/1724/1552723">http://xiaoli110.blog.51cto.com/1724/1552723</a>  </p>
<p>说明：  </p>
<blockquote>
<p>先转换成IDE硬盘方式，恢复完后再通过添加virtio硬盘将驱动转换掉，  </p>
</blockquote>
<blockquote>
<p>这样不容易蓝屏。  </p>
</blockquote>
<p>1、操作前的准备工作很重要  </p>
<blockquote>
<p>清空垃圾站；<br>删除不需要的软件；<br>清空各种缓存文件，尤其是浏览器的  </p>
</blockquote>
<p>2、转换成IDE硬盘格式操作  </p>
<blockquote>
<p>导入注册表  </p>
</blockquote>
<blockquote>
<p>Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\primary_ide_channel]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”atapi”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\secondary_ide_channel]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”atapi”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*pnp0600]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”atapi”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*azt0502]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”atapi”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\gendisk]“ClassGUID”=”{4D36E967-E325-11CE-BFC1-08002BE10318}””Service”=”disk”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#cc_0101]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_0e11&amp;dev_ae33]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1039&amp;dev_0601]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1039&amp;dev_5513]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1042&amp;dev_1000]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_105a&amp;dev_4d33]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1095&amp;dev_0640]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1095&amp;dev_0646]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1095&amp;dev_0646&amp;REV_05]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1095&amp;dev_0646&amp;REV_07]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1095&amp;dev_0648]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1095&amp;dev_0649]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1097&amp;dev_0038]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_10ad&amp;dev_0001]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_10ad&amp;dev_0150]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_10b9&amp;dev_5215]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_10b9&amp;dev_5219]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_10b9&amp;dev_5229]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”pciide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_1106&amp;dev_0571]“Service”=”pciide””ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_8086&amp;dev_1222]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”intelide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_8086&amp;dev_1230]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”intelide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_8086&amp;dev_2411]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”intelide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_8086&amp;dev_2421]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”intelide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_8086&amp;dev_7010]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”intelide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_8086&amp;dev_7111]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”intelide”[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\pci#ven_8086&amp;dev_7199]“ClassGUID”=”{4D36E96A-E325-11CE-BFC1-08002BE10318}””Service”=”intelide”;Add driver for Atapi (requires Atapi.sys in Drivers directory)[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\atapi]“ErrorControl”=dword:00000001”Group”=”SCSI miniport””Start”=dword:00000000”Tag”=dword:00000019”Type”=dword:00000001”DisplayName”=”Standard IDE/ESDI Hard Disk Controller””ImagePath”=hex(2):53,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,44,00,\   52,00,49,00,56,00,45,00,52,00,53,00,5c,00,61,00,74,00,61,00,70,00,69,00,2e,\   00,73,00,79,00,73,00,00,00;Add driver for intelide (requires intelide.sys in drivers directory)[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\IntelIde]“ErrorControl”=dword:00000001”Group”=”System Bus Extender””Start”=dword:00000000”Tag”=dword:00000004”Type”=dword:00000001”ImagePath”=hex(2):53,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,44,00,\   52,00,49,00,56,00,45,00,52,00,53,00,5c,00,69,00,6e,00,74,00,65,00,6c,00,69,\   00,64,00,65,00,2e,00,73,00,79,00,73,00,00,00;Add driver for Pciide (requires Pciide.sys and Pciidex.sys in Drivers directory)[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PCIIde]“ErrorControl”=dword:00000001”Group”=”System Bus Extender””Start”=dword:00000000”Tag”=dword:00000003”Type”=dword:00000001”ImagePath”=hex(2):53,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,44,00,\   52,00,49,00,56,00,45,00,52,00,53,00,5c,00,70,00,63,00,69,00,69,00,64,00,65,\   00,2e,00,73,00,79,00,73,00,00,00  </p>
<p>下载驱动到windows\system32\driver目录下<br>用ghost备份  </p>
</blockquote>
<p>3、还原  </p>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】win2012安装sql server 2005</title>
    <url>/posts/946913595/</url>
    <content><![CDATA[<p><a href="http://wenku.baidu.com/link?url=vKN0NLKyKOFX9R-di%5C_Co%5C_ilHg1VOP7siN731YSQ0WR0Vp7lWIrx3cbaqUS05MtAhG6jTC-RcVicNldy4wTgxJL2NxhLpP01FXqUBVh4nici">http://wenku.baidu.com/link?url=vKN0NLKyKOFX9R-di\_Co\_ilHg1VOP7siN731YSQ0WR0Vp7lWIrx3cbaqUS05MtAhG6jTC-RcVicNldy4wTgxJL2NxhLpP01FXqUBVh4nici</a></p>
<p><a href="http://tech.powereasy.net/Item.aspx?id=3681">http://tech.powereasy.net/Item.aspx?id=3681</a></p>
<p>0、先安装.net framework 3.0 和IIS6全部勾选安装</p>
<p>1、正常安装任一版本的SQL Server 2005.</p>
<p>2、安装到SqlServer服务的时候提示启动服务失败，这里就是关键啦，</p>
<p>下载本文的两个附件,里面是SP4（2005.90.5000.0）版本的sqlservr.exe和sqlos.dll。</p>
<p>32位下载sqlservr32.rar，64位下载sqlservr64.rar。</p>
<p>sqlservr32</p>
<p>sqlservr64</p>
<p>3、你的&lt;SQL Server 2005安装路径&gt;\binn，先备份下sqlservr.exe，</p>
<p>然后把解压之后对应的 sqlservr.exe和sqlos.dll复制到里面覆盖原文件，</p>
<p>例如“C:\Program Files\Microsoft SQL Server\MSSQL.1\MSSQL\Binn”。</p>
<p>4、点击“重试”，安装继续，安装程序安装成功。</p>
<p>5、安装完成之后，停止SQL Server服务，把备份的sqlservr.exe文件还原回去</p>
<p>（否则SP4安装程序以为你已经应用过SP4补丁），然后立即打上SP4补丁。</p>
<p>（在此之前不要运行SQL任何软件）</p>
<p>6、安装完SP4补丁，SQL Server运行正常，教程完成。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】笔记本变身无线AP共享攻略</title>
    <url>/posts/378322779/</url>
    <content><![CDATA[<p><img src="http://img242.ph.126.net/tW1P7idSHA0Pr4ZPuLWfnA==/2131328523654614126.jpg" alt="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------" title="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------"></p>
<p><img src="http://img612.ph.126.net/4T7DKTzPXDxCkzcPKgy-Iw==/1975109911580428973.jpg" alt="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------" title="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img612.ph.126.net/v0fsxal8ZVCE8o4ANb_Mig==/1975109911580428982.jpg" alt="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------" title="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img541.ph.126.net/bz7GN9eyh8F6YxjMybFKAA==/2600828784807681801.jpg" alt="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------" title="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img541.ph.126.net/8vjeuDXjLfKBzFjoAD6KlQ==/2600828784807681809.jpg" alt="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------" title="【转载】笔记本变身无线AP共享攻略 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>一、存储技术类型</title>
    <url>/posts/1619304690/</url>
    <content><![CDATA[<p><img src="http://img1.ph.126.net/FVNcjOaeEkm5Tfd8c9yY6Q==/6631317354843348292.png" alt="一、存储技术类型 - leaf - ------勤解万难------" title="一、存储技术类型 - leaf - ------勤解万难------"></p>
<p> </p>
<p>内置硬盘：</p>
<blockquote>
<p>在服务器内部。通过sata线直接连电脑主板上</p>
</blockquote>
<p>DAS：</p>
<blockquote>
<p>专门的存储设备，可以看成是移动硬盘。(不过应该没人愿意移动它)</p>
<p>通过光纤(FC)、SCSI线等接连在服务器上。当硬盘用。</p>
<p><img src="http://img1.ph.126.net/V-rrB0efP9ZWU3wwJBnmDA==/6631395420168925453.png" alt="一、存储技术类型 - leaf - ------勤解万难------" title="一、存储技术类型 - leaf - ------勤解万难------"> </p>
</blockquote>
<p>NAS：</p>
<blockquote>
<p>通过网络提供文件的共享服务。</p>
<p>可看做一个文件夹。用来共享资料。</p>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/XYg_47DxYENLvLY23jbf9g==/6598240746599787331.png" alt="一、存储技术类型 - leaf - ------勤解万难------" title="一、存储技术类型 - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>SAN：</p>
<blockquote>
<p>提供块级存储。可看做一块新硬盘。可以进行分区格式化。</p>
</blockquote>
<blockquote>
<p>FC-SAN：通过光纤提供储存空间</p>
<p>IP-SAN：通过以太网提供存储空间</p>
<p><img src="http://img0.ph.126.net/y9ViEjyEfe9-4H0IC3OAew==/6598236348553276290.png" alt="一、存储技术类型 - leaf - ------勤解万难------" title="一、存储技术类型 - leaf - ------勤解万难------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>一张网卡上设置多个IP</title>
    <url>/posts/1574750591/</url>
    <content><![CDATA[<p><a href="http://tech.sina.com.cn/s/2005-08-29/0917705474.shtml">http://tech.sina.com.cn/s/2005-08-29/0917705474.shtml</a>  </p>
<p> 每台电脑网卡只有一块，如何才能让它们既能上ADSL，又能访问校园网呢?在查阅了相关网络方面的资料之后，我们终于找到了一个解决办法，那就是采用软路由的方式来解决。因为我们都是使用的WinXP<a href="http://www.iask.com/n?k=%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="操作系统">操作系统</a>，在Win2000以上的操作系统就自带了软路由route命令，其具体操作如下:</p>
<p> 1、打开本地连接属性里的Internet协议(TCP/IP)属性，选择[备用配置]的选项页，点选[用户配置]并填写上校园网所分配的IP地址，子网掩码和默认网关，并确认。</p>
<p><img src="http://img161.ph.126.net/JW4GF6nMA9jLPjYIQ-BNeA==/1439181555922966914.jpg" alt="一张网卡上设置多个IP - leaf - ------坚持雅操------" title="一张网卡上设置多个IP - leaf - ------坚持雅操------"></p>
<p> </p>
<p> 2、运行cmd，命令提示符下输入“route – p add 174.0.0.0 mask 255.255.253.0 174.14.40.1 metric 2”，然后回车。</p>
<p> 在通过以上的设置，我们对四台机器的网卡都设置了双IP，从此四台都可以高枕无忧地独立访问校园网和因特网了。</p>
<p>20120924补充</p>
<blockquote>
<p>linux下添加多IP方法</p>
<p>ifconfig eth0:0 192.168.5.5 (跟网络设备上添加子接口的方法差不多)</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>不想把自己的价值定格在2、3Q块钱</title>
    <url>/posts/4033557255/</url>
    <content><![CDATA[<p>不想把自己的价值定格在2、3Q块钱</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>中控：设置实现机器考勤拍照照片能够实时下载</title>
    <url>/posts/414680952/</url>
    <content><![CDATA[<p>&lt; page margin cm p margin-bottom cm –&gt; –&lt;</p>
<p>转载自：中控</p>
<p>条件一：机器带拍照并且是2010年10月份左右出厂的机器</p>
<p>目前机器型号有</p>
<p>1．3.5寸机器，目前只有iclock660、680、M880</p>
<p>2．8寸屏机器目前有iclock2500、2800</p>
<p>条件二：客户在使用过程中使用的是TCP/IP的通讯方式</p>
<p>在机器满足条件以后我们如何设置机器和软件呢？</p>
<p>系统设置—界面设置-—拍照并保存</p>
<p><strong>第一步：设置机器</strong></p>
<ol>
<li><p>进到机器的通讯设置，3.5寸屏幕的机器在通讯设置里增加一项为web setup,移动左右键选择web setup进入后可以见到以下界面：</p>
<p><img src="http://img8.ph.126.net/LMIRGAiDH4eBb8K8cJg_DQ==/579275502087899378.jpg" alt="中控：设置实现机器考勤拍照照片能够实时下载 - leaf - ------坚持雅操------" title="中控：设置实现机器考勤拍照照片能够实时下载 - leaf - ------坚持雅操------"></p>
<p> </p>
</li>
<li><p>在webserver中输入IP地址，此IP地址为你所安装考勤软件的电脑的IP地址。例如我软件安装所在电脑的IP地址为：192.168.10.12,那么上面IP就应该填成这个。</p>
</li>
</ol>
<p>端口号为机器和软件通讯所有，一般选用80端口</p>
<p>注意：一般公司的内部网络不需要设置EnableProcxyServer (代理服务器)直接选择关闭就可以了</p>
<p>&lt; page margin cm p margin-bottom cm –&gt; –&lt;</p>
<p><strong>第二步：设置软件</strong></p>
<ol>
<li>进入08版考勤管理程序，选择“维护/设置”-—–“系统设置”-—-“Http数据传输”可以见到以下界面：</li>
</ol>
<p><img src="http://img1.ph.126.net/27JvQW-M7Yv_AOspFMWP-w==/632755747662919771.jpg" alt="中控：设置实现机器考勤拍照照片能够实时下载 - leaf - ------坚持雅操------" title="中控：设置实现机器考勤拍照照片能够实时下载 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>先勾选“支持Http记录传输功能” 端口里输入我们在考勤机内输入的端口号，机器和软件的端口一致。</p>
<ol start="2">
<li>点击确认，就完成了软件的设置了。</li>
</ol>
<p><strong>第三步：其他设置</strong></p>
<p>重启考勤机，即可实时上传  </p>
<p>&lt; page margin cm p margin-bottom cm –&gt; –&lt;</p>
<p>注意：1、此机器只能在软件开启后时时上传照片。其他例如：考勤记录，人员信息需要手动去下载，和普通机器操作一样。</p>
<p>2．如果是带拍照功能的机器，增加了BS功能的话。那么如果想实现考勤拍照照片的时时上传，目前只能使用ZKTIME8.0。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>买了台mini电脑</title>
    <url>/posts/3231248921/</url>
    <content><![CDATA[<p><img src="http://img1.ph.126.net/2qR4R-BPV7Ve4JKhKOkDmg==/6598213258750020352.jpg" alt="买了台mini电脑 - leaf - ------坚持雅操------" title="买了台mini电脑 - leaf - ------坚持雅操------"></p>
<p><img src="http://img0.ph.126.net/OgMilLWMrbLvko26u0m5xA==/6597528263006125374.jpg" alt="买了台mini电脑 - leaf - ------坚持雅操------" title="买了台mini电脑 - leaf - ------坚持雅操------"></p>
<p>  <br>配置：  </p>
<blockquote>
<p>CPU：INTEL ATOM D2550<br>显卡：INTEL GMA 3600 集成<br>内存：DDR3-1333 2G<br>硬盘：日立 160G  </p>
</blockquote>
<blockquote>
<p>大小：2/3 A4纸  </p>
</blockquote>
<p>使用感受：<br>1、显卡：  </p>
<blockquote>
<p>知道intel的显卡弱，没想到这么弱。更坑爹的是intel提供的XP驱动也垃圾！<br>我装了1.15版本的XP驱动。本来就没打算玩游戏，但是看高清1280X768竟然有时候还会卡一下。  </p>
</blockquote>
<p>2、温度：  </p>
<blockquote>
<p>这台电脑的问题在50度左右。  </p>
</blockquote>
<p>3、噪音：  </p>
<blockquote>
<p>风扇转速在5000转以上，不知道能不能换个散热器。  </p>
</blockquote>
<p>4、机箱：  </p>
<blockquote>
<p>由于不是买微步的主板，所以机箱后面我改了一下才能装。  </p>
</blockquote>
<p>5、应用：  </p>
<blockquote>
<p>上网、聊天、查资料都可以，速度也挺快的。  </p>
</blockquote>
<p>6、用电量：  </p>
<blockquote>
<p>40W的用电量还是有的，没想象中的少。  </p>
</blockquote>
<p>总结：除了小，真的没啥优点了。各位如果想买请三思。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>买到LDAP系統管理繁体版</title>
    <url>/posts/4112440145/</url>
    <content><![CDATA[<p>又是翻墙，又是paypal，花了我￥200元！运费要80元。。。。<br>希望能好好学习，不会浪费这200元钱  </p>
<p><img src="http://img6.ph.126.net/yJh22_disvtBC1RNf4NjVg==/2537778390040536296.jpeg" alt="买到LDAP系統管理繁体版 - leaf - ------坚持雅操------" title="买到LDAP系統管理繁体版 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img7.ph.126.net/BtJ3A3RWNes44Eap3GqVUQ==/2532993315436461197.jpeg" alt="买到LDAP系統管理繁体版 - leaf - ------坚持雅操------" title="买到LDAP系統管理繁体版 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/dvViJF_8rCqdgUShxP0avA==/2532993315436461200.jpeg" alt="买到LDAP系統管理繁体版 - leaf - ------坚持雅操------" title="买到LDAP系統管理繁体版 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img7.ph.126.net/3eaw0sck461TwyTFZDpg3w==/2396759426708499587.jpeg" alt="买到LDAP系統管理繁体版 - leaf - ------坚持雅操------" title="买到LDAP系統管理繁体版 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>买股票的唯一目的就是为了赚钱</title>
    <url>/posts/2394062503/</url>
    <content><![CDATA[<p>不要说什么稳不稳，没有哪只股票是稳的<br>不是因为便宜才买，是因为会涨才买  </p>
<p>操作：<br>看政策—&gt;看版块—&gt;看股票—&gt;看股票信息、公司消息、相关利好</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>二、ISCSI技术</title>
    <url>/posts/4220424958/</url>
    <content><![CDATA[<p>IP-SAN里面最重要的就是ISCSI技术</p>
<p>就是讲SCSI协议封装到以太网里面，在以太网上实现scsi存储技术。  </p>
<p>ISCSI结构  </p>
<p><img src="http://img1.ph.126.net/KE8AO1mSgBDxDXOhSLVyuw==/6631304160703828771.jpg" alt="二、ISCSI技术 - leaf - ------勤解万难------" title="二、ISCSI技术 - leaf - ------勤解万难------"></p>
<p>ISCSI initiator就是客户电脑<br>ISCSI target 就是服务器或者说就是一块硬盘<br>ISCSI lun 就是硬盘的盘片，你可以增加一个盘片的容量，也可以给一块硬盘加入多个盘片。  </p>
<p><img src="http://img0.ph.126.net/TpI-mnMqD-2FfxDpDiD4Ng==/6631288767541027428.png" alt="二、ISCSI技术 - leaf - ------勤解万难------" title="二、ISCSI技术 - leaf - ------勤解万难------"></p>
<p><img src="http://img0.ph.126.net/ZsOBVWkTLQeokVhg8LiE0A==/6631254682680568695.png" alt="二、ISCSI技术 - leaf - ------勤解万难------" title="二、ISCSI技术 - leaf - ------勤解万难------"></p>
<p> 相关的安全技术：</p>
<blockquote>
<p><img src="http://img0.ph.126.net/S-GxGmK4674YKBOiY5eAiA==/6598103307646317621.png" alt="二、ISCSI技术 - leaf - ------勤解万难------" title="二、ISCSI技术 - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>实验主要实现CHAP和IPSec等设置。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>人事档案代理期已过</title>
    <url>/posts/3112374975/</url>
    <content><![CDATA[<p>电话：86118043<br>费用：￥180元/年</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>从网络接手server：1、网络启动server</title>
    <url>/posts/461935396/</url>
    <content><![CDATA[<p>1、BIOS设置：<br>         power manager setup —&gt; wake-up by LAN/Ring —&gt; enable</p>
<p>2、系统开启远程唤醒功能：<br>         1&gt; 安装ethtool</p>
<blockquote>
<blockquote>
<p>sudo apt-get install ethtool</p>
</blockquote>
</blockquote>
<p>          2&gt;开启唤醒功能</p>
<blockquote>
<blockquote>
<p>查看：sudo ethtool eth0</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>wake-on 为g时已开启，d表示禁用</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>设置：sudo ethtool -s eth0 wol g</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>在rc.local里加入一句     ethtool -s eth0 wol g (这样每次启动就不用重新设置了)</p>
</blockquote>
</blockquote>
</blockquote>
<p>          3&gt;记录MAC地址：ifconfig </p>
<p> 3、从本机网络启动server<br>            1&gt;安装wakeonlan  sudo apt-get install wakeonlan<br>            2&gt;开启命令 wakeonlan MAC  </p>
<p>参考：<a href="http://hi.baidu.com/liuweigang525/blog/item/d0ccf902c4ec83e208fa93eb.html">http://hi.baidu.com/liuweigang525/blog/item/d0ccf902c4ec83e208fa93eb.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>从网络接手server：2、ssh到server</title>
    <url>/posts/3778847342/</url>
    <content><![CDATA[<p>1、防火墙开放22端口<br>      sudo ufw allow 22    （开放22端口）<br>      sudo ufw status        （查看ufw状态）  </p>
<p>2、连接到server<br>      ssh server的用户名@server主机名     (server主机名我连不了，我用IP才连上去)<br>      sftp server的用户名@server主机名  </p>
<p>其他：</p>
<blockquote>
<p>查看日志 grep sshd /var/log/auth.log</p>
<p>设置ssh不允许用root用户</p>
<p>nano /etc/ssh/sshd_config</p>
</blockquote>
<blockquote>
<blockquote>
<p>更改PermitRootLogin no 即可</p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>3、端口敲门：</p>
<blockquote>
<p>服务器端：</p>
</blockquote>
<blockquote>
<blockquote>
<p> sudo apt-get install knockd</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>配置knockd.conf</p>
</blockquote>
</blockquote>
<p>[options]</p>
<p>UseSyslog</p>
<pre><code>  #使用/var/log/syslog</code></pre>
<p>[openSSH]</p>
<p>sequence    = 7000,8000,9000</p>
<pre><code>  #敲门端口号</code></pre>
<p>seq_timeout = 5</p>
<pre><code>  #敲门需在5秒内完成</code></pre>
<p>command     = /sbin/iptables -I INPUT 1 -s %IP% -p tcp –dport 22 -j ACCEPT</p>
<pre><code>  #-I INPUT 1：插入到iptable第一行

  #-s %IP%   ：目标IP地址

  #-p tcp    ：对应tcp协议

  #--dport 22  ：要连接的22端口

  #-j ACCEPT   ：允许通过

  #合起来就是： 在第一行插入一条规则：允许该IP通过tcp为22的端口</code></pre>
<p>tcpflags    = syn</p>
<pre><code>  制定tcp数据包标记</code></pre>
<p>[closeSSH]</p>
<p>seq_timeout = 5</p>
<pre><code>    #等待5秒再执行关闭命令</code></pre>
<p>command     = /sbin/iptables -D INPUT -s %IP% -p tcp –dport 22 -j ACCEPT</p>
<p>tcpflags    = syn</p>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>客户端：</p>
</blockquote>
<blockquote>
<blockquote>
<p>sudo apt-get install knockd</p>
<p>knock IP 7000 8000 9000； ssh user@IP</p>
</blockquote>
</blockquote>
<p><a href="http://www.ibm.com/developerworks/cn/aix/library/au-sshlocks/index.html">http://www.ibm.com/developerworks/cn/aix/library/au-sshlocks/index.html</a>  </p>
<p>附：<br>1、第一次连接会提示是否连接点是<br>2、提示输入密码，要输入server用户名的密码</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>任何困难多不过是小困难的集合</title>
    <url>/posts/167139449/</url>
    <content><![CDATA[<p>所有的困难多可以分解为若干个小困难<br>而我要做的就是不断的细分困难和不断的解决这些困难<br>最后达到目标</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>你留意过你的父母吗?</title>
    <url>/posts/399505858/</url>
    <content><![CDATA[<p>你留意过你的父母吗?你应该看的!!! ?</p>
<p>如果你在一个平凡的家庭长大, ?</p>
<p>如果你的父母还健在，不管你有没有和他们同住—— ?</p>
<p>如果有一天，你发现妈妈的厨房不再像以前那么干净； ?</p>
<p>如果有一天，你发现家中的碗筷好象没洗干净； ?</p>
<p>如果有一天，你发现母亲的锅子不再雪亮； ?</p>
<p>如果有一天，你发现父亲的花草树木已渐荒废； ?</p>
<p>如果有一天，你发现家中的地板衣柜经常沾满灰尘； ?</p>
<p>如果有一天，你发现母亲煮的菜太咸太难吃； ?</p>
<p>如果有一天，你发现父母经常忘记关瓦斯； ?</p>
<p>如果有一天，你发现老父老母的一些习惯不再是习惯时，就像他们不再想要天天洗澡时； ?</p>
<p>如果有一天，你发现父母不再爱吃青脆的蔬果； ?</p>
<p>如果有一天，你发现父母爱吃煮得烂烂的菜； ?</p>
<p>如果有一天，你发现父母喜欢吃稀饭； ?</p>
<p>如果有一天，你发现他们过马路行动反应都慢了； ?</p>
<p>如果有一天，你发现在吃饭时间他们老是咳个不停，千万别误以为他们感冒或着凉，(那是吞咽神经老化的现象) ； ?</p>
<p>如果有一天，你发觉他们不再爱出门…… ?</p>
<p>如果有这么一天，我要告诉你，你要警觉父母真的已经老了，器官已经退化到需要别人照料了。 ?</p>
<p>如果你不能照料，请你替他们找人照料，并请你请你千万千万要常常探望，不要让他们觉得被遗弃了。 ?</p>
<p>每个人都会老，父母比我们先老，我们要用角色互换的心情去照料他，才会有耐心、才不会有怨言，当父母不能照顾自己的时候，为人子女要警觉，他们可能会大小便失禁、可能会很多事都做不好，如果房间有异味，可能他们自己也闻不到，请不要嫌他脏或嫌他臭，为人子女的只能帮他清理，并请维持他们的“自尊心”。 ?</p>
<p>当他们不再爱洗澡时，请抽空定期帮他们洗身体，因为纵使他们自己洗也可能洗不干净。当我们在享受食物的时候，请替他们准备一份大小适当、容易咀嚼的一小碗，因为他们不爱吃可能是牙齿咬不动了。 ?</p>
<p>从我们出生开始，喂奶换尿布、生病的不眠不休照料、教我们生活基本能力、供给读书、吃喝玩乐和补习，关心和行动永远都不停歇。如果有一天，他们真的动不了了，角色互换不也是应该的吗？ ?</p>
<p>为人子女者要切记，看父母就是看自己的未来，孝顺要及时。 ?</p>
<p>树欲静而风不止、子欲养而亲不在——你留意过自己的父母吗? ?</p>
<p>留下你最想说的话吧，祝你们全家健康！！！?</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>使用ophcrach破解windows密码</title>
    <url>/posts/4025398215/</url>
    <content><![CDATA[<p>1、sudo apt-get install ophcrach<br>2、下载彩虹表并安装：<br>       <a href="http://ophcrack.sourceforge.net/tables.php">http://ophcrack.sourceforge.net/tables.php</a><br>      解压到tables-tables_xp_free_fast-文件<br>      然后才能安装彩虹表<br>3、破解sam文件  </p>
<p>相关网址如下：<br><a href="http://www.aiezu.com/Article/Rainbow_Table_Introductions.aspx">普及彩虹表(Rainbow Table)知识</a><br><a href="http://www.aiezu.com/Article/Rainbow_table_kill_lm.aspx">使用”彩虹表+ophcrach+pwdump”破解windows密码Hash</a><br><a href="http://www.heibai.net/articles/hacker/mimapojie/2010/0607/8049.html">如何破解Hash密码</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>光纤熔接</title>
    <url>/posts/3033960186/</url>
    <content><![CDATA[<p>步骤：剥皮、放套管、切线、熔接、套管。不过挺贵的</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>全国四级-网络工程师考试总结</title>
    <url>/posts/2900090108/</url>
    <content><![CDATA[<p>关于书本内容：<br>看4级这一本书即可  </p>
<p>选择题会考到的内容：<br>第一章：<br>1、RPR<br>2、XDSL<br>3、HFC<br>4、cable modem<br>5、APON OC-3 OC-12<br>6、802.16<br>第二章<br>1、组建工程阶段划分<br>2、网络需求详细分析<br>3、上下级联带宽比<br>4、路由器指标<br>5、全双工端口带宽计算<br>6、服务器相关技术<br>7、系统高可用性<br>第三章<br>1、NAT工作原理<br>2、IPV6 MAC地址表示法<br>第四章<br>1、路由选择算法主要参数<br>2、内外网关协议<br>3、路由表建立过程<br>第五章<br>1、互联设备类型<br>2、建筑群子系统设计<br>第六章<br>1、所有命令、贴别是CATALYST6500的命令，CATALYST 3548在综合题中会考到<br>第七章<br>1、路由器基本功能-分组转发<br>2、管理距离<br>3、路由器基本配置-保存配置<br>4、所有配置命令，常在综合题中考<br>5、访问控制列表表号范围<br>第八章<br>1、蓝牙参数指标<br>2、hiper lan参数<br>3、802.11b 802.11a 比较<br>4、802.11b 运作模式<br>5、aironet 二、将接入点接入网络 三、配置无线接入点<br>第九章<br>考5、6道选择题，每个项目一道题<br>第十章<br>1、TCSEC<br>2、备份模式<br>3、防火墙与入侵检测系统，常在应用题中考<br>4、网络安全评估<br>5、cisco pix 525配置命令<br>6、入侵检测系统部署方法<br>第十一章<br>1、PDU<br>2、团体名<br>3、MIB-2库<br>4、SNMP操作<br>5、windows管理命令<br>6、漏洞扫描<br>7、snmp设置命令<br>8、网络数据监听部署<br>9、故障测试与分析<br>10、网络入侵与攻击方法<br>11、漏洞查找办法  </p>
<p>综合题一：<br>      第三章：A类、B类IP地址等算术<br>综合题二：<br>      第七章：交换机命令、静态路由、OSPF、ACL、BGP配置，背诵完整配置(包括提示符)<br>综合题三：<br>      第九章：DHCP原理及实际应用<br>综合题四：<br>      第十一章：sniffer相关功能界面，识别相关协议及实际应用 (dns ping ftp 等)  </p>
<p>应用题：<br>第四章 IP路由选择与路由汇聚基本概念 P81<br>考图4-2 表4-1  </p>
<p>经验：<br>1、做真题并总结每一道不懂的题目，经常考到历年题<br>2、不会做的时候，排除四个选项中不一样的选项(仅针对命令)<br>3、综合题、应用题内容没变过，变的是考察题目的区段及题目的标记</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[全文转载]Ubuntu10.04 ATI显卡硬件高清加速</title>
    <url>/posts/597459236/</url>
    <content><![CDATA[<p>转载自：<a href="http://hi.baidu.com/liuweigang525/item/a8f7cdc1a2df832846d5c0bf">http://hi.baidu.com/liuweigang525/item/a8f7cdc1a2df832846d5c0bf</a>  </p>
<p>首先A卡要支持UVD(Unified Video Decoder)，比较新的显卡应该都是支持到UVD2的，另外Lucid自带的ATI驱动在我的机器上不支持UVD功能。<br>cat /var/log/Xorg.0.log | grep UVD<br>如果输出如下字样<br>(II) fglrx(0): UVD2 feature is available<br>则表明支持驱动UVD特性<br>我的卡子在未安装ATI官方最新驱动ATI Catalyst Display Driver 10.4以前是不支持UVD2的。ATI驱动如何安装请参考ATI官方文档。  </p>
<p>A卡现在在linux平台上能够进行硬解得益于intel与开源社区开发的 vaapi(Video Acceleration API)，只要安装相应的后端驱动，vaapi可以支持A卡和N卡，A卡的后端就是xvba-video,N卡的后端是vdpau-video.  </p>
<p>安装完ATI最新的官方驱动后，下载相应平台的libva包安装，当然也可以下载源码进行安装，<a href="http://www.splitted-desktop.com/~gbeauchesne/%E4%B8%8A%E6%9C%89%E8%AF%A6%E7%BB%86%E7%9A%84%E8%AF%B4%E6%98%8E%E3%80%82%E8%BF%98%E8%A6%81%E6%8A%8A">http://www.splitted-desktop.com/~gbeauchesne/上有详细的说明。还要把</a> libva的开发包一并安装，因为后面编译带vaavpi扩展的mplayer要用到。我安装的是最新的 libva1_0.31.0-1+sds13_amd64.deb和libva-dev_0.31.0-1+sds13_amd64.deb<br>然后下载并安装xvba-video。安装完成后测试一下vaapi是否就绪<br>$ vainfo<br>我的输出如下<br>libva: libva version 0.31.0-sds6  </p>
<p>Xlib: extension “XFree86-DRI” missing on display “:0.0″.<br>libva: va_getDriverName() returns 0<br>libva: Trying to open /usr/lib/va/drivers/fglrx_drv_video.so<br>libva: va_openDriver() returns 0<br>vainfo: VA API version: 0.31<br>vainfo: Driver version: Splitted-Desktop Systems XvBA backend for VA API – 0.6.11<br>vainfo: Supported profile and entrypoints<br>VAProfileMPEG2Simple : VAEntrypointIDCT<br>VAProfileMPEG2Main : VAEntrypointIDCT<br>VAProfileH264High : VAEntrypointVLD<br>VAProfileVC1Advanced : VAEntrypointVLD<br>最重要的是后面输出的profile，如果有内容输出应该问题就不大了。  </p>
<p>最后就是让mplayer来支持vaapi了，发行版自带的版本目前是不支持此特性的，所以要重新编译。先执行<br>$sudo apt-get build-dep mplayer<br>然后下载mplayer-vaapi-latest-FULL.tar.bz2 ,解开后执行$ ./checkout-patch-build.sh即可。<br>编译完成后生成的mplayer在mplayer-vaapi目录下面。<br>$./mplayer -vo vaapi -va vaapi path_to_movie<br>如果有以下字样输出<br>VO: [vaapi] 1280×720 =&gt; 1280×720 H.264 VA API Acceleration<br>则说明硬件加速成功。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>公司买了IBM设备+金蝶EAS</title>
    <url>/posts/2583200111/</url>
    <content><![CDATA[<p>全图  </p>
<p><img src="http://img4.ph.126.net/vXdsNvNKeB1Z3Z8tNZ036Q==/628815097989305764.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p> </p>
<p>IBM POWER 710  </p>
<p><img src="http://img5.ph.126.net/2f1MHjFx3rQXBegHVsJmsQ==/2570992437292929935.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img4.ph.126.net/LFIDF7NMdIOBW7pi2KN00A==/6597885604283843104.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img6.ph.126.net/m7utaCahuTnEUQVCp9EwRg==/2692026677278419256.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/J4K6cplc9FRVUED_O2Vmaw==/1351079888228949892.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------">  </p>
<p><img src="http://img0.ph.126.net/yq4vtjYbMRX8T-F_mtOXyQ==/2566207362688853390.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/sqM0WTFckxNizHm9Mzk9wA==/21110623271209072.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img9.ph.126.net/cy21wf5k5gs-PL5BcfFeYg==/565764703206124499.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img6.ph.126.net/CMKFre8zQP46b-EVfcLWhg==/2574651611990170416.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img7.ph.126.net/-a3V0I3eTYrEtEbSLiTC2g==/626563298175624727.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p> <br>DS5020  </p>
<p><img src="http://img5.ph.126.net/JdRA8aDQgolJFYzVW58XJg==/3081306570069352565.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/9e06FkiQS0SU4xkOabW0lw==/6597434804516692131.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img9.ph.126.net/WJ6a1lldF9nvNqHUHS5Rjg==/3082713944952904599.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img9.ph.126.net/bDNXZOHoKHUzdDmtfXCcMA==/1549238271833265969.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p>   </p>
<p>金蝶EAS  </p>
<p><img src="http://img7.ph.126.net/n1bOxf7yb8IzvF8K_DKCnA==/6597957072539648457.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img5.ph.126.net/B2qhQf16AhGfZ0hfzA7jlg==/6597751463865254605.jpg" alt="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------" title="公司买了IBM设备+金蝶EAS - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>公司软硬件全套配置</title>
    <url>/posts/1174188512/</url>
    <content><![CDATA[<p>网络设备：  </p>
<blockquote>
<p>光纤接收器<br>路由器：行为管理软件(深信服)、软路由(海蜘蛛)、企业级路由器<br>防火墙<br>3层交换机<br>2层交换机<br>无线AP  </p>
</blockquote>
<p>服务器  </p>
<blockquote>
<p>机架式服务器(双机热备)<br>SAN存储<br>NAS服务器<br>磁带机<br>服务器机柜<br>网络机柜<br>UPS<br>空调  </p>
</blockquote>
<p>所需服务  </p>
<blockquote>
<p>ubuntu server  </p>
</blockquote>
<blockquote>
<p>DNS<br>LDAP<br>SAMBA<br>FTP<br>CUPS<br>360企业版<br>MAIL(外包)<br>WWW(外包)<br>RTX<br>金蝶<br>OA<br>档案管理系统  </p>
</blockquote>
<p>办公电脑  </p>
<blockquote>
<p>CPU、主板、内存、硬盘、电源、机箱、键鼠  </p>
</blockquote>
<p>软件配置  </p>
<blockquote>
<p>deepin linux<br>windows xp<br>windows 7  </p>
</blockquote>
<p>其他设备  </p>
<blockquote>
<p>监控设备：海康、大华等网络硬盘录像机、摄像头<br>投影功能：投影机、投影幕布、功放、音响、htpc电脑、无线键鼠、VGA切换器<br>考勤功能：带网络带摄像头考勤机<br>饭卡功能：带网络防水防油饭卡机<br>带网络的复印机<br>无纸传真机<br>连供打印机</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于drwtsn32.log</title>
    <url>/posts/2191512866/</url>
    <content><![CDATA[<p>转自：<a href="http://baike.baidu.com/view/1300613.htm">http://baike.baidu.com/view/1300613.htm</a><br>如果我们根本不想用它的话，打开注册表编辑器，<br>［HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsNT\CurrentVersion \AeDebug］，然后将“AUTO”键值设置为0。<br> 接着进入到系统的“DrWatson文件夹”中(该文件夹位于“Documents and Settings/All Users/Shared Documents中)，<br>将其中的User.dmp、Drwtsn32.log删除掉就可以了。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于LFS</title>
    <url>/posts/1795889865/</url>
    <content><![CDATA[<p>我看的是 《手把手教你构建自己的linux系统》 作者：孙海勇<br>此书拼写错误的地方比较多，不过大多不影响制作。  </p>
<p>学做lfs，可以学linux构建原理，linux文件系统，linux内核编译，make等命令的使用，系统配置等。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于luns</title>
    <url>/posts/355074636/</url>
    <content><![CDATA[<p>增加lun容量，会多出未分区的容量</p>
<p>添加lun，会多出一个磁盘。</p>
<p><img src="http://img0.ph.126.net/bdXEHrn7VrPLkCAF2A-Xqw==/6598219855878877965.png" alt="关于luns - leaf - ------勤解万难------" title="关于luns - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于mate版本</title>
    <url>/posts/2713717643/</url>
    <content><![CDATA[<p>一种是ubuntu12.04安装mate  </p>
<blockquote>
<p>sudo add-apt-repository “deb <a href="http://packages.mate-desktop.org/repo/ubuntu">http://packages.mate-desktop.org/repo/ubuntu</a> $(lsb_release -cs) main”<br>sudo apt-get install mate-archive-keyring<br>sudo apt-get update  </p>
</blockquote>
<blockquote>
<p>sudo apt-get install mate-core mate-desktop-environment<br>跟10.04的界面有点差别，不过还算习惯  </p>
</blockquote>
<p>一种是用mint版本  </p>
<blockquote>
<p>但是mint对中文的支持实在不怎么样，默认安装连个中文输入法多没有。。。  </p>
</blockquote>
<blockquote>
<p>问题：安装语言包出错主要是源的问题，更新到<a href="http://mirrors.ustc.edu.cn/%E7%9A%84%E6%BA%90%E5%8D%B3%E5%8F%AF">http://mirrors.ustc.edu.cn/的源即可</a>  </p>
<blockquote>
<p>deb <a href="ftp://mirrors.ustc.edu.cn/linuxmint/">ftp://mirrors.ustc.edu.cn/linuxmint/</a> maya main upstream import<br>deb-src <a href="ftp://mirrors.ustc.edu.cn/linuxmint/">ftp://mirrors.ustc.edu.cn/linuxmint/</a> maya main upstream import  </p>
</blockquote>
</blockquote>
<blockquote>
<p>问题：IBUS 安装和自动启动  </p>
<blockquote>
<p>更新源之后，sudo apt-get install ibus-gtk ibus-pinyin ibus-pinyin-db-open-phrase<br>语言支持里面选IBUS即可，我装好后系统自动选了IBUS了  </p>
</blockquote>
<p>问题：ubuntu主题图标等  </p>
<blockquote>
<p><a href="https://launchpad.net/">https://launchpad.net/</a><br>主题：  </p>
</blockquote>
<blockquote>
<p><code>sudo add-apt-repository ppa:ravefinity-project/ppa    sudo apt-get install ambiance-colors radiance-colors   </code></p>
</blockquote>
<blockquote>
<p>图标：  </p>
<blockquote>
<p>deb <a href="http://ppa.launchpad.net/fs-icons-ubuntu/unstable/ubuntu">http://ppa.launchpad.net/fs-icons-ubuntu/unstable/ubuntu</a> precise main<br>deb-src <a href="http://ppa.launchpad.net/fs-icons-ubuntu/unstable/ubuntu">http://ppa.launchpad.net/fs-icons-ubuntu/unstable/ubuntu</a> precise main  </p>
</blockquote>
</blockquote>
<blockquote>
<p>sudo apt-get install fs-icons-ubuntu  </p>
</blockquote>
<p><img src="http://img7.ph.126.net/knbvxKqYlHs3TMbQX_Cbdw==/6598097810028118177.jpg" alt="关于mate版本 - leaf - ------坚持雅操------" title="关于mate版本 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<p>参考：<br><a href="http://it-diary.com/linux/ubuntu-linux/install-mate-1-2-in-ubuntu-12-04-or-11-10/">http://it-diary.com/linux/ubuntu-linux/install-mate-1-2-in-ubuntu-12-04-or-11-10/</a><br><a href="http://www.cnblogs.com/tnxk/archive/2012/08/30/2663146.html">http://www.cnblogs.com/tnxk/archive/2012/08/30/2663146.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于东奥会计继续教育打不开视频</title>
    <url>/posts/764026250/</url>
    <content><![CDATA[<p>视频能听声音，没图像显示为绿色<br>1、设置mediaplayer  </p>
<blockquote>
<p>工具-选项-性能-视频加速-选 无  </p>
</blockquote>
<p>2、设置IE浏览器  </p>
<blockquote>
<p>一般出现在IE8或者更改一级的IE浏览器里，原因就是“兼容性视图”。只要点一下然后关闭IE再开，就能看了</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于仙童八叛徒(转)</title>
    <url>/posts/3235427895/</url>
    <content><![CDATA[<p>许多电脑史学家都认为，要想了解美国硅谷的发展史，就必须了解早期的仙童半导体公司<br>。这家公司，曾经是世界上最大、最富创新精神和最令人振奋的半导体生产企业，为硅谷<br>的成长奠定了坚实的基础。更重要的是，这家公司还为硅谷孕育了成千上万的技术人才和<br>管理人才，它不愧是电子、电脑业界的“西点军校”，是名符其实的“人才摇篮”。一批又一批精英人才从这里出走和创业，书写了硅谷一段辉煌的历史；然而，正因为人才的大量流失，也造成了这家公司历经坎坷的商海沉浮。  </p>
<p>仙童半导体创立于1957年，这段史实必须从两条线索讲起。1955年，成就了“本世纪最伟大发明”的“晶体管之父”的肖克利（W.Shockley）博士，离开贝尔实验室返回故乡圣克拉拉，创建“肖克利半导体实验室”。这一喜讯，正中特曼教授为硅谷网罗天下英才之下怀： 有了肖克利这棵“梧桐树” ，何愁引不到成群的“凤凰”来？  </p>
<p>电子电脑界焦急地关注着肖克利的行踪。 据说，300年前当牛顿宣布准备在他的故乡建一所工厂时，全世界的物理学界也是如此心态。不久，因仰慕“晶体管之父”的大名，求职信像雪片般飞到肖克利办公桌上。第二年，八位年轻的科学家从美国东部陆续到达硅谷，加盟肖克利实验室。他们是：诺依斯（N. Noyce）、摩尔（R.Moore）、布兰克（J.Blank）、克莱尔（E.Kliner）、赫尔尼（J.Hoerni）、拉斯特（J.Last）、罗伯茨（S.Boberts）和格里尼克（V.Grinich）。他们的年龄都在30岁以下，风华正茂，学有所成，处在创造能力的巅峰。他们之中，有获得过双博士学位者，有来自大公司的工程师，有著名大学的研究员和教授，这是当年美国西部从未有过的英才大集合。  </p>
<p>29岁的诺依斯是八人之中的长者，是“投奔”肖克利最坚定的一位。当他飞抵旧金山后所做的第一件事，就是倾囊为自己购下一所住所，决定永久性定居，根本就没有考虑到工作环境、条件和待遇。其他七位青年，来硅谷的经历与诺依斯大抵相似。可惜，肖克利是天才的科学家，却缺乏经营能力；他雄心勃勃，但对管理一窍不通。特曼曾评论说：“肖克利在才华横溢的年轻人眼里是非常有吸引力的人物，但他们又很难跟他共事。”一年之中，实验室没有研制出任何象样的产品。八位青年瞒着肖克利开始计划出走。在诺依斯带领下，他们向肖克利递交了辞职书。肖克利怒不可遏地骂他们是“八叛逆”（The Traitorous Eight）。青年人面面相觑，但还是义无反顾离开了他们的“伯乐”。不过，后来就连肖克利本人也改口把他们称为“八个天才的叛逆”。在硅谷许多著作中，“八叛逆”的照片与惠普的车库照片，具有同样的历史价值。  </p>
<p>“八叛逆”找到了一家地处美国纽约的摄影器材公司来支持他们创业，这家公司名称为Fairchild，音译“费尔柴尔德”，但通常意译为“仙童”。仙童摄影器材公司的前身是谢尔曼·费尔柴尔德（S. Fairchild）1920年创办的航空摄影公司。费尔柴尔德不仅是企业家，也是发明家。他的发明主要在航空领域，包括密封舱飞机、折叠机翼等等。由于产品非常畅销，他在1936年将公司一分为二，其中，生产照相机和电子设备的就是仙童摄影器材公司。<br> <br>当“八叛逆”向他寻求合作的时候，已经60多岁的费尔柴尔德先生仅仅提供了3600美元的种子基金， 要求他们开发和生产商业半导体器件， 并享有两年的购买特权。于是，“八叛逆”创办的企业被正式命名为仙童半导体公司，“仙童”之首自然是诺依斯。<br> <br>1957年10月，仙童半导体公司仍然在硅谷嘹望山查尔斯顿路租下一间小屋，距离肖克利实验室和距离当初惠普公司的汽车库差不多远。“仙童”们商议要制造一种双扩散基型晶体管，以便用硅来取代传统的锗材料，这是他们在肖克利实验室尚未完成却又不受肖克利重视的项目。 费尔柴尔德摄影器材公司答应提供财力，总额为150万美元。诺依斯给伙伴们分了工，由赫尔尼和摩尔负责研究新的扩散工艺，而他自己则与拉斯特一起专攻平面照相技术。  </p>
<p>1958年1月， IBM公司给了他们第一张订单，订购100个硅晶体管，用于该公司电脑的存储器。 到1958年底，“八叛逆”的小小公司已经拥有50万销售额和100名员工，依靠技术创新优势，一举成为硅谷成长最快的公司。  </p>
<p>仙童半导体公司在诺依斯精心运筹下，业务迅速地发展，同时，一整套制造晶体管的平面处理技术也日趋成熟。天才科学家赫尔尼是众“仙童”中的佼佼者，他像变魔术一般把硅表面的氧化层挤压到最大限度。仙童公司制造晶体管的方法也与众不同，他们首先把具有半导体性质的杂质扩散到高纯度硅片上，然而在掩模上绘好晶体管结构，用照相制版的方法缩小，将结构显影在硅片表面氧化层，再用光刻法去掉不需要的部分。<br> <br>扩散、掩模、照相、光刻……，整个过程叫做平面处理技术，它标志着硅晶体管批量生产的一大飞跃，也仿佛为“仙童”们打开了一扇奇妙的大门，使他们看到了一个无底的深渊：用这种方法既然能做一个晶体管，为什么不能做它几十个、几百个，乃至成千上万呢？  </p>
<p>1959年1月23日，诺依斯在日记里详细地记录了这一闪光的设想。<br> <br>1959年2月，德克萨斯仪器公司（TI）工程师基尔比（J.kilby）申请第一个集成电路发明专利的消息传来，诺依斯十分震惊。他当即召集“八叛逆”商议对策。基尔比在TI公司面临的难题，比如在硅片上进行两次扩散和导线互相连接等等，正是仙童半导体公司的拿手好戏。诺依斯提出：可以用蒸发沉积金属的方法代替热焊接导线，这是解决元件相互连接的最好途径。仙童半导体公司开始奋起疾追。 1959年7月30日，他们也向美国专利局申请了专利。为争夺集成电路的发明权，两家公司开始旷日持久的争执。1966年，基尔比和诺依斯同时被富兰克林学会授予巴兰丁奖章，基尔比被誉为“第一块集成电路的发明家”而诺依斯被誉为“提出了适合于工业生产的集成电路理论”的人。1969年，法院最后的判决下达，也从法律上实际承认了集成电路是一项同时的发明。  </p>
<p>1960年，仙童半导体公司取得进一步的发展和成功。由于发明集成电路使它的名声大振， 母公司费尔柴尔德摄影器材公司决定以300万美元购买其股权，“八叛逆”每人拥有了价值25万美元的股票。1964年，仙童半导体公司创始人之一摩尔博士，以三页纸的短小篇幅，发表了一个奇特的定律。摩尔天才地预言说道，集成电路上能被集成的晶体管数目，将会以每18个月翻一番的速度稳定增长，并在今后数十年内保持着这种势头。摩尔所作的这个预言，因后来集成电路的发展而得以证明，并在较长时期保持了它的有效性，被人誉为“摩尔定律”，成为新兴电子电脑产业的“第一定律”。<br> <br>60年代的仙童半导体公司进入了它的黄金时期。 到1967年，公司营业额已接近2亿美元，在当时可以说是天文数字。据那一年进入该公司的虞有澄博士（现英特尔公司华裔副总裁）回忆说：“进入仙童公司，就等于跨进了硅谷半导体工业的大门。”然而，也就是在这一时期，仙童公司也开始孕育着危机。母公司总经理不断把利润转移到东海岸，去支持费尔柴尔德摄影器材公司的盈利水平。目睹母公司的不公平，“八叛逆”中的赫尔尼、罗伯茨和克莱尔首先负气出走，成立了阿内尔科公司。据说，赫尔尼后来创办的新公司达12家之多。随后，“八叛逆”另一成员格拉斯也带着几个人脱离仙童创办西格奈蒂克斯半导体公司。从此，纷纷涌进仙童的大批人才精英，又纷纷出走自行创业。<br> <br>正如苹果公司乔布斯形象比喻的那样：“仙童半导体公司就象个成熟了的蒲公英，你一吹它，这种创业精神的种子就随风四处飘扬了。”脱离仙童半导体创办公司者之中，较有名气的是查尔斯·斯波克（C.Sporck）和杰里·桑德斯（J. Sanders）。斯波克曾一度担任过仙童半导体公司总经理，1967年出走后，来到国民半导体公司（NSC） 担任CEO。他大刀阔斧地推行改革，把NSC从康涅狄格州迁到了硅谷， 使它从一家亏损企业快速成长为全球第6大半导体厂商。桑德斯则是仙童半导体公司销售部主任，1969年，他带着7位仙童员工创办高级微型仪器公司（AMD），这家公司目前已经是仅次于英特尔公司的微处理器生产厂商，K6、K6-2等微处理器产品畅销全世界。  </p>
<p>1968年，“八叛逆”中的最后两位诺依斯和摩尔，也带着葛罗夫（A. Grove）脱离仙童公司自立门户， 他们创办的公司就是大名鼎鼎的英特尔（Intel）。虽然告别了仙童，“八叛逆”仍然约定时间在一起聚会，最近的一次是1997年，8人之中只有6人还健在。似乎要高扬“八叛逆”的“叛逃”精神，一批又一批“仙童”夺路而出，掀起了巨大的创业热潮。对此，80年代初出版的著名畅销书《硅谷热》（Silicon Valley Fever）写到：“硅谷大约70家半导体公司的半数，是仙童公司的直接或间接后裔。在仙童公司供职是进入遍布于硅谷各地的半导体业的途径。1969年在森尼维尔举行的一次半导体工程师大会上， 400位与会者中，未曾在仙童公司工作过的还不到24人。”从这个意义上讲，说仙童半导体公司是“硅谷人才摇篮”毫不为过。<br> <br>人才大量流失是硅谷发展的“福音”，给仙童半导体带来的却是一场灾难。从1965年到1968年， 公司销售额不断滑坡，还不足1.2亿美元，连续两年没有赢利。人们都清楚地意识到，它再也不是“淘气孩子们创造的奇迹”了。  </p>
<p>为了找人接替诺依斯的工作， 谢尔曼·费尔柴尔德以硅谷历史上最高的待遇——3年100万美元薪金外加60万美元股票， 从摩托罗拉公司请来莱斯特·霍根博士，亡羊补牢，以显示其“求贤若渴”的姿态。霍根不是一位无能的总经理， 曾经给摩托罗拉公司带来过重大转机。在执政仙童6年期限内，他尽了最大的努力，使公司销售额增加了两倍。然而，仙童半导体公司的灵魂人物已经离去，它的崩溃不过是时间迟早问题。1974年，无力回天的霍根，把权柄交给36岁的科里根， 而他的继任者却在二三年内，让这家公司从半导体行业的第2位，迅速跌落到第6位。  </p>
<p>70年代末，科里根终于发现，挽救仙童半导体公司的最好途径是把它卖掉。几经周折，他最终选定了一家拥有21亿美元资产的施拉姆伯格（Schlumberger）公司，尽管这是一家法国公司，而且是经营石油服务业的公司。1979年夏季，曾经是美国最优秀的企业仙童半导体公司被法国外资接管，售价3亿5千万美元，在硅谷内外造成极大的轰动。<br> <br>外资似乎也不能给日益衰败的仙童半导体注入活力，虽然施拉姆伯格公司招聘到一批研究人工智能的人才，原本可以让仙童快速进入机器人生产领域，但他们没有这样做。实际上，在继续亏损后，仙童又被用原价的三分之一转卖给另一家美国公司，买主正是原仙童总经理斯波克管理的国民半导体公司（NSC），仙童半导体品牌一度寿终正寝。1996年，国民半导体公司把原仙童公司总部迁往缅因州，并恢复了“仙童半导体”的老名字。但是，拥有员工6500人的“硅谷人才摇篮”却不得不退出了硅谷。  </p>
<p>早在1962年，仙童半导体公司就在缅因州建立了研制和制造晶体管的生产线，在加州，在犹他州，甚至在南韩和马来西亚都有其分部，在半导体器件领域仍有较强的实力，主要研制和生产半导体存储器设备。总部迁至缅因州南波特兰后，公司领导力图重振雄风，可是，命运多舛的“仙童”，1997年3月被国民半导体公司以5.5亿的价格再次出售，原因不言而喻——国民半导体公司以同样的价格买下了全球第三大微处理器制造商Cyrix， 试图与Intel和AMD争夺PC机半导体市场。<br> <br>被人买来卖去的滋味肯定不好受，仙童半导体现任CEO和总裁克尔克·庞德（K.Pond）希望对公司实施战略性的重组。庞德曾就学于阿肯色大学电子工程系，并获得宾夕法尼亚工商管理硕士（MBA） 。自1968年加入仙童半导体公司以来，先后在许多部门担任要职，1994年起就是仙童半导体的主要领导人。好在这次出资收购的是一家风险资本公司，仙童半导体公司终于具有中立的身份。庞德兴奋地说，这次转变将有利于开发仙童的内部价值，可以让我们自主发展，成为拥有多种产品供应的半导体企业。果不其然，庞德旗下的仙童半导体连续做出了惊人之举，它也开始了企业收购：当年11月， 仙童半导体斥资1.2亿，买下了年收入7000万的Raytheon公司半导体分部；1998年12月，仙童再次斥资4.55亿，跨国购并了南韩三星公司属下一个制造特殊芯片的半导体工厂。这次收购将使仙童制造的半导体产品更适合于电视、录像机和音频设备，大踏步地向消费电子制造业挺进。  </p>
<p>作为支撑硅谷崛起的“神话”，仙童半导体公司走过了一段辉煌而曲折的历程，成功与失败都因人才而致，正所谓“成也萧何，败也萧何”。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于党代会选举常识</title>
    <url>/posts/2909402862/</url>
    <content><![CDATA[<p>党代会任务：选三委  </p>
<blockquote>
<p>     大会主席团列名单               #安插自身势力</p>
<blockquote>
<blockquote>
<p>|  </p>
</blockquote>
</blockquote>
<p> 大会成员进行差额预选  </p>
<blockquote>
<blockquote>
<p>|  </p>
</blockquote>
</blockquote>
<p>大会主席团及常委确定名单      #安插自身势力  </p>
<blockquote>
<blockquote>
<p>|  </p>
</blockquote>
</blockquote>
<p> 大会成员进行投票选三委  </p>
<blockquote>
<blockquote>
<p>|  </p>
</blockquote>
</blockquote>
<blockquote>
<p>  选举产生  </p>
</blockquote>
<p>       中央委员会委员<br>    中央委员会候补委员<br>中央纪律检查委员会委员  </p>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>|  </p>
</blockquote>
</blockquote>
<p>第二天召开一中全会  </p>
</blockquote>
<p>一中全会：选政治局常委、总书记、书记处、中央军委  </p>
<blockquote>
<blockquote>
<p>三委成员选举  </p>
<blockquote>
<p>|  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>  选举产生  </p>
</blockquote>
<blockquote>
<p>政治局常委<br>   总书记<br>   书记处<br> 中央军委  </p>
</blockquote>
</blockquote>
<p>一中全会：  </p>
<blockquote>
<p>党的全国代表大会结束后召开，选举中共中央总书记、中央政治局成员，决定中央其他部门成员。  </p>
</blockquote>
<p>二中全会：  </p>
<blockquote>
<p>次年的年初召开，布置国家主席、全国人大、国务院、全国政协、中央军委换届选举的人事安排。  </p>
</blockquote>
<p>三中至六中全会：  </p>
<blockquote>
<p>每年的第四季度召开一次全会，主要审议决定经济和社会发展、民主政治、党的建设、精神文明建设等事务。  </p>
</blockquote>
<p>七中全会：  </p>
<blockquote>
<p>在新的全国代表大会前夕召开，主要任务是为全国代表大会的召开做好准备工作。  </p>
</blockquote>
<p>习近平  父亲 习仲勋<br>李克强  父亲 李奉三                H人<br>张德江  父亲 张志毅                J人<br>俞正声  父亲 俞启威<br>刘云山  父亲<br>王岐山  父亲                      妻子姚明珊的父亲姚依林<br>张高丽  父亲</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于教育局考试注意点</title>
    <url>/posts/128281252/</url>
    <content><![CDATA[<p>考哪个年级的哪个岗位，就看那个年级那个岗位的书(教师用书)  </p>
<p>一定要做完150分钟的时间</p>
<p>有些事情要提前做，等考试后再做就晚了</p>
<p>哎呀，满分100分 50分都考不上，我K 。考上就进事业单位了。我KKKKKKK！！！</p>
<p>活到30岁，竟然出现这种事情。痛苦啊。。。</p>
<p>我怎么会到这种地步了呀！！！！</p>
<p>考试内容：</p>
<p>       考DOS文件操作、考查询表格操作、考数据库相关定义、考流媒体定义</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于维护</title>
    <url>/posts/1940906119/</url>
    <content><![CDATA[<p>一直的方向：  </p>
<blockquote>
<p>电脑的事情尽量让电脑自己解决，就是自动化的解决。编程、写脚本，下软件，反正自己要做的，就是想出让电脑自动解决的办法。如数据备份、轮替等这些电脑都能做，就看你有没有能力让电脑去做。  </p>
<p>问题的处理：首先要精通每个步骤和原理，只有这样，才能知道哪个步骤出错了和从那个点入手、用什么知识去解决问题。这些都是基础，基础扎实了就可以处理很多问题。做项目，也是原理和实际结合的东西。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>关于车</title>
    <url>/posts/2414203280/</url>
    <content><![CDATA[<p>排量：发动机做功的空间。喷空气、油料进去，活塞做功。<br>缸：   就是活塞数，有几个缸就有几个活塞。<br>          活塞连接曲轴，一字排开，旋转做功。<br>          缸的排列有2种，1排，跟曲轴平行排列；2排，跟曲轴平行排列。<br>曲轴：传递动力，曲轴有一段是弯曲的，连接活塞。<br>功率：P=FV P是功率，F是牵引力，V是速度。<br>           P是一定的，档位就是变换F，3档及以下注重F，3档以上注重V<br>换档：就是换齿轮。<br>积碳：发动机上壁由于燃烧不充分而附着了碳粉，会导致排量减少，动力缺失。  </p>
<p><img src="http://img.ph.126.net/sy1swWlpEalVgk4nN7K3Cw==/32088147361895534.png" alt="关于车 - leaf - ------坚持雅操------" title="关于车 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>出口退税申报系统打印报表问题</title>
    <url>/posts/762957521/</url>
    <content><![CDATA[<p><img src="http://img4.ph.126.net/Yy9_sf4K_ZTkfg00UTIm7Q==/1582733794061892894.jpg" alt="出口退税申报系统打印报表问题 - leaf - ------坚持雅操------" title="出口退税申报系统打印报表问题 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>企业在打印设置中，靠页面右上角有横向和纵向可以选择的，企业横向纵向换一下就可以。</p>
<p>转自：<a href="http://wxbshf.zjport.gov.cn/ask/questionDetailt.jspa?fid=201108151257">http://wxbshf.zjport.gov.cn/ask/questionDetailt.jspa?fid=201108151257</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>十年一事无成</title>
    <url>/posts/3972551888/</url>
    <content><![CDATA[<p>2002年高中毕业，大学时没有确定学习方向，像个无头苍蝇乱学一气。到现在还在地面上爬行。。。。。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>十年的电脑，希望还能再用十年</title>
    <url>/posts/4193418519/</url>
    <content><![CDATA[<p>2002年8月买的，原始配置如下：  </p>
<blockquote>
<p>CPU：AMD athlonXP 1800+ 462针<br>主板：双敏大眼怪UKT333<br>内存：DDR-266 256M<br>硬盘：希捷60G<br>网卡：100M/bs<br>显卡：盈通GF MX420<br>光驱：CD光盘<br>软驱：有<br>电源：大水牛<br>机箱：大水牛<br>键鼠：大水牛<br>显示器：飞利浦-17CRT<br>价格：￥5500元  </p>
</blockquote>
<p>2008年  </p>
<blockquote>
<p>显卡风扇被我碰坏了，换了九州风神  V-SHARK(第一次淘宝购物)<br>给显卡内存和主板场效应管加散热贴片<br>光驱换成LG-DVD刻录机  </p>
</blockquote>
<p>2009年  </p>
<blockquote>
<p>电源换成航嘉V2.3电源<br>鼠标键盘坏了，换了一个<br>显示器坏了，换了AOC 19寸液晶</p>
</blockquote>
<p>2010年  </p>
<blockquote>
<p>换了CPU风扇，换成AVC的，转速4000转<br>内存换成DDR-333 512M  </p>
</blockquote>
<p>2012年  </p>
<blockquote>
<p>网卡换成D-LINK无线网卡  </p>
</blockquote>
<p>2013年  </p>
<blockquote>
<p>CPU换成AMD athlonXP 3000+<br>CPU风扇装了调速器<br>内存条加散热贴片  </p>
</blockquote>
<p>以后  </p>
<blockquote>
<p>主板：电容坏了换成固态电容；电感坏了换成固态电感；不能修了换成技嘉GA-7VM400AM带SATA接口<br>显卡：换成GF 6800Ultra  </p>
</blockquote>
<p>现用途：  </p>
<blockquote>
<p>上网，影音，跳舞毯  </p>
</blockquote>
<p><img src="http://img4.ph.126.net/-SxRwUC2USZNjs0Ox5vzFw==/6597701985843127674.jpg" alt="十年的电脑，希望还能再用十年 - leaf - ------坚持雅操------" title="十年的电脑，希望还能再用十年 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>华为ar1220设置端口镜像</title>
    <url>/posts/3822660973/</url>
    <content><![CDATA[<p>system-view</p>
<p>#设置观察端口</p>
<p>observe-port interface  GigabitEthernet 0/0/7</p>
<p>#设置要镜像的端口</p>
<p>interface GigabitEthernet 0/0/2</p>
<p>mirror to observe-port both</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>华为策略路由设置走双线</title>
    <url>/posts/4260766327/</url>
    <content><![CDATA[<p><img src="http://img0.ph.126.net/WM8JhC8ipC1sgiwPTkl0mQ==/6631930882328517807.png" alt="华为策略路由设置走双线 - leaf - ------勤解万难------" title="华为策略路由设置走双线 - leaf - ------勤解万难------"></p>
<p>acl name acl-tocmcc 3600  </p>
<p> rule 5 permit ip source 网段1 0.0.0.255 </p>
<p>acl name acl-toctcc 3601  </p>
<p> rule 5 permit ip source 网段2 0.0.0.255 </p>
<p>acl name acl-toroute 3602  </p>
<p> rule 5 permit ip destination 路由器内网IP 0 </p>
<p>traffic classifier 3 operator or</p>
<p> if-match acl acl-toroute</p>
<p>traffic classifier 2 operator or</p>
<p> if-match acl acl-toctcc</p>
<p>traffic classifier 1 operator or</p>
<p> if-match acl acl-tocmcc</p>
<p>traffic behavior 3</p>
<p>traffic behavior 2</p>
<p> redirect interface Dialer1</p>
<p>traffic behavior 1                        </p>
<p> redirect ip-nexthop 静态IP</p>
<p>traffic policy 1</p>
<p> classifier 3 behavior 3</p>
<p> classifier 2 behavior 2</p>
<p> classifier 1 behavior 1</p>
<p>interface Eth-Trunk1</p>
<p> traffic-policy 1 inbound</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>华为设置管理网段</title>
    <url>/posts/867340037/</url>
    <content><![CDATA[<p><img src="http://img1.ph.126.net/gCjkxtw8xugDoXI-VWT8yw==/6631549351794629980.png" alt="华为设置管理网段 - leaf - ------勤解万难------" title="华为设置管理网段 - leaf - ------勤解万难------"></p>
<p>10.1.11.0   办公网段</p>
<p>10.1.252.0 管理网段</p>
<p>单独给交换机设置IP地址，会导致10.1.11.11访问不了10.1.252.21</p>
<p>需要在S5700S-li上设置一条静态路由</p>
<p>ip route-static 10.1.11.0 24 10.1.252.11</p>
<p>即可</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>各平台科学上网合集</title>
    <url>/posts/286580975/</url>
    <content><![CDATA[<p>goagent，hoststools，shadowsocks，VPN都是全平台通用的。还有个讯600VPN，每次注册能用1个月</p>
<blockquote>
<p>windows下我用goagent，shadowsocks比较多，</p>
<p>linux下我用hoststools（huhamhire-hosts）比较多</p>
<p>macosx下我只用shadowsocks  （看youtube很流畅）</p>
<blockquote>
</blockquote>
<p>android下不二选择，fqroute2</p>
<blockquote>
</blockquote>
<p>ios下我用易联和shadowsocks</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>命令行建kvm</title>
    <url>/posts/312231816/</url>
    <content><![CDATA[<p>一、建kvm  </p>
<blockquote>
<p>1、新建磁盘  </p>
<blockquote>
<p>qemu-img create -f qcow2 centos.img -opreallocation=metadata 30G  </p>
</blockquote>
<p>2、建kvm虚拟机  </p>
<blockquote>
<p>virt-install –name=centos7 –ram=2048 –vcpus=2 –os-type=linux –hvm \<br>--cdrom=/home/ywz/iso/ubuntu-12.04.5-server-amd64.iso \<br>--file=/home/ywz/img/centos7.img,format=qcow2,bus=virtio \<br>--network bridge=virbr0  \<br>--vnc –vncport=5992 –vnclisten=0.0.0.0 –force –autostart  </p>
</blockquote>
<p>3、挂在裸设备(lvm)装虚拟机  </p>
<blockquote>
<p>virt-install –name=centos7-lvm –ram=2048 –vcpus=2 –os-type=linux  –hvm\<br>--cdrom=/home/ywz/iso/centos7-custom.iso \<br>--file=/dev/kvmvg/kvmlv \<br>--network bridge=br0  \<br>--vnc –vncport=5992 –vnclisten=0.0.0.0 –force –autostart  </p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>二、备份kvm虚拟机配置  </p>
<blockquote>
<p>virsh dumpxml centos7-lvm &gt;&gt; centos7-lvm.xml  </p>
</blockquote>
<p>三、xml文件设置  </p>
<blockquote>
<p>CPU方面<br>1、最大可用cpu  </p>
<blockquote>
<p><vcpu placement='static' current='2'>4</vcpu>  </p>
</blockquote>
<p>2、绑定CPU  </p>
<blockquote>
<p>  <cputune><br>    <vcpupin vcpu='0' cpuset='15'/><br>    <vcpupin vcpu='1' cpuset='31'/><br>  </cputune>  </p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>因特网的演进</title>
    <url>/posts/2642647641/</url>
    <content><![CDATA[<p>本章主要讲多媒体应用方面的协议  </p>
<p>多媒体实时传输  </p>
<blockquote>
<p>RTP：  实时传输协议             实现媒体的传输<br>RTCP：实时传输控制协议     控制媒体的传输<br>RTSP：实时流式协议            实现用户对媒体播放的控制  </p>
<p>提供服务质量措施  </p>
<blockquote>
<p>调度：对数据按优先级分类—&gt;加权公平排队<br>管制：主要对速率的控制：平均速率、峰值速率、突发长度<br>intServ<br>RSVP<br>DiffServ  </p>
</blockquote>
</blockquote>
<p>IP电话  </p>
<blockquote>
<p>主要解决2个问题：电话网信令(控制信号)和话音编码<br>有2套标准：H.323和SIP  </p>
</blockquote>
<p>MPLS  </p>
<blockquote>
<p>多协议标记交换：用于解决多种协议之间的数据转发问题<br>采用对第二层的标记使得数据转发由硬件来完成，而不需要上升到第三层再去转发。<br>使用MPLS的路由器称为LSR(标记交换路由器)<br>使用的协议：LDP(标记分配协议)  </p>
</blockquote>
<blockquote>
</blockquote>
<p>ADSL  </p>
<blockquote>
<p>ADSL对电话线使用频分复用技术来传输电话和网络<br>0-4kHZ：电话信号<br>20-50kHZ：上行带宽<br>150-500kHZ或140kHZ-1.1MHZ：下行带宽</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>固态电容品牌</title>
    <url>/posts/993237299/</url>
    <content><![CDATA[<p>转载自：<a href="http://tu.pcpop.com/pic-715464-1.htm">http://tu.pcpop.com/pic-715464-1.htm</a>  </p>
<p>日系<br>1、富士通： FP  </p>
<p><img src="http://img2.ph.126.net/SXwSfif1kmaTHxwlMnpgvA==/1151514129740284542.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------"></p>
<p> 2、尼吉康(蓝宝石)： LE、LF  </p>
<p><img src="http://img2.ph.126.net/4CBHXc7KIfWYzz9xmOeQLw==/66709569497417682.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------"></p>
<p> 3、日化：“口”型</p>
<p><img src="http://img5.ph.126.net/vEE9iI65kphqqeFIdlQMsg==/2746914297736278855.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------"></p>
<p> 4、三洋：紫色+SEPC/SVP  </p>
<p><img src="http://img0.ph.126.net/Z6xaYnt-pfvFnMiBFyDeeg==/2575496036919494930.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------"></p>
<p> 5、富士康为华硕代工：FP5K</p>
<p><img src="http://img8.ph.126.net/iVgQ61AnxCx7nltNTqeddw==/2684989802859937208.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------"></p>
<p>台系<br>1、斐成：粉红色  </p>
<p><img src="http://img6.ph.126.net/0YIIX4dN9nAmkRpTyt_Zbg==/1304073567117458726.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------"></p>
<p> 2、立隆：OCR、OCRZ  </p>
<p><img src="http://img4.ph.126.net/_508R67imRredzmaLpxVrA==/25332747920946034.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------"></p>
<p> 3、万裕：ULR</p>
<p><img src="http://img3.ph.126.net/dOsdYUk_fhpAIKr2GjswDQ==/2519482516554070253.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------">  </p>
<p><img src="http://img1.ph.126.net/wLPoyPCByMdSuPyRsoBcrQ==/622341173524248611.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------"></p>
<p>   </p>
<p> 4、钰邦：一般华硕上用</p>
<p><img src="http://img3.ph.126.net/4MwuF-841c900b6DJYZBew==/2519482516554070263.png" alt="固态电容品牌 - leaf - ------坚持雅操------" title="固态电容品牌 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>域名dns解析</title>
    <url>/posts/3195888254/</url>
    <content><![CDATA[<p>1、dcp.xinnet.com</p>
<p><img src="http://img4.ph.126.net/UYIY532dA89XaitdYjBxfw==/1554304821413916474.jpg" alt="域名dns解析 - leaf - ------坚持雅操------" title="域名dns解析 - leaf - ------坚持雅操------"></p>
<p> 2、选mydns功能</p>
<p> </p>
<p><img src="http://img8.ph.126.net/X6ZVKCCmbkqeLQJnaXjT3A==/2549037389109378278.jpg" alt="域名dns解析 - leaf - ------坚持雅操------" title="域名dns解析 - leaf - ------坚持雅操------"></p>
<p> 3、更改  </p>
<p><img src="http://img1.ph.126.net/DMhVGuKo6MVAEKtIxToGlA==/3074551170628171111.jpg" alt="域名dns解析 - leaf - ------坚持雅操------" title="域名dns解析 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>基础补充1：BIOS</title>
    <url>/posts/3472081138/</url>
    <content><![CDATA[<p>BIOS启动过程：<br>开机<br>-&gt;cpu运行<br> -&gt;CPU通过北桥找到bios程序<br>  -&gt;bios解压自身到内存中<br>   -&gt;bios检查个硬件信息并唤醒<br>    -&gt;bios读取南桥的cmos信息<br>      -&gt;bios把信息整合成smbios表<br>       -&gt;屏幕显示信息（按del键可进bios界面）<br>        -&gt;post自检<br>         -&gt;POST将临时硬件(USB)写入SMBIOS<br>          -&gt;BIOS将MBR中的stage1加载到内存中  </p>
<blockquote>
<p>  -&gt;stage1读取stage1.5以识别文件系统<br>   -&gt;stage1读取stage2<br>    -&gt;stage2读取/boot/grub/grub.conf 并提供选择界面<br>     -&gt;将kernel载入到内存中<br>      -&gt;kernel在内存中建立rootfs空间，将initrd载入到rootfs中<br>       -&gt;按intird里面的init执行相关操作（详谈）  </p>
<blockquote>
<p>-&gt;kernel chroot到硬盘的文件系统中 （详谈）<br> -&gt;执行/etc/inittab<br>  -&gt;显示登陆界面  </p>
</blockquote>
</blockquote>
<p>备注：其实黑苹果很重要的部分就是改SMBIOS信息。dsdt就有这个功能  </p>
<p>BIOS功能：  </p>
<blockquote>
<p>自检所有芯片，并通知芯片启动<br>记录设定值到CMOS中<br>分配IRQ(中断处理)<br>加载引导程序  </p>
</blockquote>
<p>其他：  </p>
<blockquote>
<p>linux下通过dmidecode导出SMBIOS  </p>
<blockquote>
<p>type 0：BIOS Information<br>type 1：System Information 指机型<br>type 2：Base Board Information<br>type 3：Chassis Information<br>type 4：Processor Information<br>type 7：Cache Information   CPU高速缓存信息<br>type 8：Port Connector Information<br>type 9：System Slot Information<br>type 13：BIOS Language Information<br>type 15：System Event Log<br>type 16：Physical Memory Array<br>type 17：Memory Device<br>type 19：Memory Array Mapped Address  </p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>基础补充2：bootloader和GRUB</title>
    <url>/posts/1588026503/</url>
    <content><![CDATA[<p>磁道结构：<br>bootloader-partition table-magic number —stage1.5—分区(boot sector(512B)+存储区域)<br>|&lt;—————MBR————————-&gt;|  </p>
<p>bootloader功能：stage1  </p>
<blockquote>
<p>加载扇区：各扇区之间切换<br>加载核心：通过stage1.5—读取stage2—配置文件—核心  </p>
</blockquote>
<p>GRUB：  </p>
<blockquote>
<p>MBR和stage1的区别  </p>
<p><img src="http://img1.ph.126.net/GQptpHNR7E4qcoZgLTaSaA==/6597161026123611847.png" alt="基础补充2：bootloader和GRUB - leaf - ------坚持雅操------" title="基础补充2：bootloader和GRUB - leaf - ------坚持雅操------">  </p>
<p>配置文件-核心加载方式<br>链接加载  </p>
<blockquote>
<p>rootnoverify (hd0,0)   指定bootloader所在分区<br>chainloader +1           指定为第一个扇区  </p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>基础补充3：initrd.img里的init和/etc/rc.sysinit</title>
    <url>/posts/695420585/</url>
    <content><![CDATA[<p>了解这两个文件对以后制作LFS很有帮助。  </p>
<p>1、调出initrd.img 里的init文件  </p>
<blockquote>
<p>mv initrd.img initrd.gz<br>gunzip initrd.gz<br>cpio -id &lt; initrd 就能看到了  </p>
<p><img src="http://img2.ph.126.net/m66GHfFX_CgNhzDRGsQc0Q==/2232096565415793248.png" alt="基础补充3：initrd.img里的init和/etc/rc.sysinit - leaf - ------坚持雅操------" title="基础补充3：initrd.img里的init和/etc/rc.sysinit - leaf - ------坚持雅操------"></p>
<p> <br>-————————–FC4 init内容—————————–<br>#———开启nash用于执行以下内容，nash同bash，比较小巧。#!是固定格式。—–</p>
<blockquote>
<p>#!/bin/nash        </p>
</blockquote>
<p>#——加载3目录。initrd里面已经有这3个“空”目录了，加载到内存中供kernel使用 ——–<br>#——这3个目录里的文件将由kernel产生<br>#—–需要注意的是/目录是由kernel产生的，而不是initrd提供的。<br>#—–procfs和sysfs是内核层的文件，除了内核，其他都改不了。用于存储硬件和进程相关信息。<br>#—–/dev文件 以tmpfs文件系统来存储<br>#—–tmpfs是建立在内存中的，刚开机由于没有实体设备被加载，所有产生的信息都存在内存中。  </p>
<blockquote>
<p>mount -t proc /proc /proc<br>setquiet<br>echo Mounted /proc filesystem<br>echo Mounting sysfs<br>mount -t sysfs /sys /sys<br>echo Creating /dev<br>mount -o mode=0755 -t tmpfs /dev /dev  </p>
</blockquote>
<p>#———建立设备文件，console用于显示，null和zero起到垃圾桶的作用 ————-<br>#——mknod 主要是建b c  </p>
<blockquote>
<p>mknod /dev/console c 5 1<br>mknod /dev/null c 1 3<br>mknod /dev/zero c 1 5  </p>
</blockquote>
<p>#———————建立伪终端目录、临时暂存—————————–<br>#—–/dev/pts 给ssh和xterm用。<br>#—-/dev/shm 用于提供暂存<br>#—-udev用于动态的管理设备文件，特别是热插拔的设备。改善/dev的问题<br>#—-udev配合/sysfs使用。  </p>
<blockquote>
<p>mkdir /dev/pts<br>mkdir /dev/shm<br>echo Starting udev<br>/sbin/udevstart          #自动从/sys中找到热插拔设备<br>echo -n “/sbin/hotplug” &gt; /proc/sys/kernel/hotplug  </p>
</blockquote>
<p>#——–加载模块——-  </p>
<blockquote>
<p>echo “Loading jbd.ko module”<br>insmod /lib/jbd.ko<br>echo “Loading ext3.ko module”<br>insmod /lib/ext3.ko  </p>
</blockquote>
<p>#—–mkrootdev 主要是把grub.conf里面的 root (hd0,0) 的路径先建立好。<br>#—–将找到的root路径：/dev/root  挂载到initrd的/sysroot下<br>#——然后用switchroot到该目录。正式切到硬盘操作系统的环境中。switchroot同chroot  </p>
<blockquote>
<p>/sbin/udevstart<br>echo Creating root device<br>mkrootdev /dev/root<br>echo Mounting root filesystem<br>mount -o defaults –ro -t ext3 /dev/root /sysroot<br>echo Switching to new root<br>switchroot –movedev /sysroot  </p>
</blockquote>
</blockquote>
<p>2、/etc/rc.sysinit  </p>
<blockquote>
<p>设置3个变量    HOSTNAME,HOSTTYPE,unamer  </p>
</blockquote>
<blockquote>
<p>/etc/sysconfig/network                   设置网络状态<br>HOSTNAME=localhost                  HOSTNAME变量设值<br>mount -n -t proc /proc /proc            挂载/proc<br>/proc/bus/usb                                   检查USB设备文件所需的目录<br>mount -n -t sysfs /sys /sys &gt;/dev/null 2&gt;&amp;1    挂载/sys<br>. /etc/init.d/functions                         设置环境变量<br>设置SELINUX<br>打印welcome to<br>/bin/dmesg                                         设置系统能够记录的等级，当前设置值是1<br>/sbin/start_udev                                 开启udev机制，/etc/udev下所有规则可套用<br>cat /proc/cmdline                              读取grub.conf vmlinuz这一行<br>/proc/sys/kernel/modprobe             加载各硬件模块<br>mount -n /dev/pts                             产生一个tty接口<br>sysctl -e -p /etc/sysctl.conf &gt;/dev/null 2&gt;&amp;1    加载sysctl.conf 设置值<br>/etc/sysconfig/clock                         设置时间种类，如UTC<br>/sbin/hwclock                                   设置系统时间<br>设置hostname<br>/proc/acpi                                          开启ACPI功能<br>/sbin/zfcpconf.sh                               scsi相关<br>/etc/mdadm.conf                               raid相关<br>/sbin/lvm.static                                  LVM相关<br>. /etc/sysconfig/readonly-root           以只读方式挂载文件系统<br>mount -n -o remount,rw /                  以可读可写方式挂载根目录<br>清空SElinux表<br>(&gt; /etc/mtab) &amp;&gt; /dev/null                 清空/etc/mtab<br>从新挂载系统目录<br>/usr/bin/rhgb                                       加载图形开机画面背景，并显示开机进度条<br>进行系统初始设置<br>清除相关文件<br>mkdir -m 1777 -p /tmp/.ICE-unix &gt;/dev/null 2&gt;&amp;1 设定X window所要使用的目录<br>swapon -a -e                                       开启swap交换空间<br>/usr/sbin/system-config-network-cmd        设置网络<br>dmesg -s 131072 &gt; /var/log/dmesg        写入dmesg信息<br>touch /.autofsck &amp;&gt; /dev/null                    建立.autofsck文件，判断是否正常启动还是非正常断电<br>/usr/bin/rhgb-client –sysinit                      告知系统要离开这个脚本了，继续则转到inittab脚本     </p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>基础补充4：ACPI</title>
    <url>/posts/2835944266/</url>
    <content><![CDATA[<p>ACPI:由BIOS、硬件、操作系统共同支持来实现的  </p>
<blockquote>
<p><img src="http://img2.ph.126.net/Gpm_QaMIKP4DnkJXZW3caA==/3032611399098946130.jpg" alt="基础补充4：ACPI - leaf - ------坚持雅操------" title="基础补充4：ACPI - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>ACPI的功能：略  </p>
<blockquote>
<p>IRQ的数目是通过ACPI来实现扩充的。  </p>
</blockquote>
<p>ACPI的各个状态  </p>
<blockquote>
<p>G0(正常)—————–G1(睡眠)—————-G2(可网络唤醒等关机状态)———G3(关机)<br>|S0                              |S1-S4                        |S5<br>|C/D/P State</p>
</blockquote>
<blockquote>
<p>S State：  </p>
<blockquote>
<p>cat /proc/acpi/sleep  </p>
<blockquote>
<p>S0 S3 S4 S5  </p>
</blockquote>
<p>-————————  </p>
</blockquote>
<blockquote>
<p>S0：正常状态<br>S3：待机状态：STR：当前状态存储到内存，未关机<br>S4：休眠状态：STD：当前状态存储到硬盘并关机，从新开机后回到关机前的状态<br>S5：关机状态：包含G2、G3  </p>
</blockquote>
<p>C State：调CPU的状态，如CPU的电压，暂停CPU执行的指令  </p>
<blockquote>
<p>cat /proc/acpi/processor/CPU0/power  </p>
</blockquote>
<p>D State：调设备的用电量：屏幕亮度，空闲时关闭网卡等  </p>
<p>P State：调CPU的频率  </p>
<blockquote>
<p>cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies  </p>
<blockquote>
<p>2900000 2200000 1700000 800000  </p>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>基础补充5：虚拟技术</title>
    <url>/posts/3557292529/</url>
    <content><![CDATA[<p>一：硬件层虚拟化技术：  </p>
<blockquote>
<p>intel：VT-X、VT-D<br>amd：AMD-V、HT<br>需要BIOS开启  </p>
</blockquote>
<p>二：实现虚拟的核心技术：  </p>
<blockquote>
<p><strong>VMM/Hypervisor</strong>：硬件和用户之间的仿真接口</p>
</blockquote>
<blockquote>
<blockquote>
<p><img src="http://img0.ph.126.net/YX2W5DTE54514hXoXqE9Og==/6597449098168650300.jpg" alt="基础补充5：虚拟技术 - leaf - ------坚持雅操------" title="基础补充5：虚拟技术 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> <br>对应虚拟技术的实例：  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/zStYTwbUiIibgz1ostAHHA==/6598124198308483141.png" alt="基础补充5：虚拟技术 - leaf - ------坚持雅操------" title="基础补充5：虚拟技术 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
</blockquote>
<p>三：当前主流虚拟技术：  </p>
<blockquote>
<p>1、xen：       提供仿真接口来调用实体硬件<br>-———上：半虚拟化———–<br>-———下：全虚拟化———–<br>2、vmware：虚拟全部硬件<br>3、kvm：      通过提供核心模块，来使用实体硬件<br>4、openVZ  </p>
</blockquote>
<p>xen和vmware的区别：  </p>
<blockquote>
<p><img src="http://img0.ph.126.net/CHSaLmPcx-0xfkWLSZmXWw==/6597322654331553177.jpg" alt="基础补充5：虚拟技术 - leaf - ------坚持雅操------" title="基础补充5：虚拟技术 - leaf - ------坚持雅操------">  </p>
</blockquote>
<p>kvm：  </p>
<blockquote>
<p><img src="http://img0.ph.126.net/JCB2a1r16DZ7H_1GB1t6dw==/6597235792914302622.jpg" alt="基础补充5：虚拟技术 - leaf - ------坚持雅操------" title="基础补充5：虚拟技术 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<blockquote>
<p>   </p>
</blockquote>
<p>参考：<br><a href="http://vps.gl/vps/29.html">http://vps.gl/vps/29.html</a><br><a href="http://bbs.lampbrother.net/read-htm-tid-121607.html">http://bbs.lampbrother.net/read-htm-tid-121607.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>基础补充6：fc4下编译核心</title>
    <url>/posts/2780110138/</url>
    <content><![CDATA[<p>1、安装kernel源码  </p>
<blockquote>
<p>rpm -ivh  kernel-2.6.11-1.1369_FC4.src.rpm  </p>
</blockquote>
<p>2、做编译环境  </p>
<blockquote>
<p>cd /usr/src/redhat/SPECS<br>grep ifarch kernel-2.6.spec<br>rpmbuild -bp –target=i686 kernel-2.6.spec  </p>
</blockquote>
<blockquote>
<p>cd ../BUILD/kernel-2.6.11<br>cp /boot/config-2.6.11-1.1369.fc4  .config  </p>
</blockquote>
<p>3、编译  </p>
<blockquote>
<p>make oldconfig<br>make menuconfig<br>make  </p>
</blockquote>
<p>4、安装模块  </p>
<blockquote>
<p> 安装ntfs模块<br>cp /usr/src/redhat/BUILD/kernel/linux/fs/ntfs/ntfs.ko /lib/modules/2.6/kernel/fs/ntfs/<br>depmod -a  </p>
<p>该模块只提供读的功能，不支持写</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>基础补充7：FC4安装Geforce MX 420驱动</title>
    <url>/posts/1267475429/</url>
    <content><![CDATA[<p>0、安装编译环境。  </p>
<blockquote>
<p>主要是安装kernel-src ，kernel-devel ，gcc , glibc , ncurse 等。  </p>
</blockquote>
<p>1、下载nvidia驱动  </p>
<blockquote>
<p><a href="http://www.nvidia.cn/object/unix-cn.html">http://www.nvidia.cn/object/unix-cn.html</a><br>我下载的是NVIDIA-Linux-x86-96.43.23-pkg1.run。已经加了x权限了。  </p>
</blockquote>
<p>2、进 init 3环境  </p>
<blockquote>
<p>nano /etc/inittab     </p>
<p>　　id:5:initdefault:   把5改为3  </p>
</blockquote>
<p>3、安装nvidia驱动  </p>
<blockquote>
<p>sh NVIDIA-Linux-x86-96.43.23-pkg1.run<br>然后点配置xorg.conf文件。 或者运行 nvidia-xconfig 也可以  </p>
</blockquote>
<p>4、进init 5 环境  </p>
<blockquote>
<p>改 /etc/inittab  </p>
<blockquote>
<p>id:3:initdefault:   把3改为5</p>
</blockquote>
</blockquote>
<p>5、遇到的问题（问题才开始）  </p>
<blockquote>
<p>（EE） failed to initialize GLX Extension<br>1、看/var/log/Xorg.0.log ，模块的存放地址没有问题(/usr/X11R6/xorg/modules)<br>2、init 3，然后modprobe nvidia 能加载nvidia，startx正常。说明驱动安装没有问题。<br>3、感觉应该是图形启动之前模块还没加载，导致这个问题。  </p>
<blockquote>
<p>做法是在电脑开机加载模块的时候添加显卡模块。<br>cd /etc/sysconfig/modules/<br>nano nvidia.modules<br>加入 /sbin/modprobe nvidia 保存。  </p>
</blockquote>
<p>进度条的时候白屏死机<br>进/etc/X11/xorg.conf   设置成16位色  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>基础补充8：X window</title>
    <url>/posts/179208481/</url>
    <content><![CDATA[<p>1、只开X server 。一片黑屏，鼠标可以动  </p>
<blockquote>
<p>X :1&amp;  </p>
<p><img src="http://img1.ph.126.net/DewYm4SOrcTGz8A4WqtyCA==/6619130367956356525.jpg" alt="基础补充8：X window - leaf - ------坚持雅操------" title="基础补充8：X window - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>2、开X client 。屏幕左上角有终端输入界面，但是没有窗口,不能移动  </p>
<blockquote>
<p>xterm -display ：1&amp;  </p>
<p><img src="http://img0.ph.126.net/FId_qUF5cLsqT31gHlh5-Q==/887490601669063227.jpg" alt="基础补充8：X window - leaf - ------坚持雅操------" title="基础补充8：X window - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>3、开窗口管理器，twm或者metacity 。有窗口，还可以移动  </p>
<blockquote>
<p>twm -display :1 -f /etc/X11/twm/system.twmrc &amp;<br>或者<br>metacity -display :1&amp;  </p>
<p><img src="http://img2.ph.126.net/jwi6o_qmZj1nSWmxpMCstQ==/145241088082979159.jpg" alt="基础补充8：X window - leaf - ------坚持雅操------" title="基础补充8：X window - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/vgEWzw9txT0xb9imd50knA==/887490601669063228.jpg" alt="基础补充8：X window - leaf - ------坚持雅操------" title="基础补充8：X window - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>4、Widget   图形库  </p>
<blockquote>
<p>包括gtk+ 和QT 。窗口的颜色，按钮，图案啥的都需要图形库的支持  </p>
</blockquote>
<p>5、Display Manager  </p>
<blockquote>
<p>提供登陆界面和 会话协议XDMCP  </p>
</blockquote>
<p>6、Desktop Manager  </p>
<blockquote>
<p>包括gnome、KDE等 。<br>是以上的集合，然后再加上自行开发的界面。  </p>
</blockquote>
<p>init5和startx的区别  </p>
<blockquote>
<p>init 5  </p>
</blockquote>
<p><img src="http://img1.ph.126.net/U-DEBwBEJ4tm1B-mvJrwtg==/2206200867558479713.png" alt="基础补充8：X window - leaf - ------坚持雅操------" title="基础补充8：X window - leaf - ------坚持雅操------">  </p>
<blockquote>
<p>startx  </p>
</blockquote>
<p> </p>
<p><img src="http://img0.ph.126.net/SfJv_fMGdbtlnwy2Pc1KjQ==/3261169080270047412.png" alt="基础补充8：X window - leaf - ------坚持雅操------" title="基础补充8：X window - leaf - ------坚持雅操------"></p>
<p>   </p>
<blockquote>
<p>init 5 是启动prefdm，然后通过gdm启动X server。进gnome会话后还要开启Xsession登陆界面<br>startx 是启动xinit来启动X server，然后直接进gnome会话  </p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>学习ldap:2安装openldap</title>
    <url>/posts/3898123418/</url>
    <content><![CDATA[<p>安装：openssl+berkeleydb+sasl+mit kerberos+openldap<br>参考：<a href="http://www.linuxfromscratch.org/blfs/view/svn/index.html">http://www.linuxfromscratch.org/blfs/view/svn/index.html</a>  </p>
<p>1、openssl<br><a href="http://www.openssl.org/source/openssl-1.0.1c.tar.gz">http://www.openssl.org/source/openssl-1.0.1c.tar.gz</a><br><a href="http://www.linuxfromscratch.org/patches/blfs/svn/openssl-1.0.1c-fix/_manpages-1.patch">http://www.linuxfromscratch.org/patches/blfs/svn/openssl-1.0.1c-fix\_manpages-1.patch</a>  </p>
<blockquote>
<p>patch -Np1 -i ../openssl-1.0.1c-fix_manpages-1.patch<br>./config  shared<br>make<br>make  install  </p>
</blockquote>
<p>2、BerkeleyDB<br><a href="http://download.oracle.com/berkeley-db/db-5.3.21.tar.gz">http://download.oracle.com/berkeley-db/db-5.3.21.tar.gz</a>  </p>
<blockquote>
<p>cd build_unix                        ../dist/configure<br>make<br>make  install<br>ln -v -sf  /usr/local/BerkeleyDB.5.3/include/* /usr/include<br>ln -v -sf  /usr/local/BerkeleyDB.5.3/lib/*     /usr/lib  </p>
</blockquote>
<p>3、Cyrus SASL<br><a href="http://ftp.andrew.cmu.edu/pub/cyrus-mail/cyrus-sasl-2.1.25.tar.gz">http://ftp.andrew.cmu.edu/pub/cyrus-mail/cyrus-sasl-2.1.25.tar.gz</a><br><a href="http://www.linuxfromscratch.org/patches/blfs/svn/cyrus-sasl-2.1.25-fixes-1.patch">http://www.linuxfromscratch.org/patches/blfs/svn/cyrus-sasl-2.1.25-fixes-1.patch</a>  </p>
<blockquote>
<p>patch -Np1 -i ../cyrus-sasl-2.1.25-fixes-1.patch<br>./configure<br>make<br>make install<br>ln -s /usr/local/lib/sasl2 /usr/lib/sasl2  </p>
</blockquote>
<p>4、mit kerberos<br><a href="http://web.mit.edu/kerberos/www/dist/krb5/1.11/krb5-1.11-signed.tar">http://web.mit.edu/kerberos/www/dist/krb5/1.11/krb5-1.11-signed.tar</a>  </p>
<blockquote>
<p>cd src  </p>
</blockquote>
<blockquote>
<p>./configure  –prefix=/usr  –localstatedir=/var/lib    –enable-dns-for-realm<br>make<br>make install<br>for LIBRARY in gssapi_krb5 gssrpc k5crypto kadm5clnt_mit kadm5srv_mit \<br>               kdb5 krb5 krb5support verto ; do<br>    chmod -v 755 /usr/lib/lib$LIBRARY.so.*.*<br>done &amp;&amp;<br>mv -v /usr/lib/libkrb5.so.3*        /lib &amp;&amp;<br>mv -v /usr/lib/libk5crypto.so.3*    /lib &amp;&amp;<br>mv -v /usr/lib/libkrb5support.so.0* /lib &amp;&amp;<br>ln -v -sf ../../lib/libkrb5.so.3.3        /usr/lib/libkrb5.so        &amp;&amp;<br>ln -v -sf ../../lib/libk5crypto.so.3.1    /usr/lib/libk5crypto.so    &amp;&amp;<br>ln -v -sf ../../lib/libkrb5support.so.0.1 /usr/lib/libkrb5support.so &amp;&amp;<br>mv -v /usr/bin/ksu /bin &amp;&amp;<br>chmod -v 755 /bin/ksu   &amp;&amp;<br>install -v -dm755 /usr/share/doc/krb5-1.11 &amp;&amp;<br>cp -vfr ../doc/*  /usr/share/doc/krb5-1.11 &amp;&amp;<br>unset LIBRARY  </p>
</blockquote>
<p>5、openldap<br><a href="ftp://ftp.openldap.org/pub/OpenLDAP/openldap-release/openldap-2.4.33.tgz">ftp://ftp.openldap.org/pub/OpenLDAP/openldap-release/openldap-2.4.33.tgz</a><br><a href="http://www.linuxfromscratch.org/patches/blfs/svn/openldap-2.4.33-blfs/_paths-1.patch">http://www.linuxfromscratch.org/patches/blfs/svn/openldap-2.4.33-blfs\_paths-1.patch</a><br><a href="http://www.linuxfromscratch.org/patches/blfs/svn/openldap-2.4.33-symbol/_versions-1.patch">http://www.linuxfromscratch.org/patches/blfs/svn/openldap-2.4.33-symbol\_versions-1.patch</a><br><a href="http://www.linuxfromscratch.org/patches/blfs/svn/openldap-2.4.33-ntlm-1.patch">http://www.linuxfromscratch.org/patches/blfs/svn/openldap-2.4.33-ntlm-1.patch</a>  </p>
<blockquote>
<p>patch -Np1 -i ../openldap-2.4.33-ntlm-1.patch<br>patch -Np1 -i ../openldap-2.4.33-blfs_paths-1.patch<br>patch -Np1 -i ../openldap-2.4.33-symbol_versions-1.patch<br>autoconf<br>./configure \  </p>
<blockquote>
<p>--with-tls=openssl \<br>--enable-spasswd \<br>--disable-static \<br>--disable-debug \<br>--enable-dynamic \<br>--enable-crypt \<br>--enable-modules \<br>--enable-rlookups \<br>--enable-backends=mod \<br>--enable-overlays=mod \<br>--disable-ndb \<br>--disable-sql  </p>
</blockquote>
<p>make depend    #config结束后会提示这一步操作<br>make test          #全部通过<br>make<br>make install  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>学习ldap：1概述</title>
    <url>/posts/2420451105/</url>
    <content><![CDATA[<p>我看的是这两本书：  </p>
<blockquote>
<p>WindowsServer2003活动目录_商宏图<br>ldap系统管理_蒋大伟 (繁体版)  </p>
</blockquote>
<p>windows AD 把ldap和域控等功能做的很好了。看windows AD 对于理解概念，对于了解DNS+LDAP+域控+权限+域管理+集成应用程序等运作很有帮助。  </p>
<p>目录服务：  </p>
<blockquote>
<p>目录：存放信息的一个存放地。  </p>
</blockquote>
<blockquote>
<p>服务：提供存放和查询等功能。<br>目录服务：提供存放信息的场所和向用户提供查询服务。<br>DNS就是目录服务：其储存域名&lt;—&gt;IP的对应 并提供给用户查询<br>和数据库的区别：目录服务侧重查询功能，而数据库侧重存储功能。  </p>
</blockquote>
<p>LDAP：  </p>
<blockquote>
<p>用于规范目录服务存取和查询等功能的协议。<br>规范的内容：ldif文档语法，纲要定义，属性、属性的类型、属性的值，如何认证，如何构建目录树，如何做主从目录服务。  </p>
</blockquote>
<blockquote>
<p>LDAP的结构：  </p>
<blockquote>
<p>dc-ou-cn-cn的值(存储资料)<br>各节点都包含属性类型objectclass，属性类型确定该节点能存储那些信息。  </p>
<p>纲要(schema)：相当于数据结构，它被用来决定数据怎样被存储<br>属性类型：相当于变量类型，确定能存储那些信息。  </p>
<blockquote>
<p>objectclass：结构物件类别。<br>dcobject：辅助类别，用于增加可存储的资料内容  </p>
</blockquote>
<blockquote>
<p>ldap使用OID对属性类型进行标识，确保唯一。  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>LDAP的安全：  </p>
</blockquote>
<blockquote>
<blockquote>
<p>通道安全：SSL、StartTLS、SASL<br>认证：匿名，明文密码，加密密码，结合加密通道的加密密码，使用其他软件进行认证<br>授权(acl)：设置读写ldap目录的权限。  </p>
</blockquote>
</blockquote>
<blockquote>
<p>LDAP和应用程序的整合  </p>
<blockquote>
<p>MAIL<br>SAMBA<br>FTP<br>CUPS<br>windowsAD  </p>
</blockquote>
</blockquote>
<p>要学的内容包括：<br>ldap各功能介绍，ldif文档介绍<br>openldap安装和配置文件说明<br>ldap认证<br>ldap整合</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>安装 minicom</title>
    <url>/posts/2051443138/</url>
    <content><![CDATA[<p>公司有台h3c s3600 闲置，刚好拿来练习用<br>1、安装<br>sudo apt-get install minicom  </p>
<p>2、配置<br>sudo minicom -s<br>选择Serial port setup。设置A,B,E等为如下所示，并保存。 A -    Serial Device      : /dev/ttyUSB0    #直接插com口就用/dev/ttyS0,com转usb接口就用/dev/ttyUSB0 B - Lockfile Location     : /var/lock                                 <br>     C -   Callin Program      :                                          <br>     D -  Callout Program      :                                          <br>     E -    Bps/Par/Bits       : 9600 8N1                                 <br>     F - Hardware Flow Control : Yes                                       <br>     G - Software Flow Control : No<br>设置“Modem and dialing”，将A,B,K这三项的值去掉。  </p>
<p>3、相关命令及快捷键<br>-、保存屏幕的所有显示 minicom -C 文件名<br>     或者 minicom 登录后再快捷键 CTRL+a 再输入l 会提示输入要保存的文件名，保存位置为当前文件夹<br>-、<br>ctrl+a +z 显示帮助文件<br>ctrl+a +o 配置串口<br>ctrl+a +x 退出<br>ctrl+a +c 清屏<br>ctrl+a +k 刷新屏幕<br>ctrl+a +j 挂起minicom  </p>
<p>参考：<br>1、<a href="http://blog.csdn.net/olive10000/archive/2009/03/01/3946891.aspx">linux超级终端</a><br>2、<a href="http://apps.hi.baidu.com/share/detail/17380252">minicom使用介绍</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>安装 VCSA 6</title>
    <url>/posts/998840505/</url>
    <content><![CDATA[<p>一、我部署的是嵌入式模式。  </p>
<blockquote>
<p>所谓的vcsa部署，就是在esxi上面装一个虚拟机而已。  </p>
</blockquote>
<p>二、对该虚拟机的要求是：最小是双核，8G内存。  </p>
<blockquote>
<p>该要求不是针对安装VMware-ClientIntegrationPlugin-6.0.0.exe的windows系统的。  </p>
</blockquote>
<p>三、我下载的是vcsa的linux版本。  </p>
<p>1、连接esxi  </p>
<p><img src="http://img1.ph.126.net/5-VQd2EL9vflWP86Z0xHaA==/6608500289539539973.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
<p> <br>2、新建虚拟机，设置的密码为登陆虚拟机的密码  </p>
<p><img src="http://img1.ph.126.net/AHDbx0ZCPY5j_W3XMtBa2w==/6598274831460123562.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
<p> <br>3、我安装的是嵌入式的  </p>
<p><img src="http://img0.ph.126.net/-8GOhPIwFVy0vkY6w-Iozg==/6630719220515633301.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
<p> <br>4、设置域，该域提示说不能和AD一样  </p>
<blockquote>
<p>这里的密码是登陆 web client的密码，账号就是administrator@域名  </p>
</blockquote>
<p><img src="http://img2.ph.126.net/I_wRJVoK_7tb9R5JGvk0GQ==/2487957319163734031.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
<p> <br>5、这里说明了虚拟机的配置要求  </p>
<p><img src="http://img2.ph.126.net/eqkgkiTGDmgHlVSSMzbXzw==/6631308558750196301.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
<p> <br>6、虚拟机存放位置  </p>
<p><img src="http://img0.ph.126.net/5ipcgGKpIazPKUIAhISOqw==/6631306359726940788.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
<p> <br>7、安装了嵌入式的数据库  </p>
<p><img src="http://img0.ph.126.net/YB-xSeVqTlkG4t5tFI8r-A==/6597170921728686795.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
<p> <br>8、设置虚拟机网络  </p>
<p><img src="http://img1.ph.126.net/6wm5JB9WA5QrBqgrrDFuHg==/6598275930971751355.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
<p> <br>9、安装完毕  </p>
<p><img src="http://img1.ph.126.net/at0Q2Nof1tBsLBxYc_3hCg==/6619251314236185709.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
<p> <br>10、虚拟机的界面。  </p>
<p><img src="http://img1.ph.126.net/oJRzII8jAhr_z5SOaoqSDg==/6630616965934467178.png" alt="安装 VCSA 6 - leaf - ------勤解万难------" title="安装 VCSA 6 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>安装SDM、GNS3、CRT等</title>
    <url>/posts/3426435949/</url>
    <content><![CDATA[<p>以下在win下做的<br>软件<br>1、sdm-v2.5 (cisco官网上有)<br>2、java (安装sdm的时候会提示下载的)<br>3、<a href="http://www.gns3.net/download/">GNS3</a> 我下载的是all in one<br>4、<a href="http://www.verycd.com/topics/170716/">思科IOS文件</a> <a href="http://www.verycd.com/topics/170716/"></a>下第一个，我用的是unzip-c7200-advsecurityk9-mz.124-11.T.bin<br>5、securecrt 我用的是汉化版<br>6、建记事本，写一个 <a href="http://hi.baidu.com/husted/blog/item/d93e0686f069053fc75cc379.html">DyRouter.vbs</a> 文件  </p>
<p>安装<br>参考以下内容：<br>1、<a href="http://wenku.baidu.com/view/b7978a5c3b3567ec102d8ad8.html">在GNS3下使用Cisco SDM 的教程</a>   里面的loopback是可以用的<br>2、<a href="http://wenku.baidu.com/view/c3e146e84afe04a1b071deb7.html">GNS+CRT使用方法</a><br>3、<a href="http://hi.baidu.com/husted/blog/item/d93e0686f069053fc75cc379.html">GNS3 DyRouter.vbs 文件</a>  </p>
<p>另：ubuntu下安装gns3很方便：sudo apt-get install gns3  即可  </p>
<p>后记：<br>我在2个虚拟机上安装了2次，有一次是路由器启动不起来，不知道怎么回事<br>另外CCNA书上说的双击点编辑按钮还是点不了，不知道是不是sdm文件的问题<br>反正也不是重点，无所谓了<br><a href="http://www.gns3.net/download/"></a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[安装记录]0、安装系统</title>
    <url>/posts/102690734/</url>
    <content><![CDATA[<p>20140805  </p>
<blockquote>
<p>关于版本选择  </p>
<blockquote>
<p>一般如果不是运行大型软件的话装32位系统就好了，（如单一软件需要调用4G以上内存）<br>至于内存容量超过4G的，可以安装PAE内核，支持到64G内存  </p>
</blockquote>
<p>关于分区  </p>
<blockquote>
<p>家用一般分三个区就好了  </p>
</blockquote>
<blockquote>
<p>/  </p>
</blockquote>
<blockquote>
<p>/home<br>swap</p>
</blockquote>
</blockquote>
<p>20100124<br>分区(硬盘：300G；内存：2G为例)</p>
<p>/root         10G</p>
<p>/home     246G</p>
<p>/usr           20G</p>
<p>/var           10G</p>
<p>/tmp          10G</p>
<p>swap          4G</p>
<p>备注：<br>20100124认为：/boot，/var，/tmp在自用系统中多没必要分出来<br>20110413认为：/root应该尽量小一点，所以把/var和/tmp也分出来了  </p>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[安装记录]1、更新源</title>
    <url>/posts/3804959260/</url>
    <content><![CDATA[<p><strong>1、</strong>编辑 sources.list  </p>
<blockquote>
<p>打开应用程序-附件-终端<br>sudo mv /etc/apt/sources.list /etc/apt/sources.list.old<br>sudo gedit /etc/apt/sources.list  </p>
</blockquote>
<blockquote>
<p>添加源列表(没必要全部添加，添加2、3组即可)  </p>
</blockquote>
<p>#源列表：<br>#<a href="http://wiki.ubuntu.org.cn/index.php?title=Qref/Source&variant=zh-cn#Karmic.289.10.29_.E7.89.88.E6.9C.AC">http://wiki.ubuntu.org.cn/index.php?title=Qref/Source&amp;variant=zh-cn#Karmic.289.10.29_.E7.89.88.E6.9C.AC</a>  </p>
<p>2、保存后更新  </p>
<blockquote>
<p>sudo apt-get update  </p>
</blockquote>
<p>碰到身份验证问题<br>W: GPG签名验证错误： <a href="http://ppa.launchpad.net/">http://ppa.launchpad.net</a> karmic Release: 由于没有公钥，下列签名无法进行验证： NO_PUBKEY 6AF0E1940624A220  </p>
<p>解决方法：  </p>
<blockquote>
<p>gpg –keyserver subkeys.pgp.net –recv 0624A220<br>gpg –export –armor 0624A220 | sudo apt-key add -<br>(gpg有关内容参考gpg篇)</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[安装记录]2、系统设置</title>
    <url>/posts/2396266300/</url>
    <content><![CDATA[<p>20140805关闭访客访问</p>
<blockquote>
<p>sudo gedit /etc/lightdm/lightdm.conf</p>
<p>添加</p>
<p>[SeatDefaults]</p>
<p>user-session=ubuntu</p>
<p>greeter-session=unity-greeter</p>
<p>allow-guest=false</p>
</blockquote>
<p>1、右键菜单添加终端选项<br> sudo apt-get install nautilus-open-terminal</p>
<p>2、标题栏控制按钮放在右边<br>      gconf-editor<br>     apps-metacity-general-button_layout:menu:minimize,maximize,close  </p>
<p>3、安装字体<br> 在/home/ywz/ 新建文件夹 .fonts<br> 把windows、macosx 的 *.ttf 文件放到里面即可  </p>
<p>4、设置输入法<br>      新装的系统输入法是 ctrl+space<br>      改为 ctrl+shift_L： 要先按住shift_L 在按其他键 才行</p>
<p>5、indicator-applet-session 设置(安装thunderbird之后)<br> 设定右上方的indicator-applet，以Thunderbird取代预设的Evolution<br> sudo gedit /usr/share/indicators/messages/applications/thunderbird     #新建<br> 添加一行： /usr/share/applications/thunderbird.desktop                #thunderbird先安装好<br> 保存即可  </p>
<p>6、在桌面上显示我的电脑等图标<br> 打开配置编辑器:gconf-editor<br> 选择 apps → nautilus → desktop<br> 勾选 computer_icon_visible、home_icon_visible 和 trash_icon_visible 边上的复选框。<br> 或者<br> tweak里面设置</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[安装记录]2、(补充) 在内核升级后自动安装nvdia驱动</title>
    <url>/posts/2270031191/</url>
    <content><![CDATA[<p><a href="http://forum.ubuntu.org.cn/viewtopic.php?f=42&t=141431&start=0">http://forum.ubuntu.org.cn/viewtopic.php?f=42&amp;t=141431&amp;start=0</a>  </p>
<p>如果你使用的是在nv的官方网站下载的驱动，<br>每当内核升级后，你必须重新手动安装nv驱动。<br>本指南目标是当内核升级后自动进行安装驱动的过程，而不需要手工干预。  </p>
<p>第一步，把你使用的驱动放到/usr/src下，并生成链接。例如：<br>sudo mv NVIDIA-Linux-x86-173.14.05-pkg1.run /usr/src<br>sudo ln -s /usr/src/NVIDIA-Linux-x86-173.14.05-pkg1.run /usr/src/nvidia-driver  </p>
<p>这样做的目的是当你更换所用的驱动时，只需要删除原来的链接后再指定新的链接即可，<br>不需要改变我们将使用的脚本(     script      )。  </p>
<p>自动安装nv驱动的脚本如下：  </p>
<p><strong>代码:</strong></p>
<p>#!/bin/bash  </p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p># Set this to the exact path of the nvidia driver you plan to use<br># It is recommended to use a symlink here so that this       script       doesn’t<br># have to be modified when you change driver versions.  </p>
<p>DRIVER=/usr/src/nvidia-driver  </p>
<p># Build new driver if it doesn’t exist  </p>
<p>if [ -e /lib/modules/$1/kernel/drivers/video/nvidia.ko ] ; then  </p>
<p>    echo “NVIDIA driver already exists for this kernel.” &gt;&amp;2  </p>
<p>else  </p>
<p>    echo “Building NVIDIA driver for kernel $1” &gt;&amp;2  </p>
<p>    sh $DRIVER -K -k $1 -s -n 2&gt;1 &gt; /dev/null  </p>
<p>    if [ -e /lib/modules/$1/kernel/drivers/video/nvidia.ko ] ; then  </p>
<p>        echo “   SUCCESS: Driver installed for kernel $1” &gt;&amp;2  </p>
<p>    else  </p>
<p>        echo “   FAILURE: See /var/log/nvidia-installer.log” &gt;&amp;2  </p>
<p>    fi<br>fi  </p>
<p>exit 0</p>
<p>基本上，原理是检查新安装的内核是否安装了正确的nv驱动，<br>如果没有，脚本将自动为新内核安装驱动模块。  </p>
<p>把上面的脚本命名为update-nvidia，并通过如下命令安装：  </p>
<p>sudo mkdir -p /etc/kernel/postinst.d<br>sudo install update-nvidia /etc/kernel/postinst.d</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[安装记录]3、软件安装</title>
    <url>/posts/4017097126/</url>
    <content><![CDATA[<p>20140805安装ubuntu14.04 32位  </p>
<blockquote>
<p>该版本中已经有很多国产软件原生支持了。日常办公一点问题都没有<br>WPS<br>foxitreader<br>搜狗拼音<br>迅雷xware-desktop<br>金山快盘<br>百度云盘bcloud<br>傲游<br>深度影音<br>深度音乐<br>skype<br>犹客助手  </p>
<p>迅雷关联firefox  </p>
<blockquote>
<p>flashgot 添加xware-desktop，软件地址:/usr/bin/xware-desktop，[URL]  </p>
</blockquote>
<p>深度软件安装  </p>
<blockquote>
<p>sudo add-apt-repository ppa:noobslab/deepin-sc<br>sudo apt-add-repository ppa:mc3man/trusty-media<br>sudo apt-get update<br>sudo apt-get install deepin-music-player deepin-media-player  </p>
</blockquote>
</blockquote>
<p>安装软件可参考：<br><a href="http://wiki.ubuntu.org.cn/index.php?title=Qref/Apps&variant=zh-cn#.E5.AD.97.E5.85.B8.E7.BF.BB.E8.AF.91">http://wiki.ubuntu.org.cn/index.php?title=Qref/Apps&amp;variant=zh-cn#.E5.AD.97.E5.85.B8.E7.BF.BB.E8.AF.91</a><br>-———————————————————————<br> 说明：</p>
<blockquote>
<p>由于没有公钥，下列签名无法进行验证：NO_PUBKEY 4A1382065BC3E400<br>gpg –keyserver subkeys.pgp.net –recv 5BC3E400<br>gpg –export –armor 5BC3E400 | sudo apt-key add -  </p>
</blockquote>
<p>-——————————————————————–<br>ubuntu-tweak  </p>
<blockquote>
<p><a href="http://ubuntu-tweak.com/">http://ubuntu-tweak.com/</a><br>安装该软件后，在安装其他软件就简单多了  </p>
</blockquote>
<blockquote>
<p>tweak软件中心：  </p>
</blockquote>
<blockquote>
<p>   开发工具  </p>
<blockquote>
<p>geany                        轻量级 IDE  </p>
</blockquote>
<p>   EMAIL  </p>
<blockquote>
<p>thunderbird email  </p>
</blockquote>
<p>   模拟器  </p>
<blockquote>
<p>wine  </p>
</blockquote>
<p>  图像处理<br>          Dia                              画图表</p>
<p> gimp                           类似PS  </p>
<p> 即时消息</p>
<p> pidgin 互联网<br> filezilla                        FTP工具<br> liferea                         rss阅读工具<br> 多媒体<br>  exaile  音乐播放软件<br> pitivi                           视频编辑<br> smplayer                   视频播放<br> vlc                              视频播放<br> cheese                      摄像头  </p>
<p> 实用工具<br> p7zip-full                    压缩软件</p>
<p> PDF-Shuffler              PDF相关</p>
<p> 其他<br> adobe flash 插件<br> ubuntu额外得版权受限软件  </p>
</blockquote>
<p>-—————————————————————————————————-<br>常用软件  </p>
<p>1、办公：  </p>
<blockquote>
<p>永中OFFICE<br>WPS Office<br>Xmind                               思维导图            <a href="http://www.xmind.net/">http://www.xmind.net/</a><br>星际译王：                        类似金山词霸， sudo apt-get install stardict<br>星际译王词典：                 <a href="http://hi.baidu.com/liuweigang525/item/7a251bb6a345e571244b09cb">http://hi.baidu.com/liuweigang525/item/7a251bb6a345e571244b09cb</a><br>gambas                             类似vb编程       sudo apt-get install gambas2-ide<br>农历：                               显示日历，        sudo apt-get install lunar-applet<br>pdf相关<br>foxitreader:                        pdf阅读器，      <a href="http://www.fuxinsoftware.com.cn/downloads/">http://www.fuxinsoftware.com.cn/downloads/</a><br>xournal pdf编辑软件  sudo apt-get install xournal<br>Master PDF Editor             pdf编辑器        <a href="http://code-industry.net/downloads.php">http://code-industry.net/downloads.php</a>  </p>
</blockquote>
<p>2、网络：  </p>
<blockquote>
<p>wine-thunder   </p>
<p>skype                                <a href="http://skype.tom.com/download/linux.html">http://skype.tom.com/download/linux.html</a> 详见：软件设置<br>rtx                                     详见：软件设置</p>
<p>网络安全  </p>
<p>gufw                                  防火墙                  sudo apt-get install gufw<br>arptables:                         防ARP软件            sudo apt-get install arptables</p>
<p>wirechark                         抓包软件                sudo apt-get install wireshark<br>ntop                                  网络监控                sudo apt-get install ntop<br>nbtscan                            局域网扫描工具     sudo apt-get install nbtscan  </p>
</blockquote>
<p>3、维护：</p>
<blockquote>
<p>unetbootin                        制作启动U盘工具<br>remastersys                     备份和lived CD制作  </p>
<p>ailurus                              linux版优化大师   <a href="http://code.google.com/p/ailurus/">http://code.google.com/p/ailurus/</a></p>
<p>cpu-g:                               cpu-z for linux     <a href="http://cpug.sourceforge.net/">http://cpug.sourceforge.net/</a><br>gparted:                            分区工具             sudo apt-get install gparted</p>
<p>bleachbit                          系统清理工具      sudo apt-get install bleachbit<br>Grub Customizer              grub前端：         sudo apt-get install grub-customizer<br>backintime                        系统还原 <a href="https://launchpad.net/%7Ebit-team/+archive/stable/+packages">https://launchpad.net/~bit-team/+archive/stable/+packages</a><br>UCloner：                        备份软件， <a href="http://co<wbr>de.google.com/p/ucloner/">http://code.google.com/p/ucloner/</a>  </p>
</blockquote>
<p>4、影音图像:  </p>
<blockquote>
<p>flash播放器：                 sudo apt-get install swfdec-gnome  </p>
<p>音频CD 榨汁机               提取CD音乐用         sudo apt-get install sound-juicer<br>gpicview：                      图片查看器                         sudo apt-get install gpicview<br>gThumb ：                     图片浏览器，批量处理        sudo apt-get install gthumb<br>arista  transcoder           视频转换   sudo apt-get install arista<br>HandBrake                     视频转换  </p>
</blockquote>
<p>5、专项软件:  </p>
<blockquote>
<p>GNS3                               思科路由器模拟     <a href="http://www.gns3.net/">http://www.gns3.net/</a><br>Packettracer<br>aspire                              <a href="http://cisco.netacad.net/cnams/resourcewindow/noncurr/downloadTools/app_files/passport21/Aspire_Beta4_setup.exe?userid=3774625&fileExt=.exe">右击迅雷下载</a>    时间要改到2011年才能玩  </p>
</blockquote>
<blockquote>
<p>draftsight：                      linux下免费cad软件   <a href="http://www.3ds.com/products/draftsight/free-cad-software/">http://www.3ds.com/products/draftsight/free-cad-software/</a>  </p>
<p>vmware：<br>virtualbox：                        <a href="http://www.virtualbox.org/wiki/Linux/_Downloads">http://www.virtualbox.org/wiki/Linux\_Downloads</a></p>
<p>primedesktop                     绘制计算机网络       <a href="http://sourceforge.net/projects/prime/">http://sourceforge.net/projects/prime/</a></p>
<p> java -jar PrimeDesktop-Beta3.5\ RC1-installer.jar</p>
<p>ITDB                                 管理计算机设备 <a href="http://www.sivann.gr/software/itdb/">http://www.sivann.gr/software/itdb/</a></p>
<p>ntd                                    网络拓扑绘制软件 <a href="http://www.sivann.gr/software.php">http://www.sivann.gr/software.php</a>  </p>
</blockquote>
<p>6、服务  </p>
<blockquote>
<p>samba<br>cups<br>webmin  </p>
</blockquote>
<blockquote>
<p>phpmyadmin  </p>
</blockquote>
<p>-——————————————————————-<br>软件收藏(暂时不用)：  </p>
<p>1、办公：  </p>
<blockquote>
<p>搜狗云拼音                         <a href="http://code.google.com/p/ibus-sogoupycc/">http://code.google.com/p/ibus-sogoupycc/</a><br>fcitx（主要是五笔）            <a href="http://code.google.com/p/fcitx/">http://code.google.com/p/fcitx/</a><br>adobe pdf                           <a href="http://get.adobe.com/cn/reader/otherversions/">http://get.adobe.com/cn/reader/otherversions/</a><br>purrr：                               批量改名           sudo apt-get install purrr  </p>
</blockquote>
<p>2、网络：  </p>
<blockquote>
<p>LibFetion:                          飞信，<a href="http://www.libfetion.cn/">http://www.libfetion.cn/</a><br>iptux                                   飞鸽传书 sudo apt-get install iptux  </p>
</blockquote>
<p>3、系统：  </p>
<blockquote>
<p>testdisk&amp;&amp;photorec           数据恢复              <a href="http://www.cgsecurity.org/wiki/TestDisk">http://www.cgsecurity.org/wiki/TestDisk</a><br>conky：                            系统监视软件，   sudo apt-get install conky</p>
<p>resara：                            构建域控制器，文件共享等  <a href="http://www.resara.org/">http://www.resara.org/</a><br>reactos                             <a href="http://www.reactos.org/zh/index.html">http://www.reactos.org/zh/index.html</a>  </p>
<p>vrms:                                查已安装的非自由软件  vrms -e     sudo aptitude install vrms  </p>
</blockquote>
<blockquote>
<p>macbuntu:                       一键打造成MAC模式  <a href="http://sourceforge.net/projects/macbuntu/files/">http://sourceforge.net/projects/macbuntu/files/</a><br>win7-setup.sh:                 一键打造成win模式    <a href="http://wowubuntu.com/win7.html">http://wowubuntu.com/win7.html</a></p>
</blockquote>
<blockquote>
</blockquote>
<p>4、影音：  </p>
<blockquote>
<p>recordmydesktop：           屏幕录像软件 sudo apt-get install recordmydesktop*</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[安装记录]4、软件设置</title>
    <url>/posts/2957681591/</url>
    <content><![CDATA[<p>1、firefox设置<br>安装插件  </p>
<blockquote>
<p>UNMHT：   用于打开和保存mht文件(好用)<br>flashblock：用于屏蔽flash自动播放，减轻firefox运行负担，提高速度，可手动打开flash<br>flashgot：   下载工具选择<br>download flash and video ：下flv等网页视频用。  </p>
</blockquote>
<blockquote>
<blockquote>
<p><a href="https://addons.mozilla.org/zh-CN/firefox/addon/download-flash-and-video/?src=userprofile">https://addons.mozilla.org/zh-CN/firefox/addon/download-flash-and-video/?src=userprofile</a>  </p>
</blockquote>
</blockquote>
<p>添加搜索工具栏<br>        baidu</p>
<p>flash乱码问题<br>    sudo gedit /etc/fonts/conf.d/49-sansserif.conf<br>        在<br>    <edit name="family" mode="append\_last"><br>        <string>sans-serif</string><br>    </edit><br>       将sans-serif改为 文泉驿正黑  </p>
<p>安装flashblock后flash播放器放不了音乐问题<br>        打开firefox-工具-添加附件-flashblock-首选项-白名单<br>               添加相关网址进入白名单即可：<br>               <a href="http://box.zhangmen.baidu.com/*">http://box.zhangmen.baidu.com/*</a><br>               <a href="http://ting.blog.gougou.com/*">http://ting.blog.gougou.com/*</a><br>#flashgot关联迅雷<br>      <a href="/yangng_163/blog/static/5118080620094248246940/">http://blog.163.com/yangng_163/blog/static/5118080620094248246940/</a><br>      打开firefox 地址栏输入 about:config<br> 设置 flashgot.usewine为true<br>           从菜单［工具]-&gt;［FlashGot］－&gt;[更多选项］<br>           在高级的标签页下选中“自动侦测下载软件“，点击立即检测</p>
<p>2、google浏览器</p>
<p>安装插件：</p>
<p> save as pdf ： 把web页面保存为pdf</p>
<p> flashblock</p>
<p>3、安转skype到64位系统上<br>      cd ./skype_static-2.1.0.81<br>      sudo mv skype /usr/bin<br>      sudo mv skype.desktop /usr/share/applications<br>      sudo mv ./icons/SkypeBlue_48x48.png /usr/share/icons/skype.png<br>      cd ..<br>      sudo mv ./skype_static-2.1.0.81 /usr/share/skype  </p>
<p>4、安装RTX<br>      1、下载 wget <a href="http://www.kegel.com/wine/winetricks">http://www.kegel.com/wine/winetricks</a><br>      2、安装 sh winetricks msxml3 gdiplus riched20 riched30 ie6 vcrun6 vcrun2005sp1<br>      3、安装RTX<br>      4、点开“应用程序”-&gt;“Wine”-&gt;“Configure Wine”-&gt;“函数库”-&gt;在“新增函数库顶替”中，输入“oleaut32.dll”<br>      5、simsun.ttc 复制到 ~/.wine/drive_c/windows/fonts/<br>      6、regedit regedit.reg<br>REGEDIT4<br>[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes]<br>“Arial”=”simsun”<br>“Arial CE,238”=”simsun”<br>“Arial CYR,204”=”simsun”<br>“Arial Greek,161”=”simsun”<br>“Arial TUR,162”=”simsun”<br>“Courier New”=”simsun”<br>“Courier New CE,238”=”simsun”<br>“Courier New CYR,204”=”simsun”<br>“Courier New Greek,161”=”simsun”<br>“Courier New TUR,162”=”simsun”<br>“FixedSys”=”simsun”<br>“Helv”=”simsun”<br>“Helvetica”=”simsun”<br>“MS Sans Serif”=”simsun”<br>“MS Shell Dlg”=”simsun”<br>“MS Shell Dlg 2”=”simsun”<br>“System”=”simsun”<br>“Tahoma”=”simsun”<br>“Times”=”simsun”<br>“Times New Roman CE,238”=”simsun”<br>“Times New Roman CYR,204”=”simsun”<br>“Times New Roman Greek,161”=”simsun”<br>“Times New Roman TUR,162”=”simsun”<br>“Tms Rmn”=”simsun”</p>
<p>转自：<a href="http://b332.com/?post=58#comment">http://b332.com/?post=58#comment</a>  </p>
<p>5、粘粘世界 破解 <br>       下载windows破解版，<a href="http://dl.duowan.com/pcgame/download/5017.html">http://dl.duowan.com/pcgame/download/5017.html</a><br>        复制res文件夹到/opt/ WorldOfGooDemo  下即可<br>        窗口化：alt+enter<br>        闯关记录在～/.WorldOfGoo/pers2.dat 文件中<br>        详细说明查看/opt/ WorldOfGooDemo/linux-issues.txt  </p>
<p>6、安装lm_sensors<br>     sudo apt-get install bison flex<br>     make<br>     sudo make install</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[安装记录]5、系统维护</title>
    <url>/posts/886476311/</url>
    <content><![CDATA[<p>系统维护参看：<br><a href="http://wiki.ubuntu.org.cn/index.php?title=UbuntuSkills&variant=zh-cn#.E6.98.BE.E7.A4.BA.E7.B3.BB.E7.BB.9F.E5.AE.89.E8.A3.85.E5.8C.85.E7.9A.84.E7.BB.9F.E8.AE.A1.E4.BF.A1.E6.81.AF">http://wiki.ubuntu.org.cn/index.php?title=UbuntuSkills&amp;variant=zh-cn#.E6.98.BE.E7.A4.BA.E7.B3.BB.E7.BB.9F.E5.AE.89.E8.A3.85.E5.8C.85.E7.9A.84.E7.BB.9F.E8.AE.A1.E4.BF.A1.E6.81.AF</a>  </p>
<p>1、安装编译环境<br>     sudo apt-get install build-essential linux-headers-generic</p>
<p>2、清除所有已删除包的残余配置文件<br> dpkg -l |grep ^rc|awk ‘{print $2}’ |sudo xargs dpkg -P </p>
<p>3、删除旧核心<br> sudo aptitude purge ~ilinux-image-.*\(\!`uname -r`\)</p>
<p>清理软件残留<br> sudo apt-get autoremove<br>安装软件<br> sudo apt-get install 软件名<br>删除软件<br> sudo apt-get remove 软件名</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[安装记录]6、资料备份</title>
    <url>/posts/3830148503/</url>
    <content><![CDATA[<p>系统备份<br>1、使用ucloner备份  </p>
<blockquote>
<p><a href="http://code.google.com/p/ucloner/">http://code.google.com/p/ucloner/</a>  </p>
</blockquote>
<p>2、使用remastersys制作lived CD光盘  </p>
<blockquote>
<p><a href="http://wiki.linuxdeepin.com/index.php/Remastersys">制作CD要注意的一点是不能安装专用驱动</a></p>
</blockquote>
<p>软件备份<br>打包/var/cache/apt/archives这个文件夹，这样就不用下载了，直接就可以装<br>    备份安装列表  </p>
<blockquote>
<p>sudo dpkg –get-selections &gt; apps.bak         #把已选中的软件包列表打印到标准输出  </p>
</blockquote>
<p>    还原安装列表  </p>
<blockquote>
<p>sudo apt-get install aptitude                          #用这个工具来下载安装列表中的软件<br>sudo dpkg –clear-selections                         #取消选中所有不必要的软件包<br>sudo dpkg –set-selections &lt; apps.bak         #从标准输入里读出要选择的软件<br>sudo aptitude install  </p>
</blockquote>
<p>    备注：  </p>
<blockquote>
<p>dpkg –help可查看dpkg命令用途  </p>
</blockquote>
<p>资料备份<br>    firefox的书签备份  </p>
<blockquote>
<p>/home/用户名/.mozilla/firefox/6gqzmaak.default/bookmarkbackups/</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>安装黑群晖DS3615xs的DSM5.1-5055，并洗白！</title>
    <url>/posts/2521641173/</url>
    <content><![CDATA[<p>我的D2550主机确实挺鸡肋的，不过就看你怎么利用啦，哈哈</p>
<p>参考：<a href="http://www.gebi1.com/forum.php">http://www.gebi1.com/forum.php</a></p>
<p>一、准备工作</p>
<blockquote>
<p>0、一台主机，一个u盘</p>
</blockquote>
<blockquote>
<blockquote>
<p>我的是梅捷YS-D2550-MD，U盘是闪迪酷豆8G U盘</p>
<p><img src="http://img0.ph.126.net/YRKztPKlGLj8Y58HLYLeBw==/6630502616722864530.jpg" alt="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------"></p>
</blockquote>
<p>1、下载改MAC工具，更改MAC。我的是8111E（此步骤非必须，洗白用）</p>
</blockquote>
<blockquote>
<blockquote>
<p>群晖的网卡都是001132开头的，所以我们需要更改网卡MAC地址。</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p><a href="http://support.icafe8.com/technologynews/focus/1347.html">http://support.icafe8.com/technologynews/focus/1347.html</a></p>
<p>1、查看网卡型号</p>
<p>我进ubuntu，输入lspci，提示是REV 06。根据对应型号</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>8111B：PCI\VEN_10EC&amp;DEV_8168&amp;REV_01</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>8111C：PCI\VEN_10EC&amp;DEV_8168&amp;REV_02</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>8111D：PCI\VEN_10EC&amp;DEV_8168&amp;REV_03</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>8111DP/DL：PCI\VEN_10EC&amp;DEV_8168&amp;REV_04</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p><strong>8111E：PCI\VEN_10EC&amp;DEV_8168&amp;REV_06</strong></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>8111F：PCI\VEN_10EC&amp;DEV_8168&amp;REV_07</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>8111ES：PCI\VEN_10EC&amp;DEV_8168&amp;REV_08</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>2、找到对应更改网卡MAC的PG8168程序。进DOS并更改MAC地址</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>PG8168 /V</p>
<p><img src="http://img2.ph.126.net/99RfhmSAGmAFB3xxrqWqcw==/6630269520257772854.jpg" alt="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------"></p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>PG8168 /nodeid 001132******</p>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/l5MLVQAOATQEuE8-XVfdnw==/6630147474467091814.jpg" alt="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------"></p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>3、主板跳线，设置可网络唤醒。（我的主板需要跳线，有些BIOS改一下即可）</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/qPRIT5p8UAdIgXCfp4Oz9A==/6630699429304595770.jpg" alt="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------"></p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>2、下载XPEnoboot（<a href="http://xpenology.me/xpenoboot-5-1-5055-1-released/">http://xpenology.me/xpenoboot-5-1-5055-1-released/</a>）</p>
</blockquote>
<blockquote>
<blockquote>
<p>由于google被墙，下载需要科学上网软件，</p>
</blockquote>
</blockquote>
<blockquote>
<p>3、下载群晖系统</p>
<blockquote>
<p><a href="http://download.synology.com/download/DSM/5.1/5055/">http://download.synology.com/download/DSM/5.1/5055/</a></p>
</blockquote>
<p>4、用CheckUDisk查看u盘的vid和pid</p>
</blockquote>
<blockquote>
<blockquote>
<p><img src="http://img0.ph.126.net/XJ06CeSgvl8MabSixYpF2g==/2815031242101262143.png" alt="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------"></p>
</blockquote>
</blockquote>
<blockquote>
<p>5、下载win32diskimager 并将img镜像写入到U盘</p>
<blockquote>
<p><img src="http://img0.ph.126.net/sa6C-7PfpVZhArVof8Uzxw==/1121959257186692010.png" alt="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------"></p>
</blockquote>
<p>6、更改syslinux.cfg文件</p>
</blockquote>
<blockquote>
<blockquote>
<p>一个是mac地址，一个是sn码，还有vid，pid</p>
<p><img src="http://img1.ph.126.net/0_ut3eDO-N-coOgVoYnFBg==/6630824773630156489.png" alt="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------"></p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>7、下载群晖安装助手</p>
<blockquote>
<p><a href="https://www.synology.com/zh-cn/">https://www.synology.com/zh-cn/</a></p>
</blockquote>
<p>8、再找一台电脑用于控制</p>
<p>9、一个局域网内</p>
</blockquote>
<p>二、安装过程</p>
<blockquote>
<p>备注：电脑A用于做群晖NAS，电脑B用于控制</p>
</blockquote>
<blockquote>
<p>1、制作启动U盘</p>
<p>2、U盘启动电脑A，选择XPEnoboot（install/upgrade）进入</p>
<p>3、电脑B上开启群晖助手，扫描出电脑A，右击电脑A安装DSM，安装完DSM后电脑A会重启</p>
</blockquote>
<blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/YH96IbTFnbTR304nCijXAg==/6630065011095008615.png" alt="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055，并洗白！ - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/wYPVnPAdVeVbUvczG2EFiw==/6619285399096399753.png" alt="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------"></p>
</blockquote>
</blockquote>
<blockquote>
<p>4、电脑A重启还是用U盘引导，选择XPEnoboot进入</p>
<p>5、电脑B的群晖助手再运行几分钟就会提示已安装完成</p>
</blockquote>
<blockquote>
<p>6、电脑B打开网页，输入<a href="http://192.168.1.111:5000/webman/index.cgi">http://IP:5000/webman/index.cgi</a> 即可进行操作了</p>
</blockquote>
<p>三、其他  </p>
<blockquote>
<p>可以使用群晖的MYDS、DDNS、远程唤醒等功能。</p>
<p>系统只能做重要更新不能做版本更新。</p>
</blockquote>
<p><img src="http://img2.ph.126.net/zPMqR6v9FP06ECgUKevFQQ==/6630710424420779201.png" alt="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------"></p>
<p><img src="http://img1.ph.126.net/SJvGaFHxv29hPKxqPG85dg==/6608914805423067703.png" alt="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------" title="安装黑群晖DS3615xs的DSM5.1-5055 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>对云计算的了解</title>
    <url>/posts/3098168392/</url>
    <content><![CDATA[<p>云计算要提供的功能：  </p>
<blockquote>
<p>提供资料存储和共享：无时无刻、全平台实现数据共享。<br>提供计算能力：如网站托管、科学计算。<br>提供各种应用：个人和企业级的软件都由云计算提供。而不是个人电脑上安装软件实现。  </p>
</blockquote>
<p>目的：  </p>
<blockquote>
<p>对wintel釜底抽薪。所有工作都搬到云平台，可以最大限度的摆脱wintel的束缚。  </p>
</blockquote>
<blockquote>
<p>方便用户、节省用户开支等。如不用买昂贵的设备了。  </p>
</blockquote>
<p>基础：  </p>
<blockquote>
<p>首先就是云平台的构建：  </p>
<blockquote>
<p>硬件：数据中心。<br>软件：对数据的存储和管理。这些都是核心技术。<br>接入方便。  </p>
</blockquote>
<p>然后就是带宽。<br>第三就是安全。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>将桌面文件夹移到D盘</title>
    <url>/posts/980642546/</url>
    <content><![CDATA[<p>在正常模式下把桌面改到d盘中去，</p>
<p>具体如下：先在d盘建一个文件夹，</p>
<p>然后点开始—〉运行—〉regedit，</p>
<p>点击HKEY_CURRENT_USER–〉Software–〉Microsoft–〉Windows–〉CurrentVersion–〉Explorer–〉user Shell Folders</p>
<p>双击右边的dosktop，弹出一个对话框，</p>
<p>在数据数值里写上你想存到那个文件夹的路径（就是打开文件夹，上面地址栏里的那行字），</p>
<p>确定，关闭。注销系统就ok了。以后桌面上的东西就都在d盘里了</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>小米2接电脑不能拷数据</title>
    <url>/posts/1151862788/</url>
    <content><![CDATA[<p>接上电脑只出现一个40多M的只读盘，存储容量为32G的显示不出来。<br>解决：设置-开发者选项-开启USB调试  </p>
<p>那个MTP，WIN7装了好像没有用，可能是给winxp用的吧？</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>局域网</title>
    <url>/posts/2396033729/</url>
    <content><![CDATA[<p>局域网技术  </p>
<blockquote>
<p>802.3    以太网<br>802.4    令牌总线网<br>802.5    令牌环网，FDDI<br>802.12  100VG-AnyLAN<br>ANSI     HIPPI<br>802.1Q  虚拟局域网  </p>
</blockquote>
<p>以太网特点  </p>
<blockquote>
<p>以太网规范物理层和数据链路层的协议<br>以太网使用曼切斯特编码<br>以太网不对数据进行编号，所以没有流控，只有差错控制<br>以太网帧长：64-1518B，  </p>
<blockquote>
<p>64B是取10Mb/s以太网争用期发送的字节数<br>46-1500B是数据字段字节长度，  </p>
</blockquote>
</blockquote>
<p>以太网标准  </p>
<blockquote>
<p>标准                 名称              速率         CSMA/CD           双工           备注<br>802.3         传统以太网      10Mb/s             支持            半双工        100m<br>802.3u       快速以太网    100Mb/s             支持        全/半双工        使用2对双绞线，100m<br>802.3z        G级以太网        1Gb/s             支持        全/半双工        使用4对双绞线，100m<br>802.3ae  10G级以太网      10Gb/s         不支持             全双工        异步传输<br>802.11       无线局域网  </p>
<blockquote>
<p>注：CSMA/CD只对半双工有效，CSMA/CD重发16次不成功则丢弃帧  </p>
</blockquote>
</blockquote>
<p>以太网帧格式  </p>
<blockquote>
<p>MAC地址格式：<br>EII帧格式：     目的MAC地址—源MAC地址—类型———-数据————FCS  </p>
<blockquote>
<blockquote>
<blockquote>
<p>      6B                   6B            2B            46-1500B          4B  </p>
</blockquote>
</blockquote>
</blockquote>
<p>802.3帧格式：目的MAC地址—源MAC地址—长度/类型——-数据———FCS  </p>
<blockquote>
<blockquote>
<blockquote>
<p>     6B                   6B            2B             46-1500B          4B</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>其中：802.3帧格式，数据里面包含LLC帧  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>LLC帧占用数据字段3个字节  </p>
<blockquote>
<p>DSAP：数据交给哪个协议<br>SSAP：数据从哪个协议过来<br>控制：  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>802.3ac 虚拟局域网以太网帧格式  </p>
<blockquote>
<p>目的MAC地址—源MAC地址—802.1Q标记-–类型—数据—FCS<br>802.1Q标记：4字节(32bit)  </p>
<blockquote>
<p>3bit—————–1bit———–12bit-———-16bit<br>用户优先级         CFI       VLAN标记号          VID  </p>
</blockquote>
</blockquote>
<p>802.11 无线局域网  </p>
<blockquote>
<p>类型：有固定基站的(蜂窝移动电话)，无固定基站的(自组网络)<br>固定基站：  </p>
<blockquote>
<p>范围：ESS— BSS<br>连接：DS—–AP—–移动设备<br>一个AP建立的范围就是BSS，DS连接多个AP组合成ESS。  </p>
</blockquote>
</blockquote>
<blockquote>
<p>标准：<br>实现方法：FHSS、DSSS<br>使用协议：CSMA/CA  </p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>年轻人，你在职场第几层？</title>
    <url>/posts/4029644717/</url>
    <content><![CDATA[<p>职场里的人分为：人力，人手，人才，人物。  </p>
<p>所谓人力，只需要你在工作中肯卖力气就足够了；  </p>
<p>而人手，则需要你熟悉掌握工作，能应付突发事件；  </p>
<p>人才则需要你头脑灵活，能够在工作中提出创造性的方案；  </p>
<p>而人物就需要八面玲珑，用自己特有的方式为公司做出比较大的贡献。  </p>
<p>PS：发现目前我的定位还是在 “人力和人手” 间徘徊~<br>人力，我可能是百分百满足要求了；人手，还有不熟练的地方。但就昨天缺少设计人员，业务员工作失职，导致了错误发生应该是值得思考的。<br>最近发现几个问题：<br>1、由于设计人员工作的安排，没有足够可以替代的人员，即缺人手。<br>2、打印机打彩稿超出负荷，这些方案是否需要大量印刷。<br>3、稿子制作完毕是否能及时确认。  </p>
<p>自己的工作：是埋头处理自己是事情，还是照顾到各个流程，而不引起发生故障？设想今后打印机端的操作和业务员的操作的****的可能性~</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>广域网</title>
    <url>/posts/52321487/</url>
    <content><![CDATA[<p>互联网=广域网+局域网<br>广域网是一个单一的网络，它使用的是结点交换机连接路由器或主机。广域网不跨路由器，它和局域网通过路由器相连。  </p>
<blockquote>
<p>如连接2个主机，则只需使用MAC地址即可通信<br>如连接路由器，则使用网络层协议通信<br>注：结点交换机是3层交换机，不是路由器。  </p>
</blockquote>
<p>广域网提供的服务  </p>
<blockquote>
<p>数据报服务：主机承担流量控制和差错控制<br>虚电路服务：网络承担流量控制和差错控制  </p>
</blockquote>
<p>广域网处理的问题  </p>
<blockquote>
<p>分组转发机制  </p>
<blockquote>
<p>通过转发表(路由表)实现<br>转发表只包含：交换机编号，交换机端口编号  </p>
</blockquote>
<p>拥塞控制  </p>
<blockquote>
<p>死锁：网络吞吐量降为0，网络无法工作。<br>开环控制方法：设计网络时就将拥塞问题考虑周到。<br>闭环控制方法：通过网络监控，确定拥塞状况，再控制。  </p>
</blockquote>
</blockquote>
<p>广域网技术<br> 技术               传输媒体通信方式       数据链路层帧          特点<br> X25                         同步                     HDLC帧               分组层提供虚电路，复用，有流控，有差错控制；<br> 帧中继FR                同步                 类似HDLC帧            数据链路层提供虚电路，复用，无流控，有差错控制；<br> ATM                        同步                        信元                  ATM层提供虚通路，复用，有流控，有差错控制，但不使用。<br> 10Gb级以太网        异步                 802.3帧/EII帧           数据链路层无流控，有差错控制；  </p>
<p>帧中继FR  </p>
<blockquote>
<p>帧格式：地址—-数据—-FCS  </p>
</blockquote>
<blockquote>
<blockquote>
<p>     2-4B                  2B  </p>
</blockquote>
<p>地址字段包含内容：  </p>
<blockquote>
<p>DLCI：  标记永久虚电路PVC，呼叫控制，管理信息<br>FECN：值为1，表示传输的同方向出现拥塞<br>BECN：值为1，表示传输的反方向出现拥塞<br>DE：     值为1，为低优先级帧，可丢弃，值为0，为高优先级帧，尽可能不丢弃  </p>
</blockquote>
<p>拥塞控制：  </p>
<blockquote>
<p>CIR：承诺的信息速率。<br>超出CIR的帧，DE=1，拥塞时会被丢弃<br>当FECN/BECN=1，表示拥塞，则丢弃DE=1的帧，  </p>
</blockquote>
</blockquote>
<p>ATM<br>ATM的异步是指ATM信元异步的插入到同步的SDH比特流中。  </p>
<blockquote>
<p>ATM层次结构：  </p>
<blockquote>
<p>AAL层  </p>
<blockquote>
<p>CS子层：使ATM系统能对不同的网络层协议提供服务。<br>SAR子层：将数据单元分为48B  </p>
</blockquote>
<p>ATM层：产生信元首部5B，信元的复用和分用功能，每经过一段ATM链路后VPI/VCI的数值转换<br>物理层  </p>
<blockquote>
<p>TC子层：信元流和比特流的转换，异步的插入。<br>PMD子层：传输和接收比特流。  </p>
</blockquote>
</blockquote>
<p>ATM帧格式：首部—-数据<br>首部的内容：GFC—VPI—VCI—PT—CLP—HEC    (ATM端点—–ATM交换机)  </p>
<blockquote>
<blockquote>
<p>    VPI————VCI—PT—CLP—HEC   (ATM交换机—ATM交换机)  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>GFC：做流量控制用，不使用<br>VPI：虚通道<br>VCI：虚通路<br>PT：3bit，是否为用户数据信元，是否拥塞，是否为最后一个信元<br>CLP：与DE作用类似<br>HEC：对信元首部进行校验。由物理层实施。  </p>
</blockquote>
<p>注：  </p>
<blockquote>
<p>VPI/VCI每经过一段ATM链路就会转换数值，就像MAC帧通过路由器后MAC地址改变一样  </p>
</blockquote>
</blockquote>
<p>关于复用技术:  </p>
<blockquote>
<p>数据链路层的复用属于逻辑链路的复用<br>物理层的复用技术属于传输链路的复用，提高传输通道的利用率。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>应用层-1服务</title>
    <url>/posts/4201958171/</url>
    <content><![CDATA[<p>DNS：  </p>
<blockquote>
<p>DNS结构：根域名服务器—本地域名服务器+授权域名服务器  </p>
<blockquote>
<p>根域名：不提供转换但是提供域名的查询路径，告知主机去哪里查域名<br>本地域名：负责转换  </p>
</blockquote>
<p>域名查询过程：  </p>
<blockquote>
<p>本地主机缓存–&gt;本地域名服务器—-&gt;本地域名服务器的缓存—&gt;根域名服务器—&gt;其他本地域名服务器。  </p>
</blockquote>
</blockquote>
<p>EMAIL：  </p>
<blockquote>
<p>EMAIL结构：  </p>
<blockquote>
<p>收件地址—主题—MIME—内容<br>MIME：在首部说明数据类型：如视频图像等，这样邮件就能发送多媒体文件而不仅仅是文本文件。  </p>
</blockquote>
<p>EMAIL传送：  </p>
<blockquote>
<p>用户—POP3|SMTP———–POP3|SMTP—用户<br>SMTP：负责发送邮件。<br>POP3：负责接收邮件<br>用户：用软件从POP3中取回邮件。  </p>
</blockquote>
</blockquote>
<p>WWW：  </p>
<blockquote>
<p>WWW的核心是超链接。使用URL标记资源，使用超链接来资源定位。  </p>
</blockquote>
<blockquote>
<p>URL是一个标记和域名不一样。<br>HTTP协议虽然使用TCP连接，但这个协议本身是无连接的。  </p>
<p>浏览器的结构：<br>控制程序：解释鼠标和键盘的输入等<br>解释程序：负责HTML和脚本的解释<br>HTTP客户：是指FTP、EMAIL等直接通过浏览器操作的这些服务<br>缓存  </p>
</blockquote>
<p>SNMP：  </p>
<blockquote>
<p>对有MIB标记的网络设备进行管理。  </p>
</blockquote>
<blockquote>
<p>MIB：管理信息库。树状结构，网络设备一般都是1.3.6.1.4.1开头的。<br>SNMP：管理功能包括获取设备状况和改变设备状况2种。  </p>
<blockquote>
<p>SNMP使用UDP，服务端：161，客户端：162  </p>
</blockquote>
<p>SMI：对SNMP的报文进行语法规范。  </p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>应用层-2工作方式</title>
    <url>/posts/482570929/</url>
    <content><![CDATA[<p>1、应用程序工作原理  </p>
<blockquote>
<p>运行应用程序—-程序进程启动系统调用—-进程将控制权交给API—-API将控制权交给操作系统—操作系统负责执行某项操作—-操作完成后将控制权交给API—-API将控制权交给进程。  </p>
<p>API：对操作系统来说式一个虚拟的接口，对程序来说是一个函数。  </p>
<blockquote>
<p>用于调用系统的资源(如内存空间、CPU时间、网络协议等)给进程使用。linux下的socket就是API  </p>
</blockquote>
</blockquote>
<p>2、应用层的工作方式  </p>
<blockquote>
<p>使用UDP是循环工作方式  </p>
<blockquote>
<p>同个时间只对一个客户提供服务。其他客户先放入队列，完成一个请求就从队列中读取下一个请求  </p>
</blockquote>
<p>使用TCP是并发工作方式  </p>
<blockquote>
<p>TCP端口只用于接受请求。<br>收到请求时建立从属服务器和临时端口，并将请求转到临时端口，让从属服务器完成服务。<br>有多个请求就建多个从属服务器  </p>
</blockquote>
</blockquote>
<p>以上就将OSI如何工作全部讲清楚了。<br>操作系统负责分配资源—应用层负责如何服务—-运输层负责通信服务—-网络层负责逻辑寻址—-数据链路层物理负责—物理层负责传输比特流(屏蔽链路差异)。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>微星EX465拆机</title>
    <url>/posts/2818178598/</url>
    <content><![CDATA[<p>原先一直没拆彻底，最近拆了几台同事的笔记本后，想把自己的笔记本也搞搞清楚，就动手了。</p>
<p>拆机全图  </p>
<p><img src="http://img1.ph.126.net/UAH0f0SN-mRvhYjsnSRqTA==/6598160482193228380.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<blockquote>
<p>光驱位换成硬盘了。无线网卡换成AR9380了买了根热管装上去装不牢。。。</p>
</blockquote>
<p>显示器</p>
<p><img src="http://img1.ph.126.net/oxQhoyRi6sjUDzSm3ipn8g==/6619256811793143295.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p><img src="http://img2.ph.126.net/0lJqinTm9iCGdeDnP8nlOQ==/3132253540936849772.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p><img src="http://img1.ph.126.net/o4bIaj74PsBNoY8weh0KgA==/847521154976095072.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<blockquote>
<p>无线网卡和蓝牙，2合1的。</p>
</blockquote>
<p><img src="http://img1.ph.126.net/om10oh3zsUSLjmacTMPGXA==/6619308488839649398.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p><img src="http://img0.ph.126.net/wPKwUtxqdskvMilqeyUTXQ==/6608200122865664199.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<blockquote>
<p>三星的显示器</p>
</blockquote>
<p><img src="http://img1.ph.126.net/THI3jGyue5xPSdP4o18uMA==/787566984936700078.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p> C面</p>
<p><img src="http://img1.ph.126.net/OkYAUpOTV4DQ27yZsOabvA==/6619566874072178203.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/3hv9vcusfSUsv2GQC7f2ug==/6608201222377291982.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p><img src="http://img1.ph.126.net/YOi2Jf-e6qWXMuwtwC8RHw==/6608899412259854515.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p><img src="http://img0.ph.126.net/Msp_Ipx35dXaYKX_5d-C3g==/6597278673867668466.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p>D面</p>
<p><img src="http://img2.ph.126.net/xTozN6lau824jQVxJJnd1Q==/6608798257190099018.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p><img src="http://img1.ph.126.net/hl6CuZqJPbAxoPEqYduZxw==/1492661801596865038.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>主板</p>
<p><img src="http://img0.ph.126.net/YYV7WpkuSZ-wqvmd0qoZrQ==/6597331450425803463.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p><img src="http://img2.ph.126.net/HKnkM5aN3J1KyizYdhaCwA==/2183682869421583022.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p>SIS968  </p>
<p><img src="http://img1.ph.126.net/0vY7apccs6i-Mzrrb1oHzg==/6608715793818016312.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<blockquote>
<p>南桥不给力，连SATA都不支持。</p>
</blockquote>
<p>NEC/TOKIN 0E907去耦电容</p>
<p><img src="http://img0.ph.126.net/8mC58rdOT1xlxLyDtgT8Sw==/1466766103739883564.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p>三星GDDR3，双面集成共1G。</p>
<p><img src="http://img0.ph.126.net/JQbnZH-iKB4nTysSBArm8g==/6597703085356120809.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p>声卡ALC 662。</p>
<p><img src="http://img0.ph.126.net/TQk2IMXeI23zHqy6uu9ZUg==/6599298476727387978.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<blockquote>
<p> 始终装不上仿冒声卡，坑了。</p>
</blockquote>
<p>显示芯片吧应该是</p>
<p><img src="http://img1.ph.126.net/_er-_c-iWZ-a-mkjnqABig==/6608760873794757007.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p>拨号芯片，果断拆了。 </p>
<p><img src="http://img2.ph.126.net/11SHaUXEcluL6A4uv_I4rA==/6619069894816423061.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>读卡器的芯片应该是  </p>
<p><img src="http://img2.ph.126.net/HrmsXG90NdFaGbus3T4hhw==/6608798257190099027.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>网卡芯片REALTEK rtl8201cl （奇怪了，为啥驱动是sis190呢。。）</p>
<p> <img src="http://img2.ph.126.net/VYxV4H9UHDssjPtUZZELoA==/6599319367448317631.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p>rtm683-910  </p>
<p><img src="http://img0.ph.126.net/wGw3bjaphORwZdhS2fOP-Q==/1851823871879715720.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>ISL6262</p>
<p><img src="http://img1.ph.126.net/Ev-cndP83CHiLhN3AsB0VQ==/6598292423588564167.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>MAXIM 8724E</p>
<p><img src="http://img0.ph.126.net/-paCOMvvcg1xWKMkcOBpaw==/6608799356701726773.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>LB ns0013b</p>
<p><img src="http://img1.ph.126.net/6IZS1mi8vLwEkqDdDaSfVg==/1414693233048934564.jpg" alt="微星EX465拆机 - leaf - ------坚持雅操------" title="微星EX465拆机 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[感受]20100124 3个月使用回顾</title>
    <url>/posts/1257470981/</url>
    <content><![CDATA[<p><img src="http://img1.kaixin001.com.cn/i/caogao.gif" alt="[感受]20100124 3个月使用回顾 - ywz_306 - ------坚持雅操------" title="此篇为草稿，还未正式发表"></p>
<p><strong><a href="http://www.kaixin001.com/diary/write.php?did=27424011&start=0" title="[感受]3个月使用回顾"><em>[感受]3个月使用回顾</em></a></strong>  </p>
<p><strong>【草稿暂存】</strong></p>
<p>分类：专业</p>
<p>   权限：</p>
<p>仅好友可见</p>
<p>    <a href="http://www.kaixin001.com/diary/write.php?did=27424011&start=0" title="接着写">接着写</a> ┊ <a href="/" title="删除">删除</a></p>
<p>装UBUNTU9.10 快三个月了，碰到些问题，大部分多解决了<br>日常办公、娱乐多没问题<br>前几天重装了一下，重新配置了一下。现在开始以后即使重装也不用在配置了  </p>
<p>表面的东西不会再理了<br>继续，深入学习  </p>
<p>美化后的界面<br>[<img src="http://img610.ph.126.net/Mz5E1ml7MivsoJSjLJb3TQ==/1686598060451761989.jpg" alt="[感受]20100124 3个月使用回顾 - ywz_306 - ------坚持雅操------" title="[感受]20100124 3个月使用回顾 - ywz_306 - ------坚持雅操------">](<a href="http://img610.ph.126.net/Mz5E1ml7MivsoJSjLJb3TQ==/1686598060451761989.jpg">http://img610.ph.126.net/Mz5E1ml7MivsoJSjLJb3TQ==/1686598060451761989.jpg</a>)<br>平常用的界面<br>[<img src="http://img618.ph.126.net/9w-4mSjoqFCR-IyYUMmyHA==/1962443537628232711.jpg" alt="[感受]20100124 3个月使用回顾 - ywz_306 - ------坚持雅操------" title="[感受]20100124 3个月使用回顾 - ywz_306 - ------坚持雅操------">](<a href="http://img618.ph.126.net/9w-4mSjoqFCR-IyYUMmyHA==/1962443537628232711.jpg">http://img618.ph.126.net/9w-4mSjoqFCR-IyYUMmyHA==/1962443537628232711.jpg</a>)</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[感受]20100124linux使用回顾</title>
    <url>/posts/3070156273/</url>
    <content><![CDATA[<p>05年就开始接触linux，当时用的是redhat 9<br>    和windows装在一个硬盘里(双系统)<br>    用双系统对学习linux有2个不利因素：<br>       一个windows用习惯了，老想着windows下的软件啊使用方式啊<br>       一个是对linux一点多不了解，心里没底<br>             看书操作难免会有些出入，网上有时候又找不到。这样就会退缩  </p>
<p>    这样就导致平常不愿意上linux系统，心血来潮的时候用一下而已<br> 4年来一直在原地踏步  </p>
<p>全盘安装linux的原因很简单：<br>   我用的比别人早，懂的却比别人少，自惭形秽啊<br>   另外，linux易用性不可同日而语了  </p>
<p>真正全盘安装的时候又有顾虑了：<br>   怕一不小心就把系统弄出毛病<br>   怕系统坏掉重装把资料弄没了<br>   一碰到问题就不知所措，<br>   对linux的文件结构一点概念多没有<br>   不知道哪个软件好用<br>   不知道软件放在哪里  </p>
<p>这篇日记里提到了：</p>
<p><img src="http://img1.kaixin001.com.cn/i2/tanhao_n.gif" alt="[感受]20100124linux使用回顾 - ywz_306 - ------坚持雅操------" title="不良内容举报"> <a href="/;">不良内容举报</a></p>
<p><a href="http://www.kaixin001.com/home/?uid=25597022">叶臻</a>关闭了评论功能</p>
<p>仅<a href="http://www.kaixin001.com/home/?uid=25597022">叶臻</a>的好友可以对此发表评论</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>手机/平板当遥控器控制XBMC等软件(猫范TV)</title>
    <url>/posts/3794223921/</url>
    <content><![CDATA[<p>家有HTPC一台，一直忘装xbmc软件，晚上终于记着装上了。我选了猫范TV<br>装了感觉鼠标点点太麻烦了。找了好久终于让我找到几款满意的软件  </p>
<p>0、猫范TV的网络设置  </p>
<blockquote>
<p>手机、HTPC需同一网段。  </p>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/zG7b_hn_BrruYBXDKZYzCQ==/2270377162248464779.jpg" alt="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------" title="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<p>1、official xmbc remote  </p>
<blockquote>
<p><a href="http://code.google.com/p/android-xbmcremote/">http://code.google.com/p/android-xbmcremote/</a>  </p>
</blockquote>
<blockquote>
<p>软件4M多，填写好IP和端口即可，端口号是8800。<br>XBMC里面可以添加账号密码，猫范TV好像不行  </p>
<p><img src="http://img0.ph.126.net/TGFD9lEejl1JTQb6KOertA==/4891472145377930376.png" alt="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------" title="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------"><br>连接好之后的界面  </p>
<p><img src="http://img2.ph.126.net/noB3HJrV1lB_20bRBFbKLA==/716635290805683152.png" alt="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------" title="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------"><br>播放电影的控制界面  </p>
<p><img src="http://img0.ph.126.net/qRd4EynsCltNkN8jKtrefw==/1071856711414379676.png" alt="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------" title="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------"></p>
<p>    </p>
</blockquote>
<p>2、boxee  </p>
<blockquote>
<p>这个操作很简单，跟猫范TV的遥控器有点象  </p>
<p><img src="http://img0.ph.126.net/sEdBjddzLbkWzF87Dv478w==/832602981210435720.png" alt="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------" title="手机/平板 控制 类XBMC软件(猫范TV) - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>3、airjoy乐享  </p>
<blockquote>
<p>这个是ariport功能，非上面2个软件的功能。感觉还可以不过我没用过<br><a href="http://www.airjoy.cn/">http://www.airjoy.cn/</a>  </p>
</blockquote>
<blockquote>
</blockquote>
<p>参考：  </p>
<blockquote>
<p><a href="http://www.linuxidc.com/Linux/2011-07/38166.htm">http://www.linuxidc.com/Linux/2011-07/38166.htm</a>  </p>
</blockquote>
<blockquote>
<p><a href="http://blog.sina.com.cn/s/blog/_6f7901490101c4of.html">http://blog.sina.com.cn/s/blog\_6f7901490101c4of.html</a>  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>打印机删除不了正在打印的文档</title>
    <url>/posts/230208873/</url>
    <content><![CDATA[<p>依次点击“开始”→“控制面板”→“性能和维护”→“管理工具”→“服务”→“Print Spooler”.  </p>
<p>　　点击左侧 “停止此服务” ，停止打印机服务.  </p>
<p>　　依次点击“开始”→“运行”，在“运行”窗口的命令行中输入 ：spool 。点击“确认”按钮，打开“spool”文件夹；  </p>
<p>　　在“spool” 文件夹中，双击打开“PRINTERS”文件夹；  </p>
<p>　　删除“PRINTERS”文件夹中的所有文件；  </p>
<p>　　回到“服务”窗口，点击左侧“启动此服务”，重新启动打印服务。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>打开excel2007文件显示空白</title>
    <url>/posts/1617765300/</url>
    <content><![CDATA[<p>EXCEL选项→高级→常规，取消对“忽略使用动态数据交换（DDE）的其他应用程序”的勾选  </p>
<p>转自：<a href="http://zhidao.baidu.com/question/202525385.html">http://zhidao.baidu.com/question/202525385.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>技嘉主BIOS检测错误</title>
    <url>/posts/3674520218/</url>
    <content><![CDATA[<p>Q：main BIOS checksum error retrieving recovery source from hpa<br>1、BIOS下载地址：<br>    <a href="http://www.gigabyte.com.cn/support-downloads/Utility.aspx">http://www.gigabyte.com.cn/support-downloads/Utility.aspx</a><br>2、解压的FAT32格式的U盘上<br>3、插到主板上，启动电脑按F9，recovery 之后重启即可</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[摘录] ubuntu server 10.04 安装dhcp服务器</title>
    <url>/posts/1791050251/</url>
    <content><![CDATA[<p>&lt;转载自：<a href="http://xy.zhubajie.com/html/2009/03-30/207077.html&gt;">http://xy.zhubajie.com/html/2009/03-30/207077.html&gt;</a>  </p>
<p>DHCP服务器提供以下两种配置方法：</p>
<p>　　地址池</p>
<p>　　这种方法指定了一个用来动态的提供给第一个访问网络的DHCP客户端的IP地址池（有时也称作区域或范围）。当DHCP客户端离开网络超过一定时间后，IP地址就会被回收到地址池以供其它DHCP客户端使用。</p>
<p>　　MAC地址</p>
<p>　　这种方法强制使用DHCP来区别每一块连接上网络的网卡的硬件地址，之后这块网卡每次连上网络请求DHCP服务时都为它提供这个固定的IP地址。</p>
<p><img src="http://img.ph.126.net/oHeiM9j9UsG7QWm69cUsrQ==/3269331854495906752.png" alt="[摘录] ubuntu server 10.04 安装dhcp服务器 - leaf - ------坚持雅操------" title="[摘录] ubuntu server 10.04 安装dhcp服务器 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>　　在ubuntu中安装DHCP服务</p>
<p>　　sudo apt-get install dhcp3-server</p>
<p>　　这样就完成安装了。</p>
<p>　　配置DHCP服务器</p>
<p>　　如果你的Ubuntu服务器上用友2块网卡，你需要选择哪一块网卡用来监听DHCP服务。默认监听的是eth0。可以通过编辑/etc/default/dhcp3-server这个文件来改变这个默认值。</p>
<p>　　sudo vi /etc/default/dhcp3-server</p>
<p>　　找到这行，</p>
<p>　　INTERFACES=”eth0″</p>
<p>　　使用下面这行替代它</p>
<p>　　INTERFACES=”eth1″</p>
<p>　　保存并退出。这一步可选。</p>
<p>　　接下来你需要为/etc/dhcp3/dhcpd.conf文件创建一个备份。</p>
<p>　　cp /etc/dhcp3/dhcpd.conf /etc/dhcp3/dhcpd.conf.back</p>
<p>　　使用下面的命令编辑/etc/dhcp3/dhcpd.conf文件</p>
<p>　　sudo vi /etc/dhcp3/dhcpd.conf</p>
<p>　　使用地址池的方法</p>
<p>　　你需要修改/etc/dhcp3/dhcpd.conf这个配置文件的以下部分：</p>
<p><code>default-lease-time 600;   max-lease-time 7200;   option subnet-mask 255.255.255.0;   option broadcast-address 192.168.1.255;   option routers 192.168.1.254;   option domain-name-servers 192.168.1.1, 192.168.1.2;   option domain-name “yourdomainname.com”;   subnet 192.168.1.0 netmask 255.255.255.0 &#123;   range 192.168.1.10 192.168.1.200;   &#125;</code></p>
<p>　　保存并退出文件</p>
<p>　　这会导致DHCP服务器提供一个从192.168.1.10-192.168.1.200这个范围的IP地址给客户端。如果客户端没有请求一个租期的话，服务器会默认提供600秒的地址租期给客户端。最大的（允许的）地址租期是7200秒。</p>
<p>　　使用MAC地址的方法</p>
<p>　　使用这种方法你可以保留一个固定地址给一些或者所有机器。在下面的示例中我给server1,server2,printer1和priner2保留了固定的IP地址。</p>
<p><code>default-lease-time 600;   max-lease-time 7200;   option subnet-mask 255.255.255.0;   option broadcast-address 192.168.1.255;   option routers 192.168.1.254;   option domain-name-servers 192.168.1.1, 192.168.1.2;   option domain-name “yourdomainname.com”;   subnet 192.168.1.0 netmask 255.255.255.0 &#123;   range 192.168.1.10 192.168.1.200;   &#125;   host server1 &#123;   hardware ethernet 00:1b:63:ef:db:54;   fixed-address 192.168.1.20;   &#125;   host server2 &#123;   hardware ethernet 00:0a:95:b4:d4:b0;   fixed-address 192.168.1.21;   &#125;   host printer1 &#123;   hardware ethernet 00:16:cb:aa:2a:cd;   fixed-address 192.168.1.22;   &#125;   host printer2 &#123;   hardware ethernet 00:0a:95:f5:8f:b3;   fixed-address 192.168.1.23;   &#125;</code></p>
<p>　　现在你需要使用下面命令来重启dhcp服务器。</p>
<p>　　sudo /etc/init.d/dhcp3-server restart</p>
<p>　　配置Ubuntu的DHCP客户端</p>
<p>　　如果你想配置你的Ubuntu桌面为DHCP客户端，使用以下步骤。你需要打开/etc/network/interface文件</p>
<p>　　sudo vi /etc/network/interfaces</p>
<p>　　确保你的配置文件含有以下行（eth0只是一个示例）</p>
<p><code>auto lo eth0   iface eth0 inet dhcp   iface lo inet loopback</code></p>
<p>　　保存并退出文件</p>
<p>　　你需要使用下面的命令重启网络服务</p>
<p>　　sudo /etc/init.d/networking restart</p>
<p>　　如何找到DHCP服务器的IP地址</p>
<p>　　你需要使用下面的命令</p>
<p>　　sudo dhclient</p>
<p>　　或者</p>
<p>　　tail -n 15 /var/lib/dhcp3/dhclient.*.leases</p>
<p>未知</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>攒机知识1-微机发展历史</title>
    <url>/posts/2703845722/</url>
    <content><![CDATA[<p>1946    第一台电子计算机诞生  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/wPLKA31vk02FjZpirwJsjw==/6597730573146590104.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> 1956    IBM发明第一块硬盘  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/s8y8MGLP2Wt0RJizBqgUZQ==/2245325889320924743.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>60年代    IBM发明内存DRAM芯片  </p>
<p>1969年   UNIX系统诞生  </p>
<blockquote>
<p><img src="http://img2.ph.126.net/gFmqAfQGtDRCbnn1ASuFlg==/3905746776937405523.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>1973年   施乐开发出出图形接口与鼠标  </p>
<p>1976年   第一款个人电脑 apple I  </p>
<blockquote>
<p><img src="http://img2.ph.126.net/In7r1NyvyzXOm4N1WfRCww==/3860429305686910466.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------">  </p>
</blockquote>
<p>1978年   IBM PC诞生(我们现在用的电脑都源于此)  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/GshbJTii1-7D4La-OlE86A==/1580763469224964876.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------"><br>使用INTEL的8086处理器，1980年开始使用微软购买的DOS系统  </p>
</blockquote>
<p>80年代    IBM发明第一块独立显卡  </p>
<p>1984年   苹果推出第一款带图形界面和鼠标的电脑  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/UlcnYMWft8raaytBDOOjXA==/6597627219053581807.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<p>1990年    微软推出有图形界面的win3.0系统  </p>
<blockquote>
<p><img src="http://img2.ph.126.net/ZAZEqEFvR5kP43630ATjZw==/61361545022933438.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<p>1991年    光驱诞生  </p>
<p>1991年    linux系统诞生  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/c7RikRs9I4DQNJbuA4QZuQ==/6598082416867156315.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------">  </p>
</blockquote>
<p>1995年    3DFX发布第一块3D独立显卡  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/hjt5bi_tp5l0NfWM5PlziA==/2206200867558327592.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> <br>2010年    苹果发布ipad  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/hW8Qhzj8kfTGraEfrMz0tA==/1500824575921239721.jpg" alt="攒机知识1-微机发展历史 - leaf - ------坚持雅操------" title="攒机知识1-微机发展历史 - leaf - ------坚持雅操------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>改成英文语系</title>
    <url>/posts/436218546/</url>
    <content><![CDATA[<p>sudo vim /etc/default/locale</p>
<p>将下面的内容修改</p>
<p>LANG=”zh_CN.UTF-8”</p>
<p>LANGUAGE=”zh_CN:zh”</p>
<p>修改为：</p>
<p>LANG=”en_US.UTF-8”</p>
<p>LANGUAGE=”en_US:en”</p>
<p> sudo vim /var/lib/locales/supported.d/local</p>
<p>改成</p>
<p>en_US.UTF-8 UTF-8</p>
<p>重启  sudo locale-gen</p>
<p>-——————————————————————————————  </p>
<p>若出现如下问题  </p>
<p>        LANGUAGE = (unset),<br>        LC_ALL = (unset),<br>        LANG = “zh_CN.UTF-8”  </p>
<p>运行：<br>debian:<del># apt-get install locales<br>debian:</del># dpkg-reconfigure locales<br>debian:~# locale</p>
<p>摘录自： <a href="http://www.sudu.cn/info/article/articleInfo.php?aId=288137">http://www.sudu.cn/info/article/articleInfo.php?aId=288137</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>数据链路层</title>
    <url>/posts/3368314941/</url>
    <content><![CDATA[<p>网卡：  </p>
<blockquote>
<p>网卡上面有处理器和存储器。<br>网卡将计算机信息的并行传输，转为串行传输，发到网络上<br>网卡包含数据链路层+物理层的功能  </p>
</blockquote>
<p>数据链路层功能  </p>
<blockquote>
<p>链路管理  </p>
<blockquote>
<p>链路的建立、维持和释放  </p>
</blockquote>
<p>帧定界  </p>
<blockquote>
<p>用标志字段F来标记起始结束位置  </p>
</blockquote>
<p>流量控制  </p>
<blockquote>
<p>滑动窗口等技术实现  </p>
</blockquote>
<p>差错控制  </p>
<blockquote>
<p>靠CRC检错，一般就是FCS  </p>
</blockquote>
<p>将数据和控制信息分开  </p>
<blockquote>
<p>使收方能区分控制信息和数据  </p>
</blockquote>
<p>透明传输  </p>
<blockquote>
<p>通过“零比特填充法”等技术使信息里不论包含何种bit组合都能够传输  </p>
</blockquote>
<p>寻址  </p>
<blockquote>
<p>MAC寻址  </p>
</blockquote>
</blockquote>
<p>关于数据链路层和传输层都有流量控制协议  </p>
<blockquote>
<p>数据链路层保证每个帧都收到，而不丢失<br>但是其上层网络层不提供可靠服务，(如收到帧之后丢弃)<br>所以传输层又用流量控制保证数据包能够完整无误的接收  </p>
</blockquote>
<p>数据链路层流量控制协议  </p>
<blockquote>
<p>停止等待协议：  </p>
<blockquote>
<p>为防止发送端发出的帧传输过程中有错误或者丢失，接收端每收到一个帧就回发确认帧<br>发送端会设置超时计时器，超时后自动重发帧<br>确认帧携带的是对n+1帧的请求。说明收到n帧，请求发n+1帧。  </p>
</blockquote>
<p>连续ARQ协议：automatic repeater quest 自动重传请求</p>
<blockquote>
<p>发送端多个帧一起发，然后等待确认，接收端一个帧一个帧的接收，并回复确认帧，<br>如有遗失，则从遗失的帧开始再重新发。<br>这里涉及到对帧的编码，发送窗口大小，接收窗口大小  </p>
<blockquote>
<p>对帧的编码用n=3个bit来编码，则能编8个帧<br>发送窗口最大 2^n-1   也就是7<br>接收窗口最大2^(n-1)  也就是4  </p>
</blockquote>
<p>这里还有一个协议：滑动窗口协议  </p>
<blockquote>
</blockquote>
</blockquote>
<p>选择重传ARQ协议：  </p>
<blockquote>
<p>发送端多个帧一起发，然后等待确认，接收端多个帧一起收，然后检查有无遗失，<br>有遗失则让发送端发遗失的帧，而不用再发遗失后面的已收到的帧  </p>
</blockquote>
<blockquote>
</blockquote>
</blockquote>
<p>数据链路层帧结构  </p>
<blockquote>
<p>HDLC帧  </p>
</blockquote>
<blockquote>
<p>帧结构：地址——–控制———信息———FCS  </p>
<blockquote>
<blockquote>
<p>1B          1B                                  2B  </p>
</blockquote>
<p>控制字段3大类：信息帧、监督帧、无编码帧  </p>
<blockquote>
<p>信息帧：就是发送序号和确认序号等。<br>监督帧：用于ARQ协议，如发哪个帧，暂停发送帧，拒绝某个帧之后的帧  </p>
<blockquote>
<blockquote>
<p>监督帧不含数据信息，长度48bit  </p>
</blockquote>
</blockquote>
<p>无编码帧：控制作用  </p>
</blockquote>
</blockquote>
<p>PPP帧<br>PPP 提供了不同网络层协议同时在同一链路传输的多路复用技术<br>如拨号连接就是用这个协议。<br>帧结构：地址——–控制———-协议———-信息———FCS  </p>
<blockquote>
<blockquote>
<p>1B           1B               2B          &lt;=1500B          2B  </p>
</blockquote>
</blockquote>
<blockquote>
<p>地址：全1字段，由于是点到点，所以地址没什么用<br>控制：表示不使用序号，也就是没有流量控制功能。<br>协议：标记不同的协议。还有控制功能。  </p>
</blockquote>
<p>以太网帧  </p>
<p>帧中继帧  </p>
<p>ATM帧</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>新年礼物——制作好了自己的LFS，哈哈～～</title>
    <url>/posts/479411407/</url>
    <content><![CDATA[<p>虽然是照着书上做出来的，不过毕竟是自己一个字一个字打出来的 哈哈<br>花了我2个星期的时间！<br>新年的第一天，送上自己最好的礼物～～～</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>无法创建k/3中间层组件 请确认中间件配置</title>
    <url>/posts/2440562317/</url>
    <content><![CDATA[<p>服务器上面有账号，客户端如果也用这个账号，然后用了不同的密码，会导致远程组件配置工具测试不成功。</p>
<p>解决方法：</p>
<p>客户端账号使用服务器上相关账号的相同密码</p>
<p>或者</p>
<p>客户端使用不同的账号进行登录</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>无线ap端口需要配置access模式</title>
    <url>/posts/2171983291/</url>
    <content><![CDATA[<p>interface gigabitethernet 0/0/46<br>port link-type access<br>port default vlan 22  </p>
<p>trunk模式配置<br>interface gigabitethernet 0/0/46<br>port link-type trunk<br>port trunk allow vlan all<br>undo port trunk allow vlan 1</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>无线路由器做无线AP用</title>
    <url>/posts/1007263798/</url>
    <content><![CDATA[<p>1、关闭dhcp功能<br>2、wan口设置为动态获取<br>3、lan口设置为同一网段的IP地址<br>4、所有网线接在lan口上</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>易助8.0安装记录</title>
    <url>/posts/735809853/</url>
    <content><![CDATA[<p>1、安装sql2008</p>
<p>2、安装易助8.0<br>3、打开易助进行注册</p>
<p>4、sql2008上面把易助的数据库进行附加</p>
<p>搞定</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>更新server的源 sources.list</title>
    <url>/posts/3830180328/</url>
    <content><![CDATA[<p>1、用sftp 上传sources.list<br>      sftp server用户名@server主机名<br>      输入 server用户名的密码  </p>
<p>    put /etc/apt/sources.list /etc/apt/.  </p>
<p> (ssh 的使用查看上一篇： 从网络接手server：2、ssh到server)   </p>
<p>2、更新源<br>     exit<br>    ssh server用户名@server主机名<br>   输入 server用户名的密码  </p>
<p>   sudo apt-get update</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派 B+ 连接到隐藏的无线网络</title>
    <url>/posts/4154792531/</url>
    <content><![CDATA[<p>pi@YRPI ~ $ cat /etc/network/interfaces</p>
<p>auto lo</p>
<p>iface lo inet loopback</p>
<p>iface eth0 inet static</p>
<p>address 192.168.1.16</p>
<p>netmask 255.255.255.0</p>
<p>gateway 192.168.1.1</p>
<p>auto wlan0</p>
<p>allow-hotplug wlan0</p>
<p>iface wlan0 inet static</p>
<p>address 192.168.1.17</p>
<p>netmask 255.255.255.0</p>
<p>gateway 192.168.1.1</p>
<p>wpa-scan-ssid 1                #这个设置成1 可以连接到隐藏的网络</p>
<p>wpa-ap-scan 1                  #这个设置成1 可以连接到隐藏的网络</p>
<p>wpa-ssid “HELLO”</p>
<p>wpa-psk “123456”</p>
<p>#wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf</p>
<p>iface default inet dhcp</p>
<p>auto wlan0<br>allow-hotplug wlan0<br>iface wlan0 inet dhcp<br>   wpa-scan-ssid 1<br>   wpa-ap-scan 1<br>   wpa-key-mgmt WPA-PSK<br>   wpa-proto RSN WPA<br>   wpa-pairwise CCMP TKIP<br>   wpa-group CCMP TKIP<br>   wpa-ssid “My Secret SSID”<br>   wpa-psk “My SSID PSK”</p>
<p>修复断线问题。设置无线网卡不节能。</p>
<blockquote>
<p>lsmod</p>
<blockquote>
<p>8192cu                550797  0</p>
</blockquote>
<blockquote>
</blockquote>
<p>创建sudo nano /etc/modprobe.d/8192cu.conf</p>
<p># Disable power saving</p>
<p>options 8192cu rtw_power_mgnt=0 rtw_enusbss=1 rtw_ips_mode=1</p>
</blockquote>
<p>相关命令</p>
<blockquote>
<p>iwconfig wlan0    查看无线接口状态</p>
<p>iwlist wlan0 scan    扫描无线网络</p>
</blockquote>
<p><a href="http://www.geekfan.net/8776/">http://www.geekfan.net/8776/</a></p>
<p><a href="http://www.dafinga.net/2013/01/how-to-setup-raspberry-pi-with-hidden.html">http://www.dafinga.net/2013/01/how-to-setup-raspberry-pi-with-hidden.html</a>     需要翻墙</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派 GPIO引脚定义</title>
    <url>/posts/43200443/</url>
    <content><![CDATA[<p><a href="http://pi.gadgetoid.com/pinout">http://pi.gadgetoid.com/pinout</a></p>
<p>每个接口都有说明哦</p>
<p>树莓派B+</p>
<p><img src="http://img0.ph.126.net/5wA-N9e9ZmJRCc-zYWf9kw==/3118461266995395390.png" alt="树莓派B+ GPIO引脚定义 - leaf - ------坚持雅操------" title="树莓派B+ GPIO引脚定义 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>树莓派2 B+</p>
<p><img src="http://img2.ph.126.net/JnO60RLbCb4r-UhbuObgJA==/6619373360026755635.jpg" alt="树莓派 GPIO引脚定义 - leaf - ------勤解万难------" title="树莓派 GPIO引脚定义 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派2 B+ 安装bypy百度云盘客户端</title>
    <url>/posts/797735913/</url>
    <content><![CDATA[<p>wget <a href="https://github.com/houtianze/bypy/archive/master.zip">https://github.com/houtianze/bypy/archive/master.zip</a></p>
<p>unzip master.zip -d bypy</p>
<p>cd bypy</p>
<p>sudo apt-get install python-pip</p>
<p>sudo pip install requests</p>
<p>sudo bypy.py info</p>
<p>出现网址</p>
<p><img src="http://img0.ph.126.net/G9V9jQ2IxqHSJAodqboAkw==/6630268420747152954.png" alt="树莓派2 B+ 安装bypy百度云盘客户端 - leaf - ------勤解万难------" title="树莓派2 B+ 安装bypy百度云盘客户端 - leaf - ------勤解万难------"></p>
<p> 打开网页，输入网址，出现授权码</p>
<p><img src="http://img1.ph.126.net/gxgKsvHE2T-hfR3NjGfcqQ==/6631283269979022070.png" alt="树莓派2 B+ 安装bypy百度云盘客户端 - leaf - ------勤解万难------" title="树莓派2 B+ 安装bypy百度云盘客户端 - leaf - ------勤解万难------"></p>
<p> 粘贴到终端里，然后按enter</p>
<p><img src="http://img1.ph.126.net/-Jq49xdnTUD8iQ_ZD3xmQg==/6630867654584985493.png" alt="树莓派2 B+ 安装bypy百度云盘客户端 - leaf - ------勤解万难------" title="树莓派2 B+ 安装bypy百度云盘客户端 - leaf - ------勤解万难------"></p>
<p> </p>
<p>搞定</p>
<p><img src="http://img2.ph.126.net/K8rUGcsGTYR5ii81o9UYTA==/6630735713189655509.png" alt="树莓派2 B+ 安装bypy百度云盘客户端 - leaf - ------勤解万难------" title="树莓派2 B+ 安装bypy百度云盘客户端 - leaf - ------勤解万难------"></p>
<p> </p>
<p>参考：</p>
<p><a href="https://github.com/houtianze/bypy">https://github.com/houtianze/bypy</a></p>
<p><a href="http://tieba.baidu.com/p/3439470932">http://tieba.baidu.com/p/3439470932</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派2 安装freebsd11</title>
    <url>/posts/2900167838/</url>
    <content><![CDATA[<p>1、下载镜像并安装  </p>
<blockquote>
<p><a href="https://wiki.freebsd.org/FreeBSD/arm/Raspberry%20Pi">https://wiki.freebsd.org/FreeBSD/arm/Raspberry%20Pi</a><br><a href="http://raspbsd.org/raspberrypi.html">http://raspbsd.org/raspberrypi.html</a>  </p>
</blockquote>
<blockquote>
<p>写入SD卡即可  </p>
</blockquote>
<p>2、freebsd基础配置  </p>
<blockquote>
<p><a href="http://www.bigsea.com.cn/archives/1393/">http://www.bigsea.com.cn/archives/1393/</a><br>1、使用root账号ssh登陆  </p>
<blockquote>
<p>ee /etc/ssh/sshd_config<br>加入<br>PermitRootLogin yes  </p>
</blockquote>
<p>2、设置静态路由  </p>
<blockquote>
<p>ee /etc/rc.conf<br>ifconfig_ue0=”inet 192.168.3.22 netmask 255.255.255.0”<br>defaultrouter=”192.168.3.1”  </p>
</blockquote>
<p>3、设置时间  </p>
<blockquote>
<p>cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br>echo ‘ntpd_enable=”YES”‘ &gt;&gt; /etc/rc.conf<br>service ntpd start  </p>
</blockquote>
<p>4、设置swap分区  </p>
<blockquote>
<p>dd if=/dev/zero of=/usr/swap0 bs=1m count=128<br>chmod 0600 /usr/swap0<br>echo ‘md99 none swap sw,file=/usr/swap0 0 0’ &gt;&gt; /etc/fstab<br>swapon -aq  </p>
</blockquote>
</blockquote>
<blockquote>
<p>5、安装pkg install   (万年Operation timed out，没成功过T_T)  </p>
<blockquote>
<p>1. First install pkg by pkg-static.<br>    # fetch <a href="http://www.peach.ne.jp/archives/rpi/ports/rpi2/pkg-static">http://www.peach.ne.jp/archives/rpi/ports/rpi2/pkg-static</a><br>    # chmod 755 pkg-static<br>    # ./pkg-static add <a href="http://www.peach.ne.jp/archives/rpi/ports/rpi2/pkg.txz">http://www.peach.ne.jp/archives/rpi/ports/rpi2/pkg.txz</a>  </p>
<p>2. Disable default repo by FreeBSD.conf.<br>    # mkdir -p /usr/local/etc/pkg/repos<br>    # echo “FreeBSD: { enabled: no }” &gt; /usr/local/etc/pkg/repos/FreeBSD.conf  </p>
<p>3. Install following rpi2.conf:<br>    # fetch <a href="http://www.peach.ne.jp/archives/rpi/rpi2.conf">http://www.peach.ne.jp/archives/rpi/rpi2.conf</a><br>    # mv rpi2.conf /usr/local/etc/pkg/repos<br>    # pkg update  </p>
<p>用host -t srv _http._tcp.pkg.freebsd.org 得到的地址更新也是莫有用  </p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派2搭建双机并行计算环境</title>
    <url>/posts/1105892258/</url>
    <content><![CDATA[<p>0、准备材料</p>
<blockquote>
<p>2个树莓派2，刷ubuntu14.04，安装好编译环境</p>
<p>地址：192.168.3.17，192.168.3.18</p>
<p>下载MPICH2源码</p>
</blockquote>
<p>以下两个树莓派都要设置  </p>
<p>1、安装相关软件</p>
<blockquote>
<p>sudo apt-get install gfortran</p>
<p>sudo apt-get install mpich2</p>
</blockquote>
<blockquote>
<p>解压源码，并编译example下的cpi.c</p>
</blockquote>
<blockquote>
<blockquote>
<p>mpicc cpi.c -o cpi </p>
</blockquote>
</blockquote>
<p>2、相关设置</p>
<blockquote>
<p>vi /etc/hosts 添加</p>
<p>192.168.3.17Yrpi2-1</p>
<p>192.168.3.18Yrpi2-2</p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
<p>新建文件machinefile，添加</p>
</blockquote>
<blockquote>
<p>192.168.3.17</p>
</blockquote>
<blockquote>
<p>192.168.3.18</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>设置无密码登陆</p>
</blockquote>
<blockquote>
<p>ssh-keygen -t rsa -C “ywz@ywz”</p>
</blockquote>
<blockquote>
<p>cat ~/.ssh/id_rsa.pub | ssh <a href="mailto:&#x75;&#x62;&#x75;&#110;&#x74;&#x75;&#x40;&#49;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#46;&#x33;&#46;&#49;&#x38;">&#x75;&#x62;&#x75;&#110;&#x74;&#x75;&#x40;&#49;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#46;&#x33;&#46;&#49;&#x38;</a> “mkdir .ssh;cat &gt;&gt; .ssh/authorized_keys”</p>
</blockquote>
<blockquote>
<blockquote>
<p>做下无密码登陆测试 ssh 192.168.3.18 看是否已经登陆Yrpi2-2</p>
</blockquote>
</blockquote>
<p>测试</p>
<blockquote>
<p>mpiexec -f machinefile -n 4 ./cpi</p>
</blockquote>
<blockquote>
<blockquote>
<p>Process 1 of 2 is on Yrpi2-2</p>
<p>Process 0 of 2 is on Yrpi2-1</p>
<p>pi is approximately 3.1415926544231318, Error is 0.0000000008333387</p>
<p>wall clock time = 0.003329</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派3更改分辨率</title>
    <url>/posts/886412846/</url>
    <content><![CDATA[<p>刷好后，进SD卡，里面有个config文件，用notepad++打开</p>
<p>2个参数</p>
<p>hdmi_mode=82                                #1080p</p>
<p>hdmi_group=2                                       #DMT</p>
<p>即可</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派B+ 安装archlinux做下载机</title>
    <url>/posts/102964102/</url>
    <content><![CDATA[<p>2016.02.16<br>已改用OpenMediaVault。其他还有nas4free。这两个都可以在树莓派1代上运行，很不错。<br>xware自动启动  </p>
<blockquote>
<p>新建脚本(下面有)<br>sudo update-rc.d xunlei.sh defaults  </p>
</blockquote>
<p>选用archlinux是因为它支持树莓派B+。而且是字符界面也比较适合树莓派B+</p>
<p>1、安装</p>
<blockquote>
<p><a href="http://archlinuxarm.org/platforms/armv6/raspberry-pi">http://archlinuxarm.org/platforms/armv6/raspberry-pi</a></p>
</blockquote>
<blockquote>
<p>分2个区，一个作boot目录，一个作root目录，然后下载解压就算制作好了</p>
<blockquote>
<p>fat32  100M</p>
</blockquote>
<blockquote>
<p>ext4    其余</p>
<p>wget <a href="http://archlinuxarm.org/os/ArchLinuxARM-rpi-latest.tar.gz">http://archlinuxarm.org/os/ArchLinuxARM-rpi-latest.tar.gz</a></p>
<p>bsdtar -xpf ArchLinuxARM-rpi-latest.tar.gz -C root</p>
<p>sync</p>
<p>mv root/boot/* boot</p>
</blockquote>
</blockquote>
<blockquote>
<p>默认账号有2个，root和alarm</p>
</blockquote>
<blockquote>
</blockquote>
<p>2、基础设置</p>
<blockquote>
<p><a href="http://hugozhu.myalert.info/2013/03/09/setup-archliunx-on-raspberry-pi.html">http://hugozhu.myalert.info/2013/03/09/setup-archliunx-on-raspberry-pi.html</a></p>
</blockquote>
<blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Systemd-networkd">https://wiki.archlinux.org/index.php/Systemd-networkd</a><br>更改时区  </p>
<blockquote>
<p>cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  </p>
</blockquote>
<p>设置静态地址<br>/etc/systemd/network/<em>eth0</em>.network  </p>
<blockquote>
<p>[Match]<br>Name=eth0  </p>
<p>[Network]<br>#DHCP=yes<br>Address = 192.168.3.13/24<br>Gateway = 192.168.3.1  </p>
</blockquote>
<p>添加源</p>
</blockquote>
<blockquote>
<p>nano /etc/pacman.d/mirrorlist  </p>
<blockquote>
<p>Server = <a href="https://mirrors.ustc.edu.cn/archlinuxarm/$arch/$repo">https://mirrors.ustc.edu.cn/archlinuxarm/$arch/$repo</a></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>更新源 pacman -Syy</p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>添加用户</p>
</blockquote>
<blockquote>
<blockquote>
<p>useradd ywz</p>
</blockquote>
<blockquote>
<p>passwd ywz</p>
</blockquote>
<blockquote>
<p>mkdir /home/ywz</p>
</blockquote>
<blockquote>
<p>chown ywz:ywz /home/ywz  </p>
</blockquote>
<blockquote>
<p>pacman -S sudo</p>
</blockquote>
<blockquote>
<p>visudo</p>
</blockquote>
<blockquote>
<p>ywz ALL=(ALL) NOPASSWD: ALL</p>
</blockquote>
</blockquote>
<blockquote>
<p>设置无线网络<br><a href="http://hugozhu.myalert.info/2013/03/09/setup-archliunx-on-raspberry-pi.html">http://hugozhu.myalert.info/2013/03/09/setup-archliunx-on-raspberry-pi.html</a><br><a href="https://wiki.archlinux.org/index.php/Wireless/_network/_configuration/_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29">https://wiki.archlinux.org/index.php/Wireless\_network\_configuration\_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29</a>  </p>
<blockquote>
<p>查看设备状况<br>dmesg | grep usbcore  </p>
<blockquote>
<p>registered new interface driver rtl8192cu  </p>
</blockquote>
<p>查看设备名<br>ls /sys/class/net  </p>
<blockquote>
<p>eth0  lo  wlan0  </p>
</blockquote>
<p>启用无线设备  </p>
<blockquote>
<p>ip link set wlan0 up  </p>
</blockquote>
<p>由于我用的是免驱的8188cus，所以不用安装驱动了。<br>其他网卡可以这么操作 如：pacman -S dkms-8188eu<br>连接无线网络  </p>
<blockquote>
<p>pacman -S wireless_tools   </p>
<blockquote>
<p>会提示你安装其他相关插件，一起装了  </p>
</blockquote>
<p>wifi-menu  </p>
<blockquote>
<p>会产生一个配置文件(我的命名为Leaf)，放在/etc/netctl下面  </p>
</blockquote>
</blockquote>
<blockquote>
<p>编辑配置文件  </p>
</blockquote>
<blockquote>
<p>Description=’A simple WPA encrypted wireless connection using a static IP’<br>Interface=wlan0<br>Connection=wireless<br>Security=wpa<br>ESSID=’Leaf’<br>Key=’zane1984#’<br>IP=static<br>Address=’192.168.3.22/24’<br>Gateway=’192.168.3.1’<br>DNS=(‘192.168.3.1’)<br># Uncomment this if your ssid is hidden<br>Hidden=yes  </p>
</blockquote>
<blockquote>
<p>配置文件是从/etc/netctl/examples/wireless-wpa-static 复制过来的<br>设置自启动  </p>
</blockquote>
<blockquote>
<blockquote>
<p>netctl enable Leaf  </p>
</blockquote>
</blockquote>
</blockquote>
<p>挂在移动硬盘</p>
<p>lsblk -o name,kname,uuid</p>
</blockquote>
<blockquote>
<p><img src="http://img0.ph.126.net/etAFT6nSEwKNs8xECfgOOg==/2587317985942457601.png" alt="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------" title="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------"> </p>
</blockquote>
<blockquote>
<p>mkdir /home/ywz/download<br>mount /dev/sdc /home/ywz/download  </p>
<p>nano /etc/fstab</p>
</blockquote>
<blockquote>
<blockquote>
<p>UUID=2db5ecf6-c374-4724-a27b-662b304f82a6       /home/ywz/download        ext4    defaults,noatime  0       0</p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>3、安装samba，ntp</p>
<blockquote>
<p>pacman -S samba ntp</p>
<p>mv /etc/samba/smb.conf{,-orig}</p>
<p>nano /etc/samba/smb.conf</p>
</blockquote>
<blockquote>
<blockquote>
<p>[global]</p>
</blockquote>
<blockquote>
<p>    workgroup = WORKGROUP</p>
</blockquote>
<blockquote>
<p>    security = user</p>
</blockquote>
<blockquote>
<p>    guest account = ywz</p>
</blockquote>
<blockquote>
<p>    map to guest = bad user</p>
</blockquote>
<blockquote>
<p>    wins support = yes</p>
</blockquote>
<blockquote>
<p>    log level = 1</p>
</blockquote>
<blockquote>
<p>    max log size = 1000</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>[download]</p>
</blockquote>
<blockquote>
<p>    path = /home/ywz/download</p>
</blockquote>
<blockquote>
<p>    read only = no</p>
</blockquote>
<blockquote>
<p>    force user = ywz</p>
</blockquote>
<blockquote>
<p>    force group = ywz</p>
</blockquote>
<blockquote>
<p>    guest ok = yes</p>
</blockquote>
</blockquote>
<blockquote>
<p>开机启动              systemctl enable smbd.service</p>
<p>添加samba用户  smbpasswd -a ywz</p>
</blockquote>
<p>4、安装迅雷远程</p>
<blockquote>
<p><a href="http://dl.lazyzhu.com/file/Thunder/Xware/1.0.31/">http://dl.lazyzhu.com/file/Thunder/Xware/1.0.31/</a></p>
</blockquote>
<blockquote>
<p><a href="http://lilin.hn.cn/2014102710272.html">http://lilin.hn.cn/2014102710272.html</a></p>
<p><a href="http://www.linuxidc.com/Linux/2013-05/84748.htm">http://www.linuxidc.com/Linux/2013-05/84748.htm</a></p>
<p>wget <a href="http://dl.lazyzhu.com/file/Thunder/Xware/1.0.31/Xware1.0.31/_armel/_v5te/_glibc.zip">http://dl.lazyzhu.com/file/Thunder/Xware/1.0.31/Xware1.0.31\_armel\_v5te\_glibc.zip</a></p>
<p>pacman -S zip unzip</p>
<p>unzip Xware1.0.31_armel_v5te_glibc.zip -d xware</p>
<p>mv xware /opt/xware</p>
<p>./opt/xware/portal   会出来一个代码</p>
<p>打开 <a href="http://yuancheng.xunlei.com/">http://yuancheng.xunlei.com/</a> 后点添加，输入激活码即可</p>
<p>开机启动</p>
<p>nano /opt/xware/xunlei</p>
</blockquote>
<blockquote>
<blockquote>
<p>#!/bin/sh</p>
<p>#</p>
<p># Xunlei initscript</p>
<p>#</p>
<p>### BEGIN INIT INFO</p>
<p># Provides:          xunlei</p>
<p># Required-Start:    $network $local_fs $remote_fs</p>
<p># Required-Stop::    $network $local_fs $remote_fs</p>
<p># Should-Start:      $all</p>
<p># Should-Stop:       $all</p>
<p># Default-Start:     2 3 4 5</p>
<p># Default-Stop:      0 1 6</p>
<p># Short-Description: Start xunlei at boot time</p>
<p># Description:       A downloader</p>
<p>### END INIT INFO</p>
<p>do_start()</p>
<p>{</p>
<p>        ./opt/xware/portal</p>
<p>}</p>
<p>do_stop()</p>
<p>{</p>
<p>        ./opt/xware/portal -s</p>
<p>}</p>
<p>case “$1” in</p>
<p>  start)</p>
<p>    do_start</p>
<p>    ;;</p>
<p>  stop)</p>
<p>    do_stop</p>
<p>    ;;</p>
<p>esac</p>
</blockquote>
<p>nano /usr/lib/systemd/system/xunlei.service</p>
</blockquote>
<blockquote>
<blockquote>
<p>[Unit]</p>
</blockquote>
<blockquote>
<p>Description=xunlei</p>
</blockquote>
<blockquote>
<p>ConditionPathExists=/opt/xware/xunlei</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>[Service]</p>
</blockquote>
<blockquote>
<p>Type=forking</p>
</blockquote>
<blockquote>
<p>ExecStart=/opt/xware/xunlei start</p>
</blockquote>
<blockquote>
<p>TimeoutSec=0</p>
</blockquote>
<blockquote>
<p>StandardOutput=tty</p>
</blockquote>
<blockquote>
<p>RemainAfterExit=yes</p>
</blockquote>
<blockquote>
<p>SysVStartPriority=99</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>[Install]<br>WantedBy=multi-user.target</p>
</blockquote>
<blockquote>
</blockquote>
<p>systemctl enable xunlei.service  添加开机启动命令</p>
</blockquote>
<blockquote>
<p>systemctl status xunlei.service   可查看运行状况</p>
</blockquote>
<blockquote>
</blockquote>
<p>5、aria2</p>
<blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Aria2">https://wiki.archlinux.org/index.php/Aria2</a></p>
<p><a href="http://aria2c.com/usage.html">http://aria2c.com/usage.html</a></p>
<p><a href="http://www.eeboard.com/bbs/thread-22086-1-1.html">http://www.eeboard.com/bbs/thread-22086-1-1.html</a></p>
<p><a href="http://godloong.com/RaspberryPi/raspberrypi-nas-samba-baiduyun.html">http://godloong.com/RaspberryPi/raspberrypi-nas-samba-baiduyun.html</a></p>
<p><a href="http://blog.binux.me/2012/12/aria2-examples/">http://blog.binux.me/2012/12/aria2-examples/</a></p>
<p><a href="https://www.librehat.com/aria2-camouflage-utorrent-pt-download/">https://www.librehat.com/aria2-camouflage-utorrent-pt-download/</a><br><a href="http://phpquan.com/arm/raspberry-pi-aria2-yaaw-downloader/">http://phpquan.com/arm/raspberry-pi-aria2-yaaw-downloader/</a>  </p>
<p>pacman -S aria2 nginx git</p>
<p>开机启动 systemctl enabel nginx    </p>
<p>安装Yaaw</p>
</blockquote>
<blockquote>
<p>cd /usr/share/nginx          </p>
<p>rm -rf html</p>
<p>git clone <a href="https://github.com/binux/yaaw.git">https://github.com/binux/yaaw.git</a>     /usr/share/nginx/html/</p>
</blockquote>
<blockquote>
<p>配置aria2</p>
</blockquote>
<blockquote>
<p>mkdir /home/ywz/.aria2<br>cd /home/ywz/.aria2<br>touch aria2.conf    aria2.session    log.log<br>nano aria2.conf</p>
</blockquote>
<blockquote>
<blockquote>
<p>####<a href="http://aria2c.com/usage.html####">http://aria2c.com/usage.html####</a><br>enable-rpc=true<br>rpc-allow-origin-all=true<br>rpc-listen-all=true<br>rpc-secret=secret  </p>
<p>bt-max-peers=96<br>listen-port=25236<br>enable-dht=false<br>enable-dht6=false<br>bt-enable-lpd=false<br>enable-peer-exchange=false<br>user-agent=uTorrent/341(109279400)(30888)<br>peer-id-prefix=-UT341-<br>seed-ratio=1.0<br>force-save=true<br>bt-hash-check-seed=true<br>bt-seed-unverified=true<br>bt-save-metadata=true  </p>
<p>dir=/home/ywz/download<br>file-allocation=none<br>continue=true  </p>
<p>max-concurrent-downloads=3<br>max-connection-per-server=5<br>split=5<br>disable-ipv6=true  </p>
<p>input-file=/home/ywz/.aria2/aria2.session<br>save-session=/home/ywz/.aria2/aria2.session<br>log=/home/ywz/.aria2/log.log<br>log-level=warn  </p>
<blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>验证配置文件</p>
</blockquote>
<blockquote>
<p>aria2c –conf-path=/home/ywz/.aria2/aria2.conf</p>
</blockquote>
<blockquote>
<p>开机启动</p>
</blockquote>
<blockquote>
<p><a href="https://github.com/GutenYe/systemd-units/tree/master/aria2">https://github.com/GutenYe/systemd-units/tree/master/aria2  
</a>sudo nano /usr/lib/systemd/system/aria2.service</p>
<blockquote>
<p>[Unit]<br>Description=Aria2 User Service by %u<br>After=network.target  </p>
<p>[Service]<br>ExecStart=/usr/bin/aria2c –enable-rpc –rpc-listen-all –rpc-allow-origin-all –save-session /home/ywz/.aria2/aria2.session –input-file /home/ywz/.aria2/aria2.session –conf-path=/home/ywz/.aria2/aria2.conf  </p>
<p>[Install]<br>WantedBy=default.target</p>
</blockquote>
</blockquote>
<blockquote>
<p>sudo systemctl enable aria2.service</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>其他还支持百度网盘，旋风离线，迅雷离线。  </p>
</blockquote>
<p><a href="http://token:secret@192.168.3.101:6800/jsonrpc">http://token:secret@192.168.3.101:6800/jsonrpc</a>  </p>
<p><img src="http://img2.ph.126.net/e7gspMPED-AHBEXtDEFMbg==/6631360235792953016.png" alt="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------" title="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------"></p>
<p> </p>
<p>安装yaourt  </p>
<blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Yaourt/_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29">https://wiki.archlinux.org/index.php/Yaourt\_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29</a><br>pacman -S base-devel fakeroot sudo<br>安装 package-query  </p>
<blockquote>
<p>wget <a href="https://aur.archlinux.org/cgit/aur.git/snapshot/package-query.tar.gz">https://aur.archlinux.org/cgit/aur.git/snapshot/package-query.tar.gz</a><br>tar zxvf package-query.tar.gz<br>cd package-query  </p>
<p><img src="http://img1.ph.126.net/8Nn5vsChGC1TwjZesC8f5w==/6630354182654129188.png" alt="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------" title="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------"></p>
<p>makepkg -si  </p>
</blockquote>
<p>安装 yaourt  </p>
</blockquote>
<blockquote>
<blockquote>
<p>wget <a href="https://aur.archlinux.org/cgit/aur.git/snapshot/yaourt.tar.gz">https://aur.archlinux.org/cgit/aur.git/snapshot/yaourt.tar.gz</a><br>tar zxvf yaourt.tar.gz<br>cd yaourt<br>makepkg -si  </p>
</blockquote>
</blockquote>
<p>安装monitorix  </p>
<blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Monitorix">https://wiki.archlinux.org/index.php/Monitorix</a><br><a href="https://linux.cn/article-3171-1.html">https://linux.cn/article-3171-1.html</a><br><a href="http://www.monitorix.org/documentation.html#3">http://www.monitorix.org/documentation.html#3</a>  </p>
</blockquote>
<blockquote>
<p>yaourt monitorix  <br>或者  </p>
</blockquote>
<blockquote>
<p>wget <a href="https://aur.archlinux.org/cgit/aur.git/snapshot/monitorix.tar.gz">https://aur.archlinux.org/cgit/aur.git/snapshot/monitorix.tar.gz</a><br>tar zxvf monitorix.tar.gz<br>cd monitorix<br>makepkg -si  </p>
<p>配置<br>/etc/monitorix/monitorix.conf  </p>
<blockquote>
<p>&lt;httpd_builtin&gt;<br>enabled = y  </p>
</blockquote>
<p>/etc/nginx/nginx.conf  </p>
<blockquote>
<p>server {<br>    listen       80;<br>    server_name  your.domain.com;  </p>
<p>    location / {<br>       proxy_pass <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a>;<br>       proxy_buffering off;<br>    }  </p>
<p>    location ~ ^/monitorix/(.+\.png)$ {<br>        alias /srv/http/monitorix/$1;<br>    }<br>}  </p>
</blockquote>
<p>添加自启动<br>sudo su<br>systemctl enable monitorix.service  </p>
</blockquote>
<blockquote>
<p><a href="http://192.168.3.13:8080/monitorix">http://192.168.3.13:8080/monitorix</a>  </p>
</blockquote>
<blockquote>
<p><img src="http://img0.ph.126.net/pyBeUgAOH_-_3TfPBAEI9w==/6630616965933875370.png" alt="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------" title="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------"></p>
<p>   </p>
</blockquote>
<p>DLNA</p>
<blockquote>
<p>pacman -S minidlna</p>
</blockquote>
<blockquote>
<p>nano /etc/minidlna</p>
</blockquote>
<blockquote>
<blockquote>
<p>media_dir=/home/ywz/download</p>
</blockquote>
<blockquote>
<p>media_dir=A,/home/ywz/download</p>
</blockquote>
<blockquote>
<p>media_dir=P,/home/ywz/download</p>
</blockquote>
<blockquote>
<p>media_dir=V,/home/ywz/download</p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>alsi  </p>
<blockquote>
<p>yaourt alsi  </p>
<p><img src="http://img2.ph.126.net/CJkVLDdWLKIMJMu_nZ5aZQ==/6630453138700746482.png" alt="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------" title="树莓派B+ 安装archlinux做下载机 - leaf - ------勤解万难------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派B+ 操作摄像头</title>
    <url>/posts/2348587197/</url>
    <content><![CDATA[<p>1、开启树莓派的摄像头功能</p>
<blockquote>
<p>sudo raspi-config</p>
</blockquote>
<blockquote>
<p>重启</p>
</blockquote>
<p>2、安装相关软件</p>
<blockquote>
<p>sudo apt-get install luvcview</p>
</blockquote>
<blockquote>
<p>sudo apt-get install python-opencv python-scipy python-numpy python-pip</p>
</blockquote>
<blockquote>
<p>sudo pip install <a href="https://github.com/ingenuitas/SimpleCV/zipball/master">https://github.com/ingenuitas/SimpleCV/zipball/master</a></p>
</blockquote>
<blockquote>
</blockquote>
<p>3、测试SimpleCV库</p>
<blockquote>
<p>python</p>
</blockquote>
<blockquote>
<p>Python 2.7.3 (default, Mar 18 2014, 05:13:23)</p>
<p>[GCC 4.6.3] on linux2</p>
<p>Type “help”, “copyright”, “credits” or “license” for more information.</p>
<p>&gt;&gt;&gt;import SimpleCV</p>
<p>&gt;&gt;&gt;</p>
</blockquote>
<p>4、用摄像头保存一张图片</p>
<blockquote>
<p>from SimpleCV import Camera,Display<br>from time import sleep  </p>
<p>myCamera = Camera(prop_set={“width”:320,”height”:240})  </p>
<p>frame = myCamera.getImage()<br>frame.save(“camera-output.jpg”)</p>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/M95LVRZPOdHpdmovl9kuyg==/6608866426911394034.jpg" alt="树莓派B+ 操作摄像头 - leaf - ------坚持雅操------" title="树莓派B+ 操作摄像头 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<p>5、人脸检测</p>
<blockquote>
<p>from SimpleCV import Camera,Display<br>from time import sleep  </p>
<p>myCamera = Camera(prop_set={“width”:320,”height”:240})  </p>
<p>myDisplay = Display(resolution=(320,240))  </p>
<p>while not myDisplay.isDone():<br>frame = myCamera.getImage()<br>faces = frame.findHaarFeatures(‘face’)<br>if faces:<br>for face in faces:<br>print “Face at: “ + str(face.coordinates())<br>else:<br>print “No faces detected.”<br>frame.save(myDisplay)<br>sleep(.1)  </p>
<p><img src="http://img2.ph.126.net/IaHfSsP6KyeRAZZHRoJBSw==/2453335897027967291.png" alt="树莓派B+ 操作摄像头 - leaf - ------坚持雅操------" title="树莓派B+ 操作摄像头 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<p>6、监控</p>
<blockquote>
<p>1、安装抓图软件sudo apt-get install fswebcam</p>
<p>2、Yeelink注册，并添加设备和传感器。（不交钱是公开的）</p>
<p>3、linux新建脚本</p>
<p>sudo fswebcam -d /dev/video0 -r 320x240 –bottom-banner –title “RaspberryPi @ Yeelink” –no-timestamp /home/pi/yeelink.jpg<br>curl –request POST –data-binary @”/home/pi/yeelink.jpg” –header “U-ApiKey:***********************“ <a href="http://api.yeelink.net/v1.0/device//*/*/*/*/*/sensor//*/*/*/*/*/photos">http://api.yeelink.net/v1.0/device/\*\*\*\*\*/sensor/\*\*\*\*\*/photos</a>  </p>
</blockquote>
<blockquote>
<blockquote>
<p>u-apikey：在yeelink的用户的账户这里找</p>
</blockquote>
<blockquote>
<p>后面的地址在传感器这里找</p>
</blockquote>
<p>4、加入到crontab</p>
</blockquote>
<blockquote>
<blockquote>
<p>crontab -e</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>*/1 * * * * /home/pi/yeelink.sh</p>
</blockquote>
</blockquote>
<blockquote>
<p><img src="http://img0.ph.126.net/x3SH3AJYpeb967AyqmO8Mw==/3363063021841550211.png" alt="树莓派B+ 操作摄像头 - leaf - ------坚持雅操------" title="树莓派B+ 操作摄像头 - leaf - ------坚持雅操------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派B+ 配置openwrt桥接模式</title>
    <url>/posts/690818048/</url>
    <content><![CDATA[<p>实现：桥接模式，无线AP，迅雷远程</p>
<p>硬件：树莓派B+，8188cus无线网卡，AX88772A有线网卡，其他</p>
<p>1、下载并刷入tf卡，远程连接等</p>
<blockquote>
<p><a href="http://downloads.openwrt.org/snapshots/trunk/brcm2708/generic/openwrt-brcm2708-sdcard-vfat-ext4.img">http://downloads.openwrt.org/snapshots/trunk/brcm2708/generic/openwrt-brcm2708-sdcard-vfat-ext4.img</a></p>
</blockquote>
<p>2、安装驱动</p>
<blockquote>
<p>opkg update</p>
<p>opkg install kmod-rtl8192cu                               #无线网卡驱动</p>
<p>opkg install kmod-usb-net kmod-usb-net-asix  #有线网卡驱动</p>
</blockquote>
<p>3、安装软件</p>
<blockquote>
<p>opkg update</p>
<p>opkg install luci luci-i18n-base-zh-cn</p>
<p>opkg install usbutils ip </p>
<p>opkg install kmod-usb-core kmod-usb-uhci kmod-usb-ohci kmod-usb2</p>
<p>opkg install hostapd wireless-tools                #无线AP必备</p>
</blockquote>
<p>4、配置</p>
<blockquote>
<p>无线</p>
<p>wifi detect &gt; /etc/config/wireless</p>
<p>vi /etc/config/wireless</p>
<p>config wifi-device ‘radio0’</p>
<p>        option type ‘mac80211’</p>
<p>        option channel ‘11’</p>
<p>        option hwmode ‘11g’</p>
<p>        option path ‘platform/bcm2708_usb/usb1/1-1/1-1.2/1-1.2:1.0’</p>
<p>        option htmode ‘HT20’</p>
<p>config wifi-iface</p>
<p>        option device ‘radio0’</p>
<p>        option network ‘lan’</p>
<p>        option mode ‘ap’ </p>
<p>        option ssid ‘OpenWrt’</p>
<p>        option disabled ‘0’                #是否广播ssid</p>
<p>        option encryption ‘none’#加密模式</p>
</blockquote>
<blockquote>
<p>网络</p>
<p>config interface ‘loopback’</p>
<p>        option ifname ‘lo’</p>
<p>        option proto ‘static’</p>
<p>        option ipaddr ‘127.0.0.1’</p>
<p>        option netmask ‘255.0.0.0’</p>
<p>config interface ‘lan’</p>
<p>        option proto ‘dhcp’                #可设置为其他，设置IP是为了树莓派能上网</p>
<p>        option type ‘bridge’</p>
<p>        option ifname ‘eth0 eth1’</p>
<p>config alias                                   #设置树莓派管理地址，找了好久终于搞定管理地址</p>
<p>        option interface ‘lan’</p>
<p>        option proto ‘static’</p>
<p>        option ipaddr ‘192.168.1.3’</p>
<p>        option netmask ‘255.255.255.0’</p>
<p>config globals ‘globals’</p>
<p>        option ula_prefix ‘fd40:132b:9a10::/48’</p>
</blockquote>
<p><img src="http://img0.ph.126.net/ekuUkBkj24IdK_dB6e-pcQ==/6619470117049688565.png" alt="树莓派B+ 配置openwrt桥接模式 - leaf - ------坚持雅操------" title="树莓派B+ 配置openwrt桥接模式 - leaf - ------坚持雅操------"></p>
<p><img src="http://img1.ph.126.net/QQYYOx2xnTewZQZCYaS-jQ==/3113394717414550858.png" alt="树莓派B+ 配置openwrt桥接模式 - leaf - ------坚持雅操------" title="树莓派B+ 配置openwrt桥接模式 - leaf - ------坚持雅操------"> </p>
<p><img src="http://img0.ph.126.net/S21VuiewLa6mZVfTyIPm1g==/3113676192391261497.png" alt="树莓派B+ 配置openwrt桥接模式 - leaf - ------坚持雅操------" title="树莓派B+ 配置openwrt桥接模式 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>5、安装迅雷远程</p>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>参考</p>
<p><a href="http://www.leiphone.com/news/201406/diy-a-smart-router-topic-openwrt.html">http://www.leiphone.com/news/201406/diy-a-smart-router-topic-openwrt.html</a></p>
<p><a href="http://blog.sina.com.cn/s/blog_40983e5e0102v6qt.html">http://blog.sina.com.cn/s/blog_40983e5e0102v6qt.html</a></p>
<p><a href="http://www.shuyz.com/install-openwrt-on-raspberry-as-a-wireless-router.html">http://www.shuyz.com/install-openwrt-on-raspberry-as-a-wireless-router.html</a></p>
<p><a href="http://www.tuicool.com/articles/rmmemif">http://www.tuicool.com/articles/rmmemif</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>桌面图标有阴影</title>
    <url>/posts/4228498380/</url>
    <content><![CDATA[<p>转载自：<a href="http://www.utosee.com/post/434.html">http://www.utosee.com/post/434.html</a>  </p>
<p>第一种方法：右键“我的电脑”—“属性”—“高级”—“性能”—“设置”，勾选下拉别表当中最下方的“在桌面上为图标标签使用阴影”，点击确定。回到桌面，如果依旧看不到透明的桌面图标文字效果，继续第二个方法（是继续，不是只做下面的）；  </p>
<p>第二种方法：右键桌面空白处，在“排列图标”查看“锁定桌面的web项目”是否前面有对勾，如果有对勾，点击一下，如果没有不用动（如果还没有成功，继续往下走）；</p>
<p>第三种方法：右键桌面空白处—“属性”—“桌面”—“自定义桌面”—“Web”，将下面所有列表上的对勾都去掉（如果没有成功，继续往下走）；  </p>
<p>第 四中方法：这种方法特别适用于安装了某个程序后，桌面文字变的不透明，但有图还是建议大家先用上面两个方法再来尝试本方法。开始中点击“运行”（如果没有 运行的朋友，可以使用键盘快捷键Win+R），打开运行框口，输入 gpedit.msc  ，打开组策略，在“用户配置”—“管理模板”—“桌面”—“Active Desktop”中，双击“启用 Active Desktop”项，选择“已禁用”，接着双击“禁用 Active Desktop”选择“已启用”；最后再执行一次第一种方法，如果还无效，就实属罕见了。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>概述</title>
    <url>/posts/3324366169/</url>
    <content><![CDATA[<p>本书：计算机网络(第4版) 谢希仁编<br>原理清楚了，实现起来就容易了！  </p>
<p>交换网：  </p>
<blockquote>
<p>电路交换网：如电话系统。<br>报文交换网<br>分组交换网：采用存储转发技术。所有的分组转发的包都是有标记的。(标记的不一定就是序号)  </p>
<blockquote>
<blockquote>
<p>    后面的通信都是基于分组交换网构建。  </p>
</blockquote>
</blockquote>
</blockquote>
<p>广域网和局域网就是物理层和数据链路层的具体规范和应用。  </p>
<p>计算机网络的主要性能指标：带宽、时延  </p>
<blockquote>
<p>带宽：</p>
</blockquote>
<blockquote>
<blockquote>
<p>信号的频率，原指模拟信号的频带宽度。单位：Hz</p>
</blockquote>
<blockquote>
<p>数字信号沿用带宽叫法，单位：b/s</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>注：通信领域和计算机领域，对k，m，g算法不一样</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>通信单位    1k=10^3 b/s</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>计算机单位1K=2^10 B  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>时延：</p>
</blockquote>
<blockquote>
<blockquote>
<p>处理时延：车辆排队等待进站的时间</p>
</blockquote>
<blockquote>
<p>发送时延：车流从第一辆车进收费站高速到最后一辆进收费站的时间</p>
</blockquote>
<blockquote>
<p>传播时延：车在高速上的时间</p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>网络协议：网络中数据交换的规则、标准</p>
<blockquote>
<p>网络协议包含：语法、语义、时序： 时序是指协议实现的顺序</p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>母亲节</title>
    <url>/posts/813387320/</url>
    <content><![CDATA[<p><img src="http://img0.ph.126.net/Fbjdh05ezirl-CfMUCI6Bw==/2602799109660461860.gif" alt="母亲节 - leaf - ------坚持雅操------" title="母亲节 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>每天计划好做什么，就不会迷茫</title>
    <url>/posts/1655955572/</url>
    <content><![CDATA[<p>每天计划好，生活会变得多姿多彩  </p>
<p>小孩子活泼，而现在却呆板  主要是压抑了自己，应该放开约束，让思想自由翱翔</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>注意下趋势，不要不经大脑就卖了！！！</title>
    <url>/posts/2854902932/</url>
    <content><![CDATA[<p><strong>买资源股的话，外盘期货对行情影响很大<br>每次都卖早了 怎么回事！！！<br>大盘大涨、版块大涨 股票大涨 怎么就卖掉了！！！<br>卖掉就算了 不要再去想了 下次卖之前多考虑下趋势！！！</strong></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>浪潮之巅2摘录</title>
    <url>/posts/3294078858/</url>
    <content><![CDATA[<p>1、往往一个公司的创始人的理念和企业文化决定了公司的前途和命运。  </p>
<blockquote>
<p>苹果是第一个推出微机的公司，也是第一个推出图形界面的公司，但在这两个方面，最终都变成小众化了。<br>我们通过企业管理层和企业氛围，基本上就能判断一个公司的前景。  </p>
</blockquote>
<p>2、一个产品，光有好的理念和设计是不够的，还需要有好的时机。  </p>
<blockquote>
<p>微软很早就推出过平板，却由于硬件跟不上而没有成功。  </p>
</blockquote>
<p>3、IT行业的规律  </p>
<blockquote>
<p>摩尔定律，反摩尔定律，安迪-比尔定律<br>摩尔定律：18个月内，计算机集成度会翻一番<br>反摩尔定律：18个月后，卖同样的产品，价格降一半。<br>安迪-比尔定律：通过软件的更新，带动硬件产业的发展。<br>这里说明两个问题：<br>如果硬件不快速发展，就会没利润；<br>如果我们不需要软件的新功能，或者我们够用了，硬件产业就会萧条；  </p>
</blockquote>
<p>4、服务行业  </p>
<blockquote>
<p>其实所有的高收入服务行业都是高附加值的。<br>如果仅仅只是做饭洗衣服，也许就没几个钱；如果能做可口的饭菜，身价马上就高了。这就是附加值。  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>海康旧 NVR添加新摄像头提示未知错误</title>
    <url>/posts/2650134662/</url>
    <content><![CDATA[<p>硬盘录像机和摄像头密码设置成一样 </p>
<p>协议选onvif </p>
<p>然后摄像头和硬盘录像机都重启一下 就好了</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>物理层</title>
    <url>/posts/1697479347/</url>
    <content><![CDATA[<p>1、传输媒体<br>传输媒体不属于物理层，就是一些导线，电磁波等。如双绞线、光纤、微波等<br>每种传输媒体，它的电磁波频谱是固定的，所以它的带宽也就固定。但在其上的传输速度还和信噪比有关  </p>
<blockquote>
<p>光纤：  </p>
</blockquote>
<blockquote>
<p>多模光纤：光纤直径较粗，光在里面用全反射实现传输<br>单模光纤：光纤直径较细，只有一个光波长的大小，光在里面一直相前传播  </p>
</blockquote>
<blockquote>
</blockquote>
<p>2、物理层<br>物理层的任务：如何在各种传输媒体上传输比特流。它规范了接口、电压、电压的意义、比特流帧的结构等  </p>
<blockquote>
<p>信道  </p>
<blockquote>
<p>向某个方向发送信息的传输媒体，如全双工就是2个信道，但是只有1条传输媒体  </p>
</blockquote>
<blockquote>
<p>信道信息传输速率  </p>
<blockquote>
<p>理想状态：2W*码元的信息量     b/s    #W为带宽，单位hz  </p>
<blockquote>
<p>本公式的意义是可以提高每个码元的信息量来提高传输速率  </p>
</blockquote>
<p>受限状态：<strong>Wlog</strong>2**(1**+<strong>S/N</strong>)       b/s    #S/N为信噪比  </p>
<blockquote>
<p>本公式的意义是可以提高带宽和信噪比来提高传输速率  </p>
</blockquote>
</blockquote>
</blockquote>
<p>基带和宽带  </p>
<blockquote>
<p>基带：不时传一下数据<br>宽带：每时每刻多在传数据。利用信道复用技术提高传输效率  </p>
</blockquote>
<p>同步和异步通信  </p>
<blockquote>
<p>不论何种通信，都要先进行比特同步，然后进行帧界定。但是比特同步方式不同就产生2种通信。</p>
</blockquote>
<blockquote>
<p>比特同步：接收端时钟已经调整到和发送端时钟完全一样<br>同步通信：收发双方不停地发送和接收连续的同步比特流用于时钟同步，然后可以随时发随时接收数据<br>异步通信：接收端时刻保持接收状态，发送端随时发送帧格式数据，帧前有前导用于比特同步  </p>
</blockquote>
<p>调制解调  </p>
<blockquote>
<p>调制解调的作用  </p>
<blockquote>
<p>1、数字信号和模拟信号的转换<br>2、为信道复用技术做准备  </p>
</blockquote>
<p>调制方法：调幅、调频、调相、还有3种的混合调制方法如正交调制(调幅+调相)<br>收发同步的问题：  </p>
<blockquote>
<p>同步传输：两端的时钟频率相等<br>异步传输：两边时钟频率不相等，但是为每个字节标记了一个起始和停止比特  </p>
<blockquote>
<p>注：以上两种时钟频率的采样点的移动都不能超过半个bit的宽度  </p>
</blockquote>
<p>同步问题是为了解决：  </p>
<blockquote>
<p>如何准确的接收数据的问题<br>例：发送频率1μm发一个数据，而接收频率是2μm收一个数据，则漏掉很多数据</p>
</blockquote>
</blockquote>
</blockquote>
<p>信道复用技术  </p>
<blockquote>
<p>信道复用技术就是为了提高信道的利用率。对模拟信号和数字信号都可以进行复用<br>包含：频分、时分、统计时分、密集波分、码分多址CDMA等<br>关于E1：<br>就是利用正交调制，使一个码元携带8bit的信息，然后再利用时分复用技术进行传输的<br>E1=8bitX8000帧/sX32时隙=2.048x10^6 b/s  </p>
<blockquote>
<p>8：是一个码元携带的信息量<br>8000：是频率<br>32：是信道数  </p>
</blockquote>
<p>注：E1就是对数字信号的时分复用。  </p>
</blockquote>
<p>传输标准和接口标准  </p>
<blockquote>
<p>SDH为同步数字传输标准<br>RS232(如电脑上的串口)、RS449：是模拟通信上面的的接口标准</p>
</blockquote>
<p>传输系统  </p>
<blockquote>
<p>光波是波，所以传的就是模拟信号  </p>
</blockquote>
<blockquote>
<p><img src="http://img5.ph.126.net/o2X5cqUGPM-55d7RzY6DfQ==/623185598455173235.png" alt="物理层 - leaf - ------坚持雅操------" title="物理层 - leaf - ------坚持雅操------"></p>
</blockquote>
</blockquote>
<p>图转自：<a href="mailto:&#120;&#105;&#x65;&#120;&#105;&#x72;&#x65;&#110;&#x40;&#x74;&#115;&#x69;&#110;&#x67;&#x68;&#x75;&#x61;&#x2e;&#x6f;&#x72;&#103;&#x2e;&#99;&#110;">&#120;&#105;&#x65;&#120;&#105;&#x72;&#x65;&#110;&#x40;&#x74;&#115;&#x69;&#110;&#x67;&#x68;&#x75;&#x61;&#x2e;&#x6f;&#x72;&#103;&#x2e;&#99;&#110;</a>的回复。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>物联网、私有云基础：DDNS，端口转发，UPNP</title>
    <url>/posts/3799354604/</url>
    <content><![CDATA[<p>一、概念</p>
<p>DDNS：</p>
<blockquote>
<p>就是找你的路由器（路由器外网IP地址）</p>
</blockquote>
<blockquote>
<p>我们每次PPPOE拨号后，外网的IP地址都不一样，所以就不知道外网的IP地址是多少了</p>
<p>使用DDNS，就可以随时随地的找到你自己的网络的IP地址</p>
</blockquote>
<p>端口转发：</p>
<blockquote>
<p>就是在路由器上开个门，用于进出路由器（访问路由器背后自己家里建的服务）</p>
</blockquote>
<blockquote>
<p>我们的路由器就相当于一堵城墙，端口转发就相当于城门，</p>
<p>我们通过城门就可以进入我们家里自建的局域网服务了。</p>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/NW7i_crFIm2M8S7VbR868A==/6630515810862399928.png" alt="物联网、私有云基础：DDNS，端口转发，UPNP - leaf - ------勤解万难------" title="物联网、私有云基础：DDNS，端口转发，UPNP - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>UPNP：</p>
<blockquote>
<p>自动设置端口转发规则，不需要自己手动设置。</p>
</blockquote>
<p>二、用途</p>
<p>我们要这些IP地址：端口号  有什么用呢？</p>
<blockquote>
<p>我们在自己的局域网开通了私人博客，但是我们外出之后怎么访问自己的博客呢？</p>
</blockquote>
<blockquote>
<p>就是通过 DDNS提供的IP地址：端口转发的端口号 访问！</p>
</blockquote>
<blockquote>
<p>例子：</p>
</blockquote>
<blockquote>
<p>局域网博客 192.168.1.3:80</p>
</blockquote>
<blockquote>
<p>外网访问      60.189.231.110:80</p>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>玩网众无盘</title>
    <url>/posts/4161376860/</url>
    <content><![CDATA[<p>网吧服务器的带机量：  </p>
<blockquote>
<p>1、CPU处理速度：这个跟带机量应该密切相关<br>2、内存容量：越，测试用。大越好，当虚拟盘。1XGB/s<br>3、硬盘速度：选用PCI-E接口的，直接到千兆了 1GB/s。SAN也是不错的选择。<br>4、网络速度：千兆是必须的<br>其他就加负载均衡，高可用等。  </p>
</blockquote>
<blockquote>
<p>瓶颈就是硬盘速度。看你读写缓存速度。  </p>
</blockquote>
<p>搭建就按说明书上的搭建就好了，用的是破解版的启动服务器。<br>网众是linux系统的，所以比较稳定。  </p>
<p><img src="http://img2.ph.126.net/lnM8u6x6m22FRJG2n5y9Rw==/3242310256830412532.png" alt="玩网众无盘 - leaf - ------坚持雅操------" title="玩网众无盘 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/V_DjrEVBbLX_9NdhwbuGzA==/848365579906058585.png" alt="玩网众无盘 - leaf - ------坚持雅操------" title="玩网众无盘 - leaf - ------坚持雅操------"></p>
<p>ubuntu下安装：<br>1、sudo apt-get install dialog<br>2、chmod a+x nxp.run<br>3、sh nxp.run  </p>
<p>数据管理器   nxpiomgr<br>启动管理器   nxpbootmgr  </p>
<p>字体支持方面不太好，还得研究研究。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>申请了一个免费的阿里云虚拟主机</title>
    <url>/posts/4161650134/</url>
    <content><![CDATA[<p>买了一个ywz.space域名。本来想买ywz.xyz的，可惜别人捷足先登了。。。  </p>
<p>申请地址：<a href="http://wanwang.aliyun.com/hosting/free/">http://wanwang.aliyun.com/hosting/free/</a><br>每天0点开始抢  </p>
<p><img src="http://img0.ph.126.net/S8350ODqubBjrkq8w17EjQ==/6619306289817499122.png" alt="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------" title="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/wrRxivHFeEFnrVKAOcYKSQ==/1154047404531844092.png" alt="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------" title="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/LKtpQbq17938NSgjOYbz8Q==/6608808152795266033.png" alt="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------" title="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/GwUII9UXYWrQXSBrecK0mw==/975029319344203017.png" alt="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------" title="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img0.ph.126.net/U2ypxViJH8uyOFKf1j7ksg==/6619563575538394239.png" alt="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------" title="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img1.ph.126.net/e_9osl7dkcf92L5KJX9D0A==/6619436032189572817.png" alt="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------" title="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------"></p>
<p> </p>
<p><img src="http://img2.ph.126.net/lfnWq_0FfvPQsr94ZYmrUg==/6631318454351558021.png" alt="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------" title="申请了一个阿里云免费虚拟主机 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>相亲记事</title>
    <url>/posts/1427130288/</url>
    <content><![CDATA[<p>2010.09.30 相亲<br>晚上又要相亲，又是一个开车过来的。。。无语了，现在的人怎么都这么有钱阿<br>到了表姑家，和表姑一起去媒人家里，她坐在沙发上看电视，然后就边看电视边聊<br>觉得还挺聊得来的，说明她的气质很适合我。在一起没有拘束感。<br>当然我不会投入太深。刚刚经历了打击，做什么事情都得小心点。  </p>
<p>2010.10.03 长屿硐天<br>她调修了一天，好像温岭没什么地方好玩的，绞尽脑汁才想出去长屿洞天玩。<br>上午9点的样子出发，发现她开车只会往前开。<br>现在才发现，她真的有点瘦了。<br>我以为她会看路线，所以我就只随便翻了下百度。没想到她竟然没看。<br>我记得路线很简单的，一直往前开往右拐就到了。不过还是问了她同事后她才清楚。<br>到了目的地，买了全票(游4个洞，后来才知道，门票这个地方也算一个洞。。。)<br>这边的空气很清新，要是天天在这边散步就好了，肯定会长寿的 呵呵<br>这边的标识不太清楚，然后我们就乱走，哪边好看就去哪边<br>走了一个多小时，还没到达第一个景点，汗。。<br>而且想看东边的风景的，跑去西边了<br>求了一只签，却没许愿。。。  </p>
<p>2010.10.10<br>今天一起经历了10.10.10 10:10:10<br>上午去了温岭锦屏公园。<br>那水不是一般的脏，还有点发臭。<br>绕了一圈，竟然发现这里还有人拍婚纱照。。。。<br>一起踩水车，一起坐船，这边竟然还有过山车，就想去坐坐，她竟然死活不去，有这么怕吗。。。<br>我只好一个人坐了<br>为了表现表现，我坐在第一排。<br>刚开始很平稳，然后车慢慢往上爬，还可以享受下高处看风景的乐趣。<br>一爬到山顶后竟然笔直往下冲，一下子就感觉吸不进气，有点窒息了。<br>赶紧闭上眼镜，只知道一直转一直转，等我睁开眼的时候已经快进站了，出了车，脸色惨白 走路飘飘的<br>有经验了，下次就可以享受到乐趣了 呵呵<br>中午去吃了酸菜鱼，下午去爬了座小山。<br>晚上感觉很累，才感觉，也许她和我在一起的时候只是强忍着的，也许她很累很累，下次我要多注意下她的感受。  </p>
<p>2010.10.17<br>一起去楼旗尖，山路有点陡，走一会儿就气喘吁吁，其实这山也不怎么高的，可能是自己没锻炼的原因<br>走到半路才发现忘了拿相机了，又跑回去拿，还特地换了下电池(这绝对是个错误，那块电池没电了)<br>山路弯弯曲曲，我们不知道歇了多少次，终于到山顶啦<br>感觉没什么风景，连个庙宇也没有像样的，然后建筑都没什么特色。<br>我们沿着山路去了另一座山峰，搂着她一起坐着，感觉坐了好久。<br>下午，决定下山了，看到山顶山还有一条路通向另一个山峰，就又想去看看，哈哈，这次是牵手去的哦<del>~<br>下山后，去了乐购，然后躺在车里休息了一下。<br>快6点的时候，去吃韩国烧烤。<br>吃了2个多钟头，不过还是感觉火锅比较好吃。<br>她胃有点不舒服，还装作是累了休息。。。<br>在车里吻她，觉得亲吻是很简单的事情，好像她还不会，下次再多练习练习</del></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>相关认识</title>
    <url>/posts/664058515/</url>
    <content><![CDATA[<p>基础知识还是看鸟哥的两本书比较好。看ubuntuserver最佳方案只是为了在ubuntu server下更好的练习<br>鸟哥的两本书就相当于理论知识，ubuntuserver最佳方案就相当于实验手册<br>单单看理论，枯燥、乏味<br>单单做练习，又没法深入体会<br>结合起来看比较好</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>破解windows xp 登录密码</title>
    <url>/posts/1082644424/</url>
    <content><![CDATA[<p>用启动盘进入DOS，依次输入： del c:\windows\system32\config\sam copy c:\windows\repair\sam c:\windows\system32\config</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>硬件raid和软件raid说明、设置及维护</title>
    <url>/posts/582936588/</url>
    <content><![CDATA[<p>说明：<br>硬件raid一定要用raid卡或者板载raid功能，用raid卡的硬盘接在raid卡上，用板载raid的硬盘接在硬盘上<br>软件raid不需要raid卡或者板载raid，只要硬盘插在主板上即可<br> <br>      关于硬盘：<br>              sas硬盘：串行scsi硬盘<br>              sata硬盘：普通硬盘，串行ata硬盘<br> <br>     关于网络存储：<br>              nas：相当于片上系统+硬盘。能独立运行，独立提供存储服务<br>              san：存储网络，通过服务器对外提供存储服务<br>              相关知识：<br>                          <a href="http://tech.sina.com.cn/roll/2008-12-15/0913914313.shtml">NAS与SAN存储解决方案优劣比较</a><br>                          <a href="http://news.sanhaostreet.com/NewsData/2009/6/2009625164357166.shtml">家用NAS选购经验谈</a><br>                          <a href="http://storage.it168.com/a2009/0603/582/000000582556.shtml">家用NAS常见处理器全解析</a>  </p>
<p>设置：<br>硬件raid设置：<br>       1、开机自检时按ctrl+R进入配置界面：<br>       2、在VD Mgmt中，按F2创建VD<br>       3、 选RAID模式，选物理硬盘，选容量(就像硬盘分区一样)。这样就创建好一个VD<br>       4、选初始化VD(就像格式化分区一样)<br>       5、在选容量、初始化等00000000<br>   ————————————————–<br>       6、配置热备：<br>             全局热备：<br>            1、按ctrl+R切换到PD Mgmt<br>            2、选空盘，按F2，选make global hs，按确定即可<br>             某磁盘组热备：<br>            1、VD Mgmt界面，选磁盘组，按F2，选manage ded.HS，选硬盘即可<br>硬件raid–系统安装<br>       <a href="http://forum.ubuntu.org.cn/viewtopic.php?t=274182">   在主板RAID上(俗称的FakeRAID)安装UBUNTU10.04</a>  </p>
<p>软件raid设置：(ubuntu)<br>         1、先对每个硬盘进行分区：建空分区表，分区(选择用于：raid物理卷)，备份分区表到其他硬盘<br>               alt+f2   sudo sfdisk -d /dev/sda | sudo sfdisk  –force /dev/sdb<br>          2、建raid阵列<br>                sudo mdadm –create /dev/md0 –auto=yes –force -R –level=raid1 –raid-devices=2 /dev/sd[a-b]1 <br>   —————————————————<br>lvm设置：<br>        1、 对md0进行创建lvm物理卷<br>        2、创建lvm卷组<br>        3、想对新硬盘分区一样创建lvm逻辑卷并分区<br>系统安装：<br>         跟单硬盘一样安装即可  </p>
<p>-———————————————————-<br>安装操作系统<br>         ^<br>对逻辑卷进行文件系统选择和挂在目录<br>         ^<br>创建lvm逻辑卷                          lv<br>         ^<br>创建lvm卷组                             vg<br>         ^<br>对RAID进行创建LVM物理卷     pv<br>         ^<br>根据分区数，创建RAID           md<br>         ^<br>N个硬盘,各自分区                    sd<br>-———————————————————–  </p>
<p>硬盘容量不够的话，先硬盘分区，建raid，建lvm物理卷，扩lvm卷组，扩某个lvm逻辑卷，扩容xfs分区<br>linux系统下操作：     cfdisk          mdadm   pvcreate        vgextend     lvextend                xfs_growfs</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>硬盘坏道处理</title>
    <url>/posts/963519034/</url>
    <content><![CDATA[<p>难得碰到硬盘坏道，记录一下处理过程</p>
<p><img src="http://img1.ph.126.net/lQtD_Cxf5B4n4wBrkMni_Q==/4842776974407989344.jpg" alt="硬盘坏道处理 - leaf - ------勤解万难------" title="硬盘坏道处理 - leaf - ------勤解万难------"></p>
<p>检测到有2个坏道，</p>
<p>位置：172272435x512B/1024/1024/1024=82GB </p>
<p>然后我们把该位置和两边空出来不用即可。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>移动GPU 浮点运算比较</title>
    <url>/posts/4111776144/</url>
    <content><![CDATA[<p>默认300MH下  </p>
<p>ipad2/iphone4S     PowerVR SGX543MP2           19.2GFLOPS<br>RK3288                  Mali-T760（4 ShaderCore）   21.6GFLOPS<br>iphone5                  PowerVR SGX543MP3            28.8GFLOPS<br>ipad3                       PowerVR SGX543MP4            38.4GFLOPS<br>全志A80T               PowerVR G6230                        38.4GFLOPS<br>骁龙600                  Adreno 320                                  38.4GFLOPS<br>骁龙800／801       Adreno 330                                  76.8GFLOPS<br>ipad4                       PowerVR SGX554MP4             76.8GFLOPS<br>iphone5s（A7）   PowerVR G6430                         76.8GFLOPS<br>Iphone6？？          PowerVR GX6650                    115.2GFLOPS<br>小米平板                 NVIDIA K1                                 115.2GFLOPS<br> 骁龙805                 Adreno 420                                115.2GFLOPS  </p>
<p><a href="http://bbs.imp3.net/thread-11142812-1-1.html">http://bbs.imp3.net/thread-11142812-1-1.html</a><br><a href="http://www.leiphone.com/5s-g6430.html">http://www.leiphone.com/5s-g6430.html</a><br><a href="http://news.mydrivers.com/1/293/293965.htm">http://news.mydrivers.com/1/293/293965.htm</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计准则</title>
    <url>/posts/62874872/</url>
    <content><![CDATA[<p>转自：linux/unix设计思想  </p>
<p>1、小即是美                   #做的简洁，模块化，小型化</p>
<p>2、做好一件事               #每个程序注重一件事，做到专一。</p>
<p>3、尽早建立原型           #设定要实现的最重要的唯一功能</p>
<p>4、注重移植，其次才是效率           #高移植可以免去重新编写的麻烦，提高程序员的效率。软件的效率可以由硬件弥补</p>
<p>5、采用纯文本存数据                     #</p>
<p>6、软件的杠杆效应                        #充分利用已有的代码。(拿来主义)</p>
<p>7、学习shell脚本来提高杠杆效应   #shell脚本来自动化管理</p>
<p>8、避免强制性用户界面                 #</p>
<p>9、每个程序都是过滤器                 #所有程序都只是处理数据，不能创造数据。</p>
<p>编程原则：</p>
<p>1、首先建立原型，制定目标</p>
<p>2、程序做的小、精、可移植、功能专一、模块化</p>
<p>3、善于利用别人的代码</p>
<p>4、充分考虑可移植，包括程序和数据</p>
<p>5、善于利用shell脚本提高效率</p>
<p>6、只考虑程序要实现的功能，不考虑用户拿去做什么</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>第五章实验：cisco路由器存取配置，ios等</title>
    <url>/posts/3407126661/</url>
    <content><![CDATA[<p>环境：  </p>
<blockquote>
<p>gns3，vmware做tftp服务器<br>R0 F0/0 ：172.16.43.150<br>vmware：172.16.43.141  </p>
<p><img src="http://img4.ph.126.net/PZ83qiwlo5aNsQA26bgQFA==/1552897446530188234.jpg" alt="第五章实验：cisco路由器存取配置，ios等 - leaf - ------坚持雅操------" title="第五章实验：cisco路由器存取配置，ios等 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> <br>1、组建tftp服务器：  </p>
<blockquote>
<p>cisco-tftp-server 下载：<a href="http://www.onlinedown.net/soft/33433.htm">http://www.onlinedown.net/soft/33433.htm</a>  </p>
</blockquote>
<blockquote>
<p>开启后测试一下：tftp -i 172.16.43.141 get 1.txt  </p>
</blockquote>
<blockquote>
<p>tftp内存放有 c3660-i-mz.122-40a.bin  </p>
</blockquote>
<p>2、gns3设置  </p>
<blockquote>
<p>云设置在上一篇已经介绍过了<br>对R0的设置：  </p>
<blockquote>
<p>en<br>configure terminal<br>interface f0/0<br>no shutdown<br>ip address 172.16.43.150 255.255.255.0<br>end<br>copy running-config startup-config<br>erase flash:  </p>
<p><img src="http://img3.ph.126.net/AG9aehE4lTwLKiu2mF9TGQ==/617274623943966983.jpg" alt="第五章实验：cisco路由器存取配置，ios等 - leaf - ------坚持雅操------" title="第五章实验：cisco路由器存取配置，ios等 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
</blockquote>
<p>3、验证是否连通  </p>
<p>4、开始存取命令  </p>
<blockquote>
<p>copy tftp flash：  </p>
<p><img src="http://img7.ph.126.net/jKEJfSX8GpJcMOTLa9zGsA==/3099883918531950267.jpg" alt="第五章实验：cisco路由器存取配置，ios等 - leaf - ------坚持雅操------" title="第五章实验：cisco路由器存取配置，ios等 - leaf - ------坚持雅操------"></p>
<p> <br>copy startup-config tftp  </p>
<p><img src="http://img5.ph.126.net/wy-hxzpcuSbh_6Gnv_KSZQ==/2568177687525529385.jpg" alt="第五章实验：cisco路由器存取配置，ios等 - leaf - ------坚持雅操------" title="第五章实验：cisco路由器存取配置，ios等 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>第五章实验：恢复口令</title>
    <url>/posts/4095644910/</url>
    <content><![CDATA[<p>主要是配置寄存器的用途和使用方法<br>使用packettracer 5.0 进行的实验  </p>
<p><img src="http://img4.ph.126.net/KXTO1yEhsmxmbObjyC4ecg==/3083839844859442734.jpg" alt="第五章实验：恢复口令 - leaf - ------坚持雅操------" title="第五章实验：恢复口令 - leaf - ------坚持雅操------"></p>
<p> 0、设置密码，以便清除  </p>
<blockquote>
<p>enable<br>configure terminal<br>enable password weo234f<br>end<br>copy running-config startup-config<br>show running-config  </p>
<blockquote>
<p><img src="http://img7.ph.126.net/skyICMDH7xSGX_WDSU6N-A==/2496683043441012237.jpg" alt="第五章实验：恢复口令 - leaf - ------坚持雅操------" title="第五章实验：恢复口令 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> show version  </p>
<blockquote>
<p><img src="http://img7.ph.126.net/ypC6remz-qW7roRM0MXpMw==/2585629136081583707.jpg" alt="第五章实验：恢复口令 - leaf - ------坚持雅操------" title="第五章实验：恢复口令 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> reload  </p>
</blockquote>
<p>1、进ROM监控模式，并进行设置  </p>
<blockquote>
<p>reload进行时 按 CTRL+break 进入   break键为F12右边的右边的右边的键  </p>
<blockquote>
<p><img src="http://img4.ph.126.net/sSkAD9_p1bFF7zfBKWhGvg==/41939771547202184.jpg" alt="第五章实验：恢复口令 - leaf - ------坚持雅操------" title="第五章实验：恢复口令 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>confreg 0x2142  </p>
<p> reset  </p>
<blockquote>
<p><img src="http://img8.ph.126.net/ndqrl2tPfw6HeAibvnTlGg==/1010776641385459288.jpg" alt="第五章实验：恢复口令 - leaf - ------坚持雅操------" title="第五章实验：恢复口令 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> 系统自动重启，进系统后可看到 寄存器值为0X2142<br>en<br>show version  </p>
<blockquote>
<p><img src="http://img2.ph.126.net/EoI_PyKbdhJHOIlJ8nq64w==/2563674087898152402.jpg" alt="第五章实验：恢复口令 - leaf - ------坚持雅操------" title="第五章实验：恢复口令 - leaf - ------坚持雅操------"></p>
</blockquote>
</blockquote>
<p> <br>2、进行清除密码，重设寄存器值等操作  </p>
<blockquote>
<p>copy startup-config running-config<br>configure terminal<br>enable password 123456<br>config-register 0x2102<br>end<br>copy running-config startup-config<br>sh version  </p>
<p><img src="http://img3.ph.126.net/zI01jVwZroEYVcuKx1JD5Q==/1005147141851248773.jpg" alt="第五章实验：恢复口令 - leaf - ------坚持雅操------" title="第五章实验：恢复口令 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<blockquote>
<p>reload  </p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>第四章实验4.6：安装sdm和sdm demo</title>
    <url>/posts/443250720/</url>
    <content><![CDATA[<p>下载：<br>1、sdm  (查SDM-V25.zip)<br>2、sdm demo tool<br>3、下载 <a href="http://www.analogx.com/contents/download/network/sswww.htm">analogx</a>    或者安装IIS也可以<br>4、下载JAVA SE  </p>
<p>安装<br>1、安装sdm-v2.5，java<br>2、解压 sdm demo tool  将datafile 放到C盘下(只能放在C盘根目录下)<br>3、安装analogx，并指定datafile位置，开启服务<br>4、开启cisco sdm ，输入127.0.0.1 (输入本机IP地址会提示输入用户名和密码，默认为cisco) 登录  </p>
<p>登录界面如下：  </p>
<p><img src="http://img5.ph.126.net/V_Ssb2yIram4O7jCNiE0VA==/1172624752993865225.jpg" alt="第四章实验4.6：安装sdm和sdm demo - leaf - ------坚持雅操------" title="第四章实验4.6：安装sdm和sdm demo - leaf - ------坚持雅操------"></p>
<p> <br><a href="http://www.analogx.com/contents/download/network/sswww.htm"></a><br>参考：<br>1、CCNA书<br>2、<a href="http://parkour.blog.51cto.com/340351/347418">http://parkour.blog.51cto.com/340351/347418</a>  </p>
<p>后记：新浪下载下来的demo-tool 我按书上的操作不能用，比如配置接口，点了没反应</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>第四章实验：SSH登录到cisco路由器</title>
    <url>/posts/1917468419/</url>
    <content><![CDATA[<p>R0开通SSH服务，R1进行连接</p>
<p><img src="http://img8.ph.126.net/Gp63yqNwYLeIJUti6lcHGQ==/2588162410871966418.jpg" alt="第四章实验：SSH登录到cisco路由器 - leaf - ------坚持雅操------" title="第四章实验：SSH登录到cisco路由器 - leaf - ------坚持雅操------"></p>
<p>1、设置R0 IP，开启F1/0  </p>
<blockquote>
<p>enable  </p>
</blockquote>
<blockquote>
<p>configure terminal<br>interface fastethernet 1/0<br>no shutdown<br>ip address 19.168.1.1 255.255.255.0<br>exit  </p>
</blockquote>
<p>2、设置进特权密码  </p>
<blockquote>
<p>enable secret 123456  </p>
</blockquote>
<p>3、设置ssh  </p>
<blockquote>
<p>hostname a123  </p>
<blockquote>
<p>#没设置hostname会出现  </p>
</blockquote>
<blockquote>
<p><img src="http://img2.ph.126.net/IWNmX8UoKl9HZAuRqK4t6A==/1005428616827936602.jpg" alt="第四章实验：SSH登录到cisco路由器 - leaf - ------坚持雅操------" title="第四章实验：SSH登录到cisco路由器 - leaf - ------坚持雅操------"></p>
</blockquote>
</blockquote>
<blockquote>
<p>ip domain-name a.com<br>crypto key generate rsa general-keys modulus 1024<br>ip ssh time-out 60                      #会话空闲60秒<br>ip ssh authentication-retries 3   #错误尝试3次<br>line vty 0 4<br>transport input ssh<br>login  </p>
<blockquote>
<p>#出现提示  </p>
</blockquote>
<blockquote>
<p><img src="http://img8.ph.126.net/TCkphAtS62gI7HpEok2OWg==/3083276894906012538.jpg" alt="第四章实验：SSH登录到cisco路由器 - leaf - ------坚持雅操------" title="第四章实验：SSH登录到cisco路由器 - leaf - ------坚持雅操------"></p>
</blockquote>
</blockquote>
<p> 4、设置vty登录账户及密码  </p>
<blockquote>
<p>exit<br>aaa new-model<br>aaa authentication login default local  </p>
</blockquote>
<blockquote>
<p>username test password test  </p>
</blockquote>
<p>5、设置进特权密码  </p>
<blockquote>
<p>enable secret 123456<br>end<br>copy running-config startup-config  </p>
</blockquote>
<p>-——————————————————————————————-  </p>
<p>1、设置R1 IP，开启端口  </p>
<blockquote>
<p>enable  </p>
</blockquote>
<blockquote>
<p>configure terminal<br>interface fastethernet 1/0<br>no shutdown<br>ip address 19.168.1.2 255.255.255.0<br>end  </p>
</blockquote>
<p>2、SSH到R0  </p>
<blockquote>
<p>ssh -l test 192.168.1.1<br>然后输入密码test<br>enable<br>然后输入密码 123456  </p>
</blockquote>
<p>-——————————————————————————————–  </p>
<p>1、取消ssh服务  </p>
<blockquote>
<p>crypto key zeroize rsa  </p>
<p><img src="http://img9.ph.126.net/R1Wzt_IJThR0vOpbwoFozw==/2616591383519726509.jpg" alt="第四章实验：SSH登录到cisco路由器 - leaf - ------坚持雅操------" title="第四章实验：SSH登录到cisco路由器 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>   </p>
</blockquote>
<p>参考文章：<a href="http://wenku.baidu.com/view/2e81590bf78a6529647d537f.html">http://wenku.baidu.com/view/2e81590bf78a6529647d537f.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>系统备份工具---ucloner</title>
    <url>/posts/723620388/</url>
    <content><![CDATA[<p>ucloner适用于ubuntu12.04，<a href="http://forum.ubuntu.org.cn/viewtopic.php?t=372432">http://forum.ubuntu.org.cn/viewtopic.php?t=372432</a><br>软件下载地址：<a href="http://code.google.com/p/ucloner/">http://code.google.com/p/ucloner/</a>  </p>
<p>用软件之前先安装如下软件：  </p>
<blockquote>
<p>sudo apt-get install squashfs-tools<br>sudo apt-get install python-gtk2 zenity python-vte  </p>
</blockquote>
<p>备份：  </p>
<blockquote>
<p>打开./ucloner_gui.py  </p>
</blockquote>
<blockquote>
<p>设置保存目录，设置要排除的目录即可。生成squashfs文件  </p>
</blockquote>
<p>还原  </p>
<blockquote>
<p>将squashfs文件和Ucloner复制到U盘  </p>
</blockquote>
<blockquote>
<p>用同版本的光盘或U盘启动，ubuntu10.04-x86的系统用ubuntu10.04-x86的盘<br>设置存放目录，设置分区和grub等即可还原。<br>#目标系统可以不格式化，选current<br>#不格式化可以保护原先在盘里面的资料  </p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>还原的时候如果原先分区有多个盘，可以用命令行来设置还原<br>如分区如下<br>/                /dev/sda1<br>/home       /dev/sda5<br>/usr          /dev/sda6<br>/var          /dev/sda7<br>swap        /dev/sda8  </p>
<p>则还原命令如下  </p>
</blockquote>
<blockquote>
<p>sudo  ./ucloner_cmd.py  mode=restore  lang=cn   restore_from=/media/disk-1/ubuntu-10.04.squashfs   /=/dev/sda1  /_fs=ext4   /home=/dev/sda5  /home_fs=current    /usr=/dev/sda6  /usrl_fs=ext4   /var=/dev/sda7  /var_fs=ext4   grubdev=/dev/sda   swap=/dev/sda8  </p>
</blockquote>
<p> <br>克隆  </p>
<blockquote>
<p>主要用于在多台配置相同的电脑中快速安装系统。<br>接上其他电脑的硬盘，然后分好区， 然后就可以克隆了。<br>克隆好后把硬盘接回其他电脑上就可以用了。  </p>
</blockquote>
<p>制作lived系统  </p>
<blockquote>
<p>不会  </p>
</blockquote>
<p>Ucloner和ghost的区别是：硬盘间操作，ucloner要先分区再还原。<br>分区最好用Gparted</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>结婚登记</title>
    <url>/posts/3737514855/</url>
    <content><![CDATA[<p>2011.11.21办理了结婚证  </p>
<p>1、集体户口：先去办证大厅办理户口证明<br>2、去民政局登记：带上户口本、身份证、(照片、资料复印那边多有)<br>      1、免费验血，然后进房间查身体，给了2张单子：免费胸透、免费B超，免费给叶酸片3瓶<br>      2、证件复印、拍照(4张照片)：付款23元<br>      3、提供证件资料、填资料、交9元钱，拿结婚证</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>网站备案信息被注销</title>
    <url>/posts/1047953347/</url>
    <content><![CDATA[<p>原因：网站存放地点和公司地点不一致，不在同一个区域内  </p>
<p>步骤：<br>1、 &lt; – page margin cm pre font-family p margin-bottom cm –&gt;–&lt;登录 <a href="http://118.85.193.10/">http://118.85.193.10</a>  </p>
<blockquote>
<p>填写：单位名称、营业执照号码、企业法人身份证、域名、联系人等  </p>
</blockquote>
<p>2、网上审核通过后去备案中心提交资料。  </p>
<blockquote>
<p>提交真实性核验单(一式三份)、营业执照复印件、企业法人身份证复印件、经办人身份证复印件</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>网络互连-1IP协议基础</title>
    <url>/posts/3239604257/</url>
    <content><![CDATA[<p>关于互联网和因特网  </p>
<blockquote>
<p>互联网：多个网络相连而成的网络。<br>因特网：使用TCP/IP协议，将多个网络相连而成的网络  </p>
</blockquote>
<p>网络层的协议有：IP、ARP、RARP、ICMP、IGMP等  </p>
<p>IP数据报报头格式：  </p>
<blockquote>
<p>版本<br>头部长度：4bit。每个单位代表4B，所以头部长度最长：15*4=60B<br>服务类型：8bit。  </p>
<blockquote>
<p>优先级：3bit，<br>D        ：要求更低的时延<br>T        ：要求更高的吞吐量<br>R        ：要求更高的可靠性<br>C        ：要求更小的路由代价<br>未用  </p>
</blockquote>
<p>总长度：16bit。表示一个IP数据包最大是64KB  </p>
<blockquote>
<blockquote>
<p>由于数据链路层的MTU有限制，所以就有了分片的概念。  </p>
</blockquote>
</blockquote>
<p>标识：发数据包时计数器的当前值。  </p>
<blockquote>
<p> 同个数据包分片后其标识是一样的。这样就知道他们是同个包分出来的。  </p>
</blockquote>
<p>标志：分2种，MF=1后面还有分片；MF=0后面没有分片。<br>片偏移：分片后，每个分片的起始字节/8。  </p>
<blockquote>
<p> 如第二个分片从1400字节开始，则片偏移=1400/8=175  </p>
</blockquote>
<p>生存时间<br>协议：8bit。数据提交给哪个上层协议。<br>首部检验和<br>源地址<br>目标地址<br>可选<br>数据  </p>
</blockquote>
<blockquote>
<p>CIDR：网络部分不分类，直接划分掩码。  </p>
</blockquote>
<p>ARP：  </p>
<blockquote>
<p>将IP传为MAC地址。  </p>
</blockquote>
<p>RARP：  </p>
<blockquote>
<p>无盘工作站：运行ROM里面有RARP程序—&gt;获取IP地址—&gt;下载所需的操作系统和TCP/IP软件等  </p>
</blockquote>
<p>ICMP报文格式：  </p>
<blockquote>
<p>IP报头|ICMP报文  </p>
<blockquote>
<blockquote>
<p>|  </p>
</blockquote>
</blockquote>
<p>类型–代码–检验和–相关类型的具体报文内容  </p>
</blockquote>
<blockquote>
<p>类型：2种。差错报文和询问报文<br>代码：类型的值。  </p>
<blockquote>
<p>差错报文有5种<br>询问报文有4种  </p>
</blockquote>
<p>检验和：对整个ICMP报文进行检验<br>数据：根据不同类型不同的值写入不同的内容。  </p>
</blockquote>
<p>IGMP报文格式：  </p>
<blockquote>
<p>IGMP就是组播协议，用于视频会议等。  </p>
</blockquote>
<blockquote>
<p>IP报头|IGMP报文  </p>
<blockquote>
<blockquote>
<p>|  </p>
</blockquote>
</blockquote>
<p>类型–响应时间–检验和–组地址  </p>
</blockquote>
<blockquote>
<p>IP报头：里面使用的是D类地址。<br>类型：3种</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>网络互连-2路由协议</title>
    <url>/posts/2491068344/</url>
    <content><![CDATA[<p>路由器  </p>
<blockquote>
<p>构成：控制部分+交换结构  </p>
</blockquote>
<blockquote>
<p>功能：路由选择+数据交换  </p>
</blockquote>
<p>RIP：  </p>
<blockquote>
<p>RIP协议是应用层协议。最大长度：504B<br>使用UDP协议传送，端口号：520。再封装到IP数据报中传输  </p>
</blockquote>
<blockquote>
<p>RIP格式：<br>IP报头|UDP报头|RIP报文  </p>
<blockquote>
<blockquote>
<blockquote>
<p>     |  </p>
</blockquote>
</blockquote>
<p>RIP首部：4B  </p>
<blockquote>
<p>命令：1：请求路由信息；2：对请求的响应和路由更新报文。<br>版本<br>必为0：填充到4B。  </p>
</blockquote>
<p>路由部分：每个路由信息20B，每个RIP最多25个信息。所以RIP报文最大504B  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>地址族标识符：标记用哪个地址协议。如IP协议就标记为2<br>路由标记：自治系统的号码<br>网络地址<br>子网掩码<br>下一条路由器地址<br>距离  </p>
</blockquote>
</blockquote>
</blockquote>
<p>OSPF：  </p>
<blockquote>
<p>OSPF是网络层协议。  </p>
</blockquote>
<blockquote>
<p>OSPF格式：<br>IP报头|OSPF报文  </p>
<blockquote>
<blockquote>
<p>|  </p>
</blockquote>
</blockquote>
<blockquote>
<p>OSPF首部：24B  </p>
<blockquote>
<p>版本<br>类型：5种类型  </p>
<blockquote>
<p>hello分组：发现和保活邻站，10s发送一次。<br>-—————–以下为路由更新用<br>数据库描述：发送摘要信息<br>链路状态请求：请求详细路由信息<br>链路状态更新：发送详细路由信息<br>链路状态确认：确认收到详细路由信息  </p>
</blockquote>
<p>分组长度：整个OSPF报文长度<br>路由器标识符：发送该分组的IP地址<br>区域标识符<br>检验和<br>鉴别类型：不用口令或者用口令<br>鉴别：0或者8个字符的口令  </p>
</blockquote>
<p>OSPF数据：分组类型的具体内容  </p>
</blockquote>
</blockquote>
<p>BGP：  </p>
<blockquote>
<p>BGP式应用层协议。<br>使用TCP传送，端口号：179<br>采用路径向量路由选择协议，构造出的式树形结构。  </p>
<p>BGP格式：<br>IP报头|TCP报头|BGP报文  </p>
<blockquote>
<blockquote>
<blockquote>
<p>     |  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>BGP首部：  </p>
</blockquote>
<blockquote>
<blockquote>
<p>标记：16B<br>长度：整个BGP报文长度：19B-4096B<br>类型：4种类型  </p>
<blockquote>
<p>打开报文<br>更新报文<br>保活报文<br>通知报文  </p>
</blockquote>
</blockquote>
<p>BGP数据：各种类型的具体报文</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>网络互连-3IPv6</title>
    <url>/posts/1476358204/</url>
    <content><![CDATA[<p>IPv6格式  </p>
<blockquote>
<p>基本首部|数据部分(数据部分包括：扩展首部和数据)  </p>
<blockquote>
<p>|  </p>
</blockquote>
<p>基本首部：40B  </p>
<blockquote>
<p>版本<br>通信量类：类别和优先级<br>流标号<br>有效载荷长度：2B，标记除基本首部外的长度。最大为64KB。所以IPv6最大65575B<br>下一个首部：标记协议或者第一个扩展首部的类型。<br>条数限制<br>源地址<br>目的地址  </p>
</blockquote>
<p>扩展首部：  </p>
<blockquote>
<p>分为6种  </p>
</blockquote>
<p>     放前面  ^ 逐跳选项  </p>
<blockquote>
<blockquote>
<p>|  路由选择<br>|  分片<br>|  鉴别<br>|  封装安全有效载荷  </p>
</blockquote>
</blockquote>
<p>     放后面  |  目的站选项<br>具体数据：  </p>
</blockquote>
<p>IPv6的分片是由源站完成的。<br>IPv6使用地址“：：IPv4地址”来兼容IPv4地址<br>IPv6足够长，所以可以直接对MAC地址进行编码，所以就不使用ARP技术  </p>
<p>IPv4向IPv6过渡的方法：  </p>
<blockquote>
<p>双协议栈技术  </p>
<blockquote>
<p>通过DNS系统来判断是IPv4还是IPv6地址<br>IPv4和IPv6的报头进行转换。<br>缺点：首部转换导致某些信息的丢失  </p>
</blockquote>
<p>隧道技术  </p>
<blockquote>
<p>将IPv6封装到IPv4来进行数据传输。<br>IPv4的协议字段标记为41</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>网络安全</title>
    <url>/posts/672317736/</url>
    <content><![CDATA[<p>网络攻击方法：  </p>
<blockquote>
<p>被动：截获<br>主动：中断、篡改、伪造。  </p>
<blockquote>
<p>重放攻击(篡改)：将稍早前的数据插入到当前的数据中  </p>
</blockquote>
</blockquote>
<p>防范攻击的方法：  </p>
<blockquote>
<p>被动：加密数据<br>主动：报文鉴别  </p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
<p>密码体制  </p>
<blockquote>
<p>常规密钥：加密解密使用相同的密码体制(算法)，如DES<br>公开密钥：加密解密使用不同的密码体制。如RSA  </p>
</blockquote>
<p>各种加密应用  </p>
<blockquote>
<p>电子邮件加密：PGP、PEM<br>传输加密：  </p>
<blockquote>
<p>链路加密：对通信线路加密。由通信子网提供。缺点：中间结点由于没有加密暴露信息内容<br>端到端加密：再发送端和接收端直接对数据加解密  </p>
</blockquote>
<p>商务加密：SSL、SET  </p>
<blockquote>
<p>SSL：提供服务器鉴别(验证服务器身份)、客户鉴别(验证客户身份)、会话加密  </p>
<blockquote>
<p>SSL处在应用层和传输层之间。  </p>
</blockquote>
</blockquote>
<p>IPsec：在IP数据报中插入加密代码  </p>
<blockquote>
<p>IP首部—-AH首部—–数据<br>IP首部—-ESP首部—数据—-ESP尾部—-ESP鉴别数据  </p>
</blockquote>
<p>防火墙  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>网络连接松下复印机</title>
    <url>/posts/1208018418/</url>
    <content><![CDATA[<p>DP-2330 采用raw<br>DP-8016 采用lpr<br>端口都是9100</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>考虑不周</title>
    <url>/posts/439235368/</url>
    <content><![CDATA[<p>只考虑到做长途的不便和做动车的舒适，却没考虑到换车、买票、等车的时间差，造成最终到达目的地时差了4个小时之多！<br>而且更累，费用更高！</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>虽然在工作</title>
    <url>/posts/599691587/</url>
    <content><![CDATA[<p>虽然在工作，可时间还是自己的时间，要好好利用</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>要做的就是选最有升值潜力的股</title>
    <url>/posts/4226882013/</url>
    <content><![CDATA[<p>不是哪只股会涨就好，要把资金充分利用起来<br>选就选唯一的那只最有潜力的股</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>让部分网段走移动网络</title>
    <url>/posts/3461743172/</url>
    <content><![CDATA[<p>策略路由重定向数据流</p>
<p>acl name acl-tocmcc 3600  </p>
<p> rule 5 permit ip source 10.1.22.0 0.0.0.255 </p>
<p> rule 10 permit ip source 10.1.31.0 0.0.0.15 </p>
<p> rule 15 permit ip source 10.1.32.0 0.0.0.15 </p>
<p>traffic classifier 1 operator or</p>
<p> if-match acl acl-tocmcc</p>
<p>#</p>
<p>traffic behavior 1</p>
<p> redirect ip-nexthop ***.***.***.***</p>
<p>#</p>
<p>traffic policy 1</p>
<p> classifier 1 behavior 1</p>
<p>interface ETH-trunk 1</p>
<p> traffic-policy 1 inbound</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>设置WDS</title>
    <url>/posts/3914124749/</url>
    <content><![CDATA[<p>0、同一品牌的无线路由器<br>1、一定要是“局域网端口”下的MAC地址，在设备背面查看条形码<br>2、设置无线频道为固定的数值，推荐使用1、6或11<br>3、进行中继的两个路由器，SSID可以相同，也可以不同。<br>     如果希望无线客户端在两个无线路由器的范围内实现漫游，请将SSID设为相同<br>4、设置A：不启动wds<br>5、设置B：启动wds、填写A的MAC地址，局域网IP设置为同网段  </p>
<p>转载自：<a href="http://net.zol.com.cn/251/2514602_all.html#p2515756">http://net.zol.com.cn/251/2514602_all.html#p2515756</a><br>              <a href="http://net.zol.com.cn/topic/2555231.html">http://net.zol.com.cn/topic/2555231.html</a>  </p>
<p>注意点！</p>
<p>主路由一定不要启动wds，从路由器要启动wds并进行设置！</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>读时寒冰：欧债真相</title>
    <url>/posts/3847521060/</url>
    <content><![CDATA[<p>本书从写作到成书可能只用了一个月不到的时间(参考资料的最新时间为2012.07.17)，虽然里面的观点很早以前就有说过。  </p>
<blockquote>
<p>说欧洲其实更多的是为了以欧洲为参考来看中国  </p>
</blockquote>
<p>由于美元是美国的核心（如果美元不能成为世界货币，哪怕是世界货币之一，美国可能马上就会破产。什么超强军事，超强科技，马上因为货币滥发、负债超高而立马倒地)，所以谁要是有成为世界货币的打算，哪怕是想法，哪怕还在娘胎里，美国就开始策划并开始实施一整套的计划了。看看中国，早就被钉上了，70年代就开始了。  </p>
<p>欧元的整个形成过程中，美国的身影如影随行：  </p>
<blockquote>
<p>1、欧元还在酝酿时，就开始狙击英镑，分而击之。<br>2、欧元刚发行，欧元区周边就战争不断，创造不稳定的环境<br>3、欧元刚开始好起来又把希腊作为木马植入，并在时机成熟后引爆(这个就像杀毒一样，如果你杀毒软件足够好，那木马是可以被清除掉的，但是欧洲区不是个好的杀毒软件，甚至连系统修复功能多没有，所以引爆是个时间问题)<br>4、美国为了拖垮欧元不惜使自己自爆(次贷)而冲击欧元，当然这样做更是为了利用危机直接去占领欧元区的领地<br>5、欧元区出问题后更是落井下石，置之死地而后快(对欧洲国家多如此，中国更该小心了)  </p>
</blockquote>
<p>既然有心做欧元就该时刻防范美国，可欧元区至今多没形成合力，自己多问题不断，更别说防范美国了。<br>欧洲自身的问题  </p>
<blockquote>
<p>1、建立的动机不一样，不可调和。法国把自己当赶马人，把德国当马。可现在马想当主人了。其实从建立的动机就能看到结果<br>2、没有严格的制度和惩罚<br>3、南北差距大却没有统一的财政政策。当然各成员国主权意识过强也导致没法统一财政<br>就像东西德统一的时候德国向东部拨款并不会引起抱怨，但是德国向希腊拨款试试？<br>4、高福利导致低产出、低效率、等一系列问题<br>5、老龄化(我觉得老龄化是可以通过机器人等技术加以弥补的，这个主要还是科技不够发达)<br>6、最重要的是生产率低于消耗。生产率的提高主要还是靠科技的发展  </p>
</blockquote>
<p>对于中国<br>中国的话，寄希望于领导层来深化改革有很大的难度：  </p>
<blockquote>
<p>胡文这十年做了什么呢？  </p>
<blockquote>
<p>最大的作为就是积累泡沫<br>虽然认识到要改革却步履维艰。可以看出其实力不济，以致有心无力(如果真有心的话)  </p>
</blockquote>
</blockquote>
<blockquote>
<p>回头看2003年的非典行为，不过是刚上台装装样子而已<br>下一届虽然选了TZ党，但是其靠山牢不牢还很难说；从办奥运可以看出，刁也不是一个励精图治的人，花钱出手倒是挺大方的。而里看上去又有点懦弱，不见得有啥政治手腕  </p>
</blockquote>
<p>中国的问题：  </p>
<blockquote>
<p>凡是欧洲有的我们多有，甚至更甚。<br>欧洲没有的我们也有，如环境问题  </p>
</blockquote>
<p>文章最后的应对建议是老生常谈，没什么可说的。人家不做说的再多也无益  </p>
<p>最后说的股票、期货投资方面：  </p>
<blockquote>
<p>1、美元进入上涨周期，持续4-6年(我觉得应该是持续到欧元崩溃吧)<br>2、关于股票的底，所谓明确的政策至少也要等到18大开始后才会有政策呀。<br>3、股票的趋势，即使跌无可跌，也不见得就会涨<br>4、关于操作方面，主要是把握节奏和严格止损止赢<br>股市下跌因素：欧债危机、M2巨大、政策  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>读王二的经济学故事</title>
    <url>/posts/855992936/</url>
    <content><![CDATA[<p>本书讲了关于分配、税收、房地产、汇率、货币政策、经济政策、发展模式和国际责任等方面的内容  </p>
<p>第一章关于分配<br>1、火车票短缺的解决办法只能是增加运力，提高价格解决不了问题，而且会引发社会矛盾<br>2、收入分配不均是避免不了的，但是中国当前的问题主要是没有一个公平的环境，政策偏向非常明显<br>3、既然国有资产是全民所有的，就应该把利润提供给全民当福利  </p>
<p>第二章关于税收<br>1、作者认为：三险一金的实施对底层有好处。但是我感觉未必，因为不是全部公司都会施行三险一金。所以惠及不到底层<br>2、关于税负：税负本身的高低不能说明什么，主要还是要看缴税后能得到哪些保障，哪些服务。  </p>
<blockquote>
<p>像西方福利这么好，多交点税也是值得的。  </p>
</blockquote>
<p>3、双重征税全世界都这样搞的，但是税收的高低是应该改一改的  </p>
<p>第三章关于房地产<br>本章作者认为中国的房地产需求是刚性需求，<br>1、说未来还有多少多少亿农民要搬城里住，房价高很正常，因为供给不够。<br>2、限购令不能解决问题<br>3、由于金融体系不完善，导致资本只能投资房地产  </p>
<p>首先我想弄清楚：<br>中国为什么要城市化？是不是先城市化，把人都迁到城里集中管理，然后富人再搬到郊区去享受自己的一片天地的乐趣。<br>城市化不能提高资源配置。有限的资源永远集中在少数人手里。即使搬到城里也不一定能享受到好的医院好的学校什么。  </p>
<p>房价高的问题主要是金融体系不完善的问题，当投资其他收益都不如房地产的时候，唯一能做的就是投资房地产了。<br>另外房地产和建筑业是不一样的，中国的房地产都是皮包公司和关系户。这样的行业怎么能把他当作支柱产业呢。  </p>
<p>第四章关于汇率<br>中国实行浮动汇率对中国有好处，但是前期要做的事情很多。  </p>
<p>第五章关于货币政策<br>中国按货币总量来调节经济是行不通的，中国应该从调节汇率入手来调节经济。<br>应对通胀，中国应该眼光放远一点，而不要鼠目寸光。只为解决短期问题而解决问题，永远解决不了根本问题。  </p>
<p>第六章关于经济政策<br>1、加工贸易并不能说明一定就有顺差。就像一个人赚钱越多不代表他存的钱就多。他可花更多的钱来造成逆差。<br>2、政府信用。当前政府和民众的不信任感与日俱增。<br>3、人口问题：中国当前的计划生育会对未来的老龄化问题造成更加严重的问题。  </p>
<p>第七章关于发展模式<br>1、GDP至上导致结构扭曲<br>2、中国模式不是特有的，人家华盛顿共识早就有了<br>3、政府主导经济后患无穷  </p>
<p> 第八章关于中国责任<br>1、中国在承担责任的时候更应该为自己争取发言权、争取与责任想符合的利益<br>2、中国对外的宣传要经得起推敲，声音要统一<br>3、中国的发展导致全行业都和其他国家产生竞争，所以摩擦就多，如果中国能够提振内需，可以很好的缓解外部矛盾。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>读经济为什么会崩溃</title>
    <url>/posts/1382388226/</url>
    <content><![CDATA[<p>作者的核心观点是：<br>生产和商业贷款促进经济增长，消费不能促进经济增长；<br>政府主导的投资如果不能赢利也不能促进经济的增长；<br>并指出凯恩斯理论的严重错误。  </p>
<p>第一章讲的是：<br>没有储蓄，经济就不能发展；<br>通过冒险和创新，创造出资本，用资本提高生产力，继而有了储蓄，经济得到发展。  </p>
<p>资本就是工具<br>而经济的概念就是是有限的资源尽可能的满足人类的需求。  </p>
<p>第二章：<br>质疑了劳动创造价值论<br>认为富人致富是因为为他人提供了有价值的东西，使得他人收益，因而自己也收益，所以致富了。  </p>
<p>第三章：<br>储蓄用于提供商业贷款，则提高生产力，促进经济增长。<br>储蓄用于应急贷款，提高社会的抗不定因素的能力。<br>储蓄用于消费贷款，只会浪费储蓄。  </p>
<p>第四章：<br>储蓄产生分工，继而丰富生活，促成多样化的经济，并形成服务行业。<br>消费只能建立再生产上，有了生产你才有东西消费。<br>是经济增长带动消费，而非相反  </p>
<p>第五章：<br>分工和技术创新使效率提高，产量提高，价格降低，但是利润并不会降低。这在电子产品上表现尤为明显<br>劳动的价值取决于劳动者所使用的资本。如用渔网捕鱼和用手抓鱼，很显然前者价值更高。<br>另外作者指出通货紧缩是好事，使得钱更值钱，而消费者不愿意消费的原因就是价格还不够低。<br> 问：员工失业、利润下降，如何再大规模生产，如何降低成本，如何降低价格？<br>促进经济增长是生产而非消费。生产的足够多，价格足够低，人们就会消费。  </p>
<p>第六章：<br>利率是调节经济的重要手段<br>基金的目的是投资高风险而得到高回报的  </p>
<p>第七章<br>基础设施建设只有收益大于支出，才会促进经济增长，否则只是再浪费资源和阻碍经济增长<br>贸易使资源优化<br>提供就业不是经济的目的，经济的目的是提高生产力  </p>
<p>第八章<br>政府的作用是为了维护社会稳定和保护公民的权利。<br>政府的支出全部源于税收，而税收源于人民，所以纳税人才是决定税款怎么花的人，而不是政府人员。<br>主权在民，人权神圣不可侵犯！！  </p>
<p>第九章<br>选举的弊端是为了讨好选民可以夸夸其谈而不用负责<br>由于纸币是没有价值的，所以纸币的增发是导致通货膨胀的元凶。<br>本来生产力的提高可以降低价格，但是由于纸币的增发所以被抵消了。  </p>
<p>第十章<br>通货膨胀其实就是滥发货币的结果。<br>而通货膨胀会导致储蓄的减少，而储蓄的减少又会减少投资<br>另外通货膨胀导致企业成本上升而削减成本，会导致失业<br>经济不景气，由于手头的钱少了，所以希望这些钱能买更多的东西，所以通货紧缩可以缓解经济不景气的影响  </p>
<p>第十一章<br>中国的改革开放帮助了美国度过货币危机。而中国用美元购买资本也帮助了中国经济的发展<br>但是中国的出口导向使得美国的利益最大化了。<br>而中国购买美国国债又帮助没有储蓄的美国人可以提供贷款  </p>
<p>第十二章<br>中国的出口使得没有优势的美国制造业不断的外包，美国的投资重点转向了服务业<br>中国不断的存储美元，而非用来购买美国的产品，使得中国负责生产而美国负责消费  </p>
<p>第十三章<br>纸币是有史以来最大的货币实验，因为纸币本身没有价值  </p>
<p>第十四章<br>美国房价的上涨是利率低下、免税政策、以小换大的贷款等原因导致的  </p>
<p>第十五章<br>集体的抛售导致房价直线下划<br>而当前施行的经济援助政策只会导致更严重的后果  </p>
<p>第十六章<br>政府投资不断的浪费资源，阻碍经济的发展<br>美元，说到底是美国筹资金的方式而已<br>中国内需拉动后，我们的生产我们自己消费，由于我们的生产体系很健全，<br>自己就能形成体内循环，根本用不着美国的消费来拉动我们的经济  </p>
<p>第十七章<br>如果美元变成废纸，虽然对中国的影响很大，但是对美国确是致命的，所以美元只会贬值却不会变废纸。<br>第十七章说的情况是不会出现的。<br>倒是有可能美元通过狙击人民币使人民币贬值而引发中国的制造业等资产被美国收购了。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>读资中筠：感时忧世</title>
    <url>/posts/2798855943/</url>
    <content><![CDATA[<p>本书通过对时势、对当代怪现象的分析，提出很多建议。<br>作者倡导建立公平公正自由平等的社会，<br>最核心的是要求对公权力的监督和制约，<br>实现民主、民生、民权，使百姓能安居乐业、有尊严的生活、享受平等的公民权利。  </p>
<p>本书分析了以下几个方面：<br>首先是分析当前形势：<br>现代化的建设，已经走过了170多年。<br>当前虽GDP高速增长，但不可持续；<br>改革形势倒退；<br>财富和人才外流；<br>对外关系羸弱，无法守住民族利益；<br>腐败日盛，仁义充塞，社会矛盾严重尖锐化，民怨沸腾，危机四伏，立国根基不稳。  </p>
<p>对三反五反的批判：<br>新政权建立伊始，就蔑视法律，任意侵犯人权，<br>对事只问结果，不重程序，负面影响深远<br>等等<br>文章最后提出要建立有监督权力的机制，使得公权力能够受到监督。<br>对出现的问题要穷追不舍，查请问题所在  </p>
<p>对腐败：<br>提倡放开对宪法第二章第三十五条的限制，使全社会都来监督腐败。  </p>
<p>对歌功颂德：<br>提倡反颂圣，恶迎俗。<br>并要求给与大众知情权，不能内(大众)外(国际舆论)有别  </p>
<p>谈收容制度的关键：<br>说明执法问题比立法更严重。  </p>
<p>对新闻媒体:<br>放开舆论，开启民智，并使之能成为社会净化剂。  </p>
<p>对于国体：<br>关键在于立宪，而不在国体和名字，即使名字是共和的，照样专制，没有民主的话，比君主立宪还不如  </p>
<p>对于文化：<br>由于文化大革命，导致大陆的中华文化出现断裂，而今文化又受政治化之害非浅<br>教学，应该陶制情操、提高修养和底蕴，培养思想、审美、人格和情操；培养一个合格公民而不是臣民。  </p>
<p>对大学评估：<br>建议从根本上取消由政府行政部门进行的评估。以免大学成为教育部高等教育司中的一科。  </p>
<p>对学术界：<br>希望能够守住学术界这块净土。  </p>
<p>大学文科：<br>应该已培养大儒为目标，而不是培养政客。  </p>
<p>人格：<br>要提高人格觉悟，呼唤人的良知。  </p>
<p>对媒体：<br>错别字和剧目对中华文化毒害匪浅。  </p>
<p>人权高于主权是必然。<br>把主权高于人权绝对化是逆潮流而行。  </p>
<p>一个人要坚持信仰，不要做汪藻之类的小人。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>象过河错误记录</title>
    <url>/posts/2039924033/</url>
    <content><![CDATA[<p>An exception was raised on the server: Unknown method CheckAccountName for interface LoginService;</p>
<p>原因是客户端版本和服务器版本不一致导致的</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>路由器端口映射设置</title>
    <url>/posts/2127272775/</url>
    <content><![CDATA[<p>转自：<a href="http://zhenyuanxianliuhai.blog.163.com/blog/static/397900200832053821546/">http://zhenyuanxianliuhai.blog.163.com/blog/static/397900200832053821546/</a>  </p>
<h5 id="TP-LINK410路由器端口映射"><a href="#TP-LINK410路由器端口映射" class="headerlink" title="TP-LINK410路由器端口映射"></a>TP-LINK410路由器端口映射</h5><hr>
<p>**第一步：打开浏览器，输入路由器IP，默认为192.168.1.1 (此网关IP在dos命令符下键入ipconfig可得到).  </p>
<p>第二步：输入密码；默认帐号和密码：admin**</p>
<p><img src="http://img1.ph.126.net/USTVGLXCcM2QHQbTT1sKoQ==/2880896386650534901.jpg" alt="路由器端口映射设置 - leaf - ------坚持雅操------" title="路由器端口映射设置 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><strong>第三步：点击左边的转发规则，再选择虚拟服务器，打开虚拟服务器的设置画面</strong></p>
<p><img src="http://img4.ph.126.net/NpuhUjT1-QtMG4bxNaybaw==/1293377518002438074.jpg" alt="路由器端口映射设置 - leaf - ------坚持雅操------" title="路由器端口映射设置 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><img src="http://img5.ph.126.net/yqI7nBLxNRq9SiUz92_zfw==/1136877430951313375.jpg" alt="路由器端口映射设置 - leaf - ------坚持雅操------" title="路由器端口映射设置 - leaf - ------坚持雅操------"></p>
<p> </p>
<p><strong>第四步：在服务端口处填上跟我们软件相一致的上线端口号，安装时默认的端口号是2006，IP地址 处填写你的本机IP地址(此IP在dos命令符下键入ipconfig可得到)，如这里的本机IP为192.168.1.2只需要填写最后一位数；协议处 请选择TCP，启用处打钩，最后别忘了按保存！到此端口设置已完成！</strong></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>转养老保险等手续</title>
    <url>/posts/1681339852/</url>
    <content><![CDATA[<p>新公司发接收函—-&gt;去老公司所在地的社保打社保记录并转出——–&gt;交给新公司所在地的社保</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载] A卡、N卡、还是 I 卡？</title>
    <url>/posts/770010477/</url>
    <content><![CDATA[<p>　　对于 Linux 新手来说，由于对 Linux 平台上显卡驱动支持不是很了解，所以可能会在选择显卡品牌时无从下手。而 Ubuntu Gamer 上这篇文章，则用简明的语言阐述了 Nvidia ， AMD/ATI 及 Intel 这三种最普遍的品牌显卡在 Linux 平台上的驱动现状，我简单翻译了一下，希望对你有所帮助。  </p>
<p>　　<strong>－ Nvidia</strong>  </p>
<p>　　除了提供最基本的仅支持 2D 的开源驱动（用于各个发行版的内置驱动，现在已经被 Nouveau 驱动所取代）外，基本上 Nvidia 只提供闭源驱动。但闭源驱动的性能非常好，与 Windows 上的性能几乎差不多。而且 Nvidia 的驱动更新很频繁，有些会每月更新一次。而且他们还会使用 VDPAU 加速 API 来提供快速视频加速，这个加速 API 功能仅被当前最新的 Adobe Flash beta 支持。所以，如果你经常观看全屏高清视频的话，一块 Nvidia 显卡加上他们的驱动应该是最佳方案了。  </p>
<p>　　但不幸的是，闭源的 Nvidia 也存在着不好的一面，主要一点是 Nvidia 至今（已经有好几年了）还不支持 Xrandr 协议，Xrandr 协议可以允许 X 来调整显示分辨率，或者扩展/克隆到外部显示器。如果你正在使用 Nvidia 显卡的话，这就是不能用 Ubuntu 自带的屏幕分辨率工具来调整分辨率的原因了。另外，有些软件需要依赖 Xrandr 的输出信息在显示器中进行定位，所以某些出错原因也是归纠于此。另一点就是 Nivida 的闭源驱动不支持内核模式设置 （ kernel mode setting – KMS) ，因此就无法提供高清晰的 Plymouth 启动显示画面（当然这个情况应该说存在于所有的闭源驱动中）。  </p>
<p>　　在开源的 Nouveau 驱动项目方面，利用逆向工程开发出了支持 2D 和 3D 的 Nvidia 驱动，并取得了极大的进展。但与闭源的驱动相比，在性能上要相差很多，不过还是足以运行一些简单的游戏。而且还有一点有必要提醒的是，目前 Nvidia 方面也没有任何要帮助 Nouveau 项目的意图。  </p>
<p>　　<strong>－ AMD/ATI</strong>  </p>
<p>　　在 AMD 收购 ATI 之前，可以说在 Linux 上基本没有像样的 ATI 驱动。不过自从被 AMD 收购后，情况就变得大为不同。ATI 的闭源 Linux 驱动有了跨越式的发展，而且还支持 Xrandr 协议，这样你就可以完全使用 Ubuntu 内置分辨率调整工具了。而且在性能方面也非常好，也可以与 Wine 一起很好的工作。另外，AMD 也与 Canonical 共同合作，在每一个 Ubuntu 发行版中都会得到预发布的驱动。当然有一点与 Nividia 驱动相似的，那就是也不支持 KMS 。闭源的 AMD 驱动使用与 Nvidia 不同的视频 API ，而是唤作的 VA-API，不幸的是 Adobe 目前至今还没有支持它，所以基于 Flash 的高清视频受到一定的影响。另外与 Nvidia 相比欠缺的一点是，AMD 驱动需要花费更多的时间来支持新版内核及新的 X Server 版本，但对于 Ubuntu 用户来说并不是问题，因为它会默认搭载在 Ubuntu 发行版中。  </p>
<p>　　在开源方面，AMD 也表现完美，不仅会发布卡的规格详情给开源社区，同时还聘请人员全职工作于开源驱动的开发。此驱动目前正在经历过渡到新的 Gallium3D 框架，但已接近完成，从现在起我们可以看到这些驱动的性能有了极大的改善。基本上，如果你拥有一块 AMD 卡的话，在 Ubuntu 上就可以用到 3D 加速功能。虽然性能也许不如闭源驱动，但如果你想安装闭源驱动的话，那也只是点一下鼠标的事情。所以说， AMD 在 Linux 驱动方面确实贡献卓越，大赞！  </p>
<p>　　Update [2011.1.12] : 根据 Phoronix 的报道， VIA 的 KMS 支持代码已接近完成。  </p>
<p>　　**－ Intel<br>**<br>　　可以说， Intel 是开源 Linux 图形卡驱动方面的王者，他们只发布 Linux 平台上的开源驱动，这也意味着你能体验到像 KMS 及 Xrandar 支持这样的所有功能。但 Intel 也并不完美，如果你拥有一块基于 GMA500 的卡的话，它基本上无法工作于 Ubuntu 上，因为这是英特尔购买了其他公司的芯片组后并更名了它，而且他们也不能为其开发开源驱动，虽然目前英特尔还在解决此问题。  </p>
<p>　　Intel 的另外一个最大缺点是他们的硬件性能远远不如 AMD 和 Nvidia ，并且对于游戏支持也不够好。  </p>
<p>　　<strong>－总结</strong>  </p>
<p>　　如果对于你来说有开源驱动是非常重要的事，那么你可以用 Intel 或 AMD 的卡；如果你更关注性能，那么你可以用 AMD 或 Nvidia 的卡。总的来说， AMD/ATI 是更加前沿，更加值得推荐，因为他们在提供稳定开源驱动的同时，还提供了可靠快速的闭源驱动，堪称两全其美。  </p>
<p>原文出处：<a href="http://wowubuntu.com/nvidia-ati-intel.html">http://wowubuntu.com/nvidia-ati-intel.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载] lubuntu自动登录(lxde)</title>
    <url>/posts/872591790/</url>
    <content><![CDATA[<p>1. /etc/lxdm/default.conf</p>
<blockquote>
<p>sudo vi /etc/lxdm/default.conf</p>
<p>autologin=username</p>
</blockquote>
<p>2./etc/lightdm/lightdm.conf</p>
<blockquote>
<p>sudo vi /etc/lightdm/lightdm.conf </p>
<p>[SeatDefaults]</p>
<p>autologin-user=username</p>
<p>autologin-user-timeout=0</p>
<p>greeter-session=lightdm-gtk-greeter</p>
<p>user-session=Lubuntu</p>
</blockquote>
<p>转载自：<a href="http://www.cnblogs.com/xiangzi888/archive/2012/06/20/2557093.html">http://www.cnblogs.com/xiangzi888/archive/2012/06/20/2557093.html</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]dns和dc分离安装</title>
    <url>/posts/293614938/</url>
    <content><![CDATA[<p><a href="http://bbs.winos.cn/viewthread.php?tid=16557&amp;extra=&amp;page=1">http://bbs.winos.cn/viewthread.php?tid=16557&amp;extra=&amp;page=1</a>  </p>
<p>注意soa和ns的设置即可</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]linux下使用logrotate自动备份mysql数据库</title>
    <url>/posts/2889213132/</url>
    <content><![CDATA[<p>原文：<a href="http://islandlinux.org/howto/automated-mysql-backups">http://islandlinux.org/howto/automated-mysql-backups</a><br>参考：<a href="http://www.cslog.cn/Content/logrotate-mysql-automated-backu/">http://www.cslog.cn/Content/logrotate-mysql-automated-backu/</a>  </p>
<p>1、建备份账户  </p>
<blockquote>
<p>mysql -u root -p  </p>
<blockquote>
<p>GRANT SELECT, LOCK TABLES ON *.* TO backup@localhost IDENTIFIED BY ‘bkup123’;<br>FLUSH PRIVILEGES;<br>EXIT；<br>#账户名：backup   密码：bkup123  </p>
</blockquote>
</blockquote>
<p>2、建密码文件用于登录  </p>
<blockquote>
<p>touch .mysql.backup  </p>
<blockquote>
<p>[client]<br>user=”backup”<br>password=”bkup123”  </p>
</blockquote>
<p>chmod 400 .mysql.backup  </p>
</blockquote>
<p>3、建备份脚本  </p>
<blockquote>
<p>cd /usr/local/sbin  </p>
</blockquote>
<blockquote>
<p>sudo touch  backup_mysql.sh<br>sudo vi backup_mysql.sh  </p>
</blockquote>
<p>#!/bin/sh  </p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p># written by Dallas Vogels 2008-10-01  </p>
<h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><p>export PATH=/bin:/usr/bin:/sbin:/usr/sbin  </p>
<p>#将数据库备份到 /var/backups/mysql<br>OUTPUTDIR=”/var/backups/mysql”<br>OPTIONS=”–all –complete-insert –add-drop-table –extended-insert –quote-names”<br>#密码文件所在位置<br>CONFIG_FILE=”/home/solarit001/.mysql.backup”  </p>
<p># check that backup dir exists<br>if [ ! -d $OUTPUTDIR ]; then<br>        mkdir $OUTPUTDIR<br>fi  </p>
<p># get list of databases<br>DATABASES=`echo “SHOW DATABASES” | mysql –defaults-file=”$CONFIG_FILE” mysql`<br>#我这里的结果如下<br>#Database<br>#information_schema<br>#mysql<br>#wordpress  </p>
<p> for DATABASE in $DATABASES; do  </p>
<p>#备份名字为*.sql<br>  if [ “$DATABASE” != “Database” -a “$DATABASE” != “information_schema” ]; then<br>    # backup database<br>    mysqldump –defaults-file=”$CONFIG_FILE” $OPTIONS $DATABASE &gt; $OUTPUTDIR/$DATABASE.sql<br>  fi  </p>
<p>done  </p>
<p>exit 0  </p>
<blockquote>
<p>sudo chmod 500 backup_mysql.sh  </p>
</blockquote>
<p>4、创建logrotate文件  </p>
<blockquote>
<p>cd /etc/logrotate.d<br>sudo touch mysql-backups<br>sudo vi mysql-backups  </p>
</blockquote>
<p>/var/backups/mysql/*.sql {<br>  daily<br>  copy<br>  missingok<br>  rotate 30<br>  compress<br>  notifempty<br>  create 640 root adm<br>  sharedscripts<br>  prerotate<br>    /usr/local/sbin/backup_mysql.sh  #备份之前先运行backup_mysql.sh<br>  endscript<br>}</p>
<blockquote>
<p>5、测试  </p>
</blockquote>
<blockquote>
<p>sudo backup_mysql.sh<br>sudo logrotate -f /etc/logrotate.d/mysql-backups</p>
</blockquote>
<blockquote>
</blockquote>
<p>问题：<br>mysqldump: Got error: 1044: Access denied for user ‘backup’@’localhost’ to database ‘information_schema’<br>when using LOCK TABLES  </p>
<p>解决：  </p>
<blockquote>
<p>1、加参数：–skip-lock-tables<br>2、不备份被锁定的数据库：  </p>
<blockquote>
<p>if [ “$DATABASE” != “Database” -a “$DATABASE” != “information_schema” ]; then  </p>
</blockquote>
<p>3、用root账户备份  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]linux系统挂载光盘镜像ISO的方法</title>
    <url>/posts/3868300778/</url>
    <content><![CDATA[<p><a href="http://www.jb51.net/os/RedHat/1050.html">http://www.jb51.net/os/RedHat/1050.html</a>  </p>
<p>ISO：<br>iso 格式的光盘镜像可以说是最普遍和通用的了，处理起来非常方便，挂载命令：<br>( 假设镜像文件名为 download，挂载点为 /mount-point ，下同)<br>mount -t iso9660 -o loop,user download.iso  /mount-point  </p>
<p>MDF：<br>mdf 是 Win 下的虚拟光驱软件 Alcohol 120% 的专有格式，你可以用 mdf2iso 把 mdf  文件转换成 iso 格式再挂载，或者尝试用下面的命令挂载：<br>mount download.mdf /mount-point -o loop=/dev/loop0<br>不过遗憾的是，有些分轨的 mdf 文件，这样还是无能为力。  </p>
<p>BIN (or  BIN + CUE )：<br>可以用 cdemu 挂载，也可以用 bin2iso 转换成 iso 再挂载，也可以 bchunk 转换 bin+cue 到 iso 。  </p>
<p>NRG：<br>nrg 格式的镜像文件是 Nero 的专有格式，你可以用 nrg2iso 转换成 iso 再挂载，或者尝试下面的命令：<br>mount -o loop,offset=307200 download.nrg /mount-point  </p>
<p>CCD：<br>ccd 是 CloneCD 的专有格式，你可以用 ccd2iso 转换成 iso 再挂载。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]Mac OS X 系统启动过程</title>
    <url>/posts/4063874116/</url>
    <content><![CDATA[<p>转自：<a href="http://nbbbs.zol.com.cn/24/544_237379.html">http://nbbbs.zol.com.cn/24/544_237379.html</a><br>文章是07年的，有点旧  </p>
<p>启动过程：<br>1、 电源开启。<br>2、 执行固件中的代码。<br>3、 收集硬件信息并初始硬件。<br>4、 选择启动项（通常是选择 OS ，但有时会选择硬件测试等类似情况。）。用户可能会被提示进行启动选择。<br>5、 控制权交给 /System/Library/CoreServices/BootX （启动引导器）。 BootX 载入内核并描绘 OS 标识（如有）。BootX 尝试载入先前缓存的设备驱动列表（根据 /usr/sbin/kextcache 进行创建或更新）。缓存的类型为 mkext 且为多内核扩展包含了信息词典（info dictionaries）与二进制文件。注意：如果 mkext 缓存丢失或损坏，BootX 将在 /System/Library/Extensions 中搜索当前方案中所需要的扩展（由该扩展包中 Info.plist 文件的 OSBundleRequired 属性值进行决定。）<br>6、 执行内核中的 init 例程。决定要启动之系统的根设备。从此刻起，将不再使用固件中的程序。<br>7、 由内核初始各种 Mach/BSD 数据结构。<br>8、 初始 I/O （输入输出）设备。<br>9、 内核开始运行 /sbin/mach_init ，Mach 服务命名（引导程序）后台。mach_init 为服务名和要准备访问其它服务所用的 Mach 端口提供映射。<br>到这步时，启动开始转为用户等级：<br>10、 mach_init 开始 /sbin/init，传统的 BSD 初始化（init）进程。初始化将决定运行等级，并运行 /etc/rc.boot （设置让机器能够运行单用户－single user 模式）。<br>在此步中，将执行： rc.boot 与其它 rc 脚本源程序 /etc/rc.common，一个包含实用功能的 shell 脚本，如 CheckForNetwork() （检查如网络已启动）， GetPID(), purgedir() （仅删除目录内容， 而非结构），等。<br>11、 rc.boot 会显示要启动的类型（多用户，安全模式，光驱，网络等等）。网络启动的情况下（ sysctl 的变量 kern.netboot 将会为何种情况而设之为 1 ），其将用一个启动参数来运行 /etc/rc.netboot 。<br>/etc/rc.netboot 会处理网络启动的参数特征。例如:执行网络和（如有）本地挂载。其还会呼叫 /usr/bin/nbst 来关联当作根设备使用的磁盘镜像到一个影子文件（shadow file）。此方法是将那个希望处于本地存储器的文件（磁盘）重定向写入到影子文件。<br>12、 rc.boot 会在必须进行文件系统一致性检查（file system consistency check， fsck）时，显示图形。单用户模式和用光盘启动时不会运行 fsck。安全模式启动时总会运行 fsck。rc.boot 也会处理 fsck 的返回状态。<br>13、 如果 rc.boot 成功退出， /etc/rc 多用户启动脚本将会运行。如果正在从一个光驱启动，脚本将切换到 /etc/rc.cdrom （安装）。<br>14、 /etc/rc 挂载本地文件系统 (HFS+、HFS、UFS、/dev/fd、/.vol)，确保目录 /private/var/tmp 存在，然后运行 /etc/rc.installer_cleanup 如果有（重启前，会由安装器离开）。<br>15、 /etc/rc.cleanup 运行。其将“清理”一定数量的 Unix 与 Mac 特殊目录/文件。<br>16、 启动缓存 （BootCache）开始。<br>17、 各种 sysctl 变量被设置（如：vnodes 的最大值、System V IPC 等）。如果 /etc/sysctl.conf 已存在 (在 Mac OS X Server 中为 /etc/sysctl-macosxserver.conf)，它将读取和设置 sysctl 变量为已包含在其中的。<br>18、 syslogd 开始。<br>19、 创建机器检查符号文件（Mach symbol file）。<br>20、 /etc/rc 开始 kextd 后台进程，用来从内核或委托进程 （client processes）加载所需的内核扩展。<br>21、 /usr/libexec/register_mach_bootstrap_servers 将运行以加载包含在 /etc/mach_init.d 中的各种 Mach 引导程序所基于的服务。<br>22、 portmap 与 netinfo 开始。<br>23、 如 /System/Library/Extensions.mkext 旧于 /System/Library/Extensions， /etc/rc 将删除已存在的 mkext 并创建一个新的（不存在时，会创建）。<br>24、 /etc/rc 启动 /usr/sbin/update，一个后台程序，用来频繁地清空磁盘上的互联网文件系统缓存。<br>25、 /etc/rc 启动虚拟内存系统。 设置 /private/var/vm 为一个交换目录。/sbin/dynamic_pager 以适当的参数启动（交换文件名路径模板、已创建的交换文件大小、当创建额外交换文件或删除已存在文件时，指定高、低水平的警报切换开关。）<br>26、 /etc/rc 启动 /usr/libexec/fix_prebinding 以修复错误地预连编二进制文件 （prebound binaries）<br>27、 /etc/rc 执行 /etc/rc.cleanup 以清除并重置文件与设备。<br>28、 /etc/rc 最后将启动 /sbin/SystemStarter ，处理启动项从下列位置： /System/Library/StartupItems 与 /Library/StartupItems。一个启动项是一个程序、一个 shell 脚本、匹配一个文件夹名的名称。文件夹包含一个属性列表文件含有一些配对的关键值，如： Deion、Provides、Requires、 OrderPreference、启动与停止信息等等。您可以运行 SystemStarter -n -D 以作为根用户 (root) 来进行程序打印调试与从属信息（不包含现在已经在运行的任何项目）。<br>29、 CoreGraphics 启动开始 Apple 类型服务后台(ATSServer) 和 Window 服务器 (WindowServer)。<br>默认下，loginwindow 程序 (loginwindow.app 位于 /System/Library/CoreServices 目录下) 已为控制设备执行。如果您不想运行到图形登录，可以修改 /etc/ttys 中相关的行。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]ubuntu10.04 x64 安装PacketTracer5.3</title>
    <url>/posts/3345977369/</url>
    <content><![CDATA[<p>转自：<br><a href="http://kaslnetwork.com/articles/installing-cisco-packettracer-5-3-2-on-64-bit-ubuntu-or-debian/?doing%5C_wp%5C_cron=1354528617.3749530315399169921875">http://kaslnetwork.com/articles/installing-cisco-packettracer-5-3-2-on-64-bit-ubuntu-or-debian/?doing\_wp\_cron=1354528617.3749530315399169921875</a>  </p>
<p>PacketTracer5.3只有32位的，而且提供的软件是bin文件。以下提供如何在ubuntu 64位下安装<br>方法是：<br>安装的时候提取出packettracer的deb文件，然后装好32位库文件，再强制安装packettracer即可  </p>
<p>1、下载packettracer5.3  </p>
<blockquote>
<p>下载地址我忘了，有需要的可以留言。  </p>
</blockquote>
<p>2、建sh脚本：PacketTracerx64Hack.sh</p>
<p>#!/bin/bash  </p>
<p># PacketTracer Installer Hack<br># Written by K. Law @ <a href="http://kaslit.com/">http://kaslit.com</a><br># PacketTracer is a program by Cisco Systems  </p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p># The purpose of this script is to install PacketTracer on<br># the unsupported 64-bit Ubuntu or Debian Linux platforms  </p>
<p>echo “Installing Required Libraries”<br>apt-get -y install ia32-libs-gtk<br>echo “ia32-libs-gtk is the key to the installation. Without it, PacketTracer will not work.”<br>echo “.deb file exists in /tmp”<br>echo “ “<br>echo “copying installer to ./“<br>echo “ “<br>cp -v /tmp/selfextract.*/Packet* ./<br>echo “Copy Successful”<br>echo “ “<br>echo “Installing Libraries”<br>wget -c <a href="http://content.kaslit.com/downloads/getlibs-all.deb">http://content.kaslit.com/downloads/getlibs-all.deb</a><br>dpkg -i getlibs-all.deb<br>echo “ “<br>echo “Running dpkg -i –force-architecture Packet*.deb”<br>dpkg -i –force-architecture Packet*.deb<br>echo “ “<br>echo “PacketTracer is installed”<br>echo “ “<br>echo “Applying libs”<br>getlibs /usr/local/PacketTracer5/bin/PacketTracer5<br>echo “ “<br>echo “PacketTracer should now be installed - However, this script is light and does not detect errors.”<br>echo “ “<br>echo “Running PacketTracer”<br>echo “ “<br>echo “Did PacketTracer Not Install? If not, look for the ia32-libs-gtk file in the Debian/Ubuntu repositories. It is the key to the successful install.” &gt; ~/PacketTracer_README_IF_IT_FAILED.txt<br>/usr/local/PacketTracer5/packettracer</p>
<p>3、安装  </p>
<blockquote>
<p>sudo sh PacketTracer53*<br>点<enter>阅读说明，阅读到90%的时候，另开一个终端<br>sudo sh PacketTracerx64Hack.sh<br>该脚本会自动复制packettracer的deb文件，并自动安装</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]ubuntu14.04.3 X64 安装wingide破解版</title>
    <url>/posts/1723459358/</url>
    <content><![CDATA[<p>1、下载最新版windide<br>2、下载破解Python脚本，下载地址<a href="http://pan.baidu.com/s/1mgE3g60">http://pan.baidu.com/s/1mgE3g60</a>  </p>
<p>3、破解方法  </p>
<ol>
<li>安装WingIDE成功后启动，激活时输入license id CN123-12345-12345-12345  </li>
</ol>
<p><img src="http://img2.ph.126.net/dVsla7oNVwXMWbG6iJ9qqA==/6608873023981308605.png" alt="[转载]ubuntu14.04.3 X64 安装wingide破解版 - leaf - ------勤解万难------" title="[转载]ubuntu14.04.3 X64 安装wingide破解版 - leaf - ------勤解万难------"></p>
<p> <br>2) 点击Continue后弹框，拷贝框中的request code（即图中的RW518这个代码）</p>
<p><img src="http://img2.ph.126.net/AQM-VC-6MYKgdiu-Zupsug==/6631421808444523058.png" alt="[转载]ubuntu14.04.3 X64 安装wingide破解版 - leaf - ------勤解万难------" title="[转载]ubuntu14.04.3 X64 安装wingide破解版 - leaf - ------勤解万难------"></p>
<ol start="3">
<li>修改Python脚本中的Request Code为刚才得到的Request Code值，运行脚本后得到激活码，填入即可成功注册  </li>
</ol>
<p><img src="http://img0.ph.126.net/I23ttSWLJP0LcuC7DfOsnQ==/6630073807189096974.png" alt="[转载]ubuntu14.04.3 X64 安装wingide破解版 - leaf - ------勤解万难------" title="[转载]ubuntu14.04.3 X64 安装wingide破解版 - leaf - ------勤解万难------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]UBUNTU14.04 32bit 安装GNS3 1.3.3</title>
    <url>/posts/2368736414/</url>
    <content><![CDATA[<p><a href="http://www.bearmr.com/index.php/gns3-1-0-for-linux/">http://www.bearmr.com/index.php/gns3-1-0-for-linux/</a>  </p>
<p>0、安装编译环境  </p>
<blockquote>
<p>sudo apt-get install build-essential libelf-dev uuid-dev libpcap-dev python3-dev python3-pyqt4  git  cmake  </p>
</blockquote>
<p>0、下载gns3 （仅用于编译插件，可不下）  </p>
<blockquote>
<p><a href="https://github.com/GNS3/gns3-gui/releases/download/v1.3.3/GNS3-1.3.3.source.zip">https://github.com/GNS3/gns3-gui/releases/download/v1.3.3/GNS3-1.3.3.source.zip</a>  </p>
</blockquote>
<p>1、安装Dynamips (思科OS模拟器,下载的所有iou等都需要这个模拟器模拟)  </p>
<blockquote>
<p>git clone git://github.com/GNS3/dynamips.git<br>cd dynamips<br>mkdir build<br>cd build<br>cmake ..<br>make &amp;&amp; sudo make install  </p>
</blockquote>
<blockquote>
<p>测试Dynamips<br>dynamips -H 7200  </p>
</blockquote>
<p>2、安装GNS3-server (gns3后台程序)  </p>
<blockquote>
<p>wget -Oez_setup.py <a href="https://bootstrap.pypa.io/ez/_setup.py">https://bootstrap.pypa.io/ez\_setup.py</a><br>sudo python3 ez_setup.py<br>wget -O get-pip.py <a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a><br>sudo python3 get-pip.py  </p>
</blockquote>
<blockquote>
<p>用pip命令或apt-get命令安装pyzmq、 tornado 、netifaces这3个依赖的库<br>sudo pip3 install pyzmq<br>sudo pip3 install tornado<br>sudo pip3 install netifaces  </p>
</blockquote>
<blockquote>
<p>git clone git://github.com/GNS3/gns3-server.git<br>cd gns3-server/<br>sudo python3 setup.py install  </p>
</blockquote>
<blockquote>
<p>测试GNS 3-Server  </p>
</blockquote>
<blockquote>
<p>gns3server  </p>
</blockquote>
<p>3、安装gns3-gui (gns3界面)  </p>
<blockquote>
<p>git clone git://github.com/GNS3/gns3-gui.git<br>cd gns3-gui.git/<br>sudo python3 setup.py install  </p>
</blockquote>
<p>4、安装vpcs (虚拟pc机)  </p>
<blockquote>
<p>sh src/mk.sh i386 (第0步骤下载的程序目录)<br>将编译的文件拷到gns3目录  </p>
</blockquote>
<p>5、升级  </p>
<blockquote>
<p>pip3 install gns3-server==1.3.3     ==后面是版本号  </p>
</blockquote>
<p>6、运行GNS3  </p>
<blockquote>
<p>gns3  </p>
</blockquote>
<p>7、相关设置  </p>
<blockquote>
<p>下载CiscoIOUKeygen.py和编译好的iouyap  </p>
<blockquote>
<p>iouyap 是用来在 IOU 和 UDP, TAP 和Ethernet.之间做桥接的。  </p>
</blockquote>
</blockquote>
<blockquote>
<p>python3 CiscoIOUKeygen.py  </p>
</blockquote>
<blockquote>
<p>新建iourc.txt，复制license和下一行进去  </p>
</blockquote>
<blockquote>
<p>下载IOU/IOS 并安装  </p>
</blockquote>
<blockquote>
<p><img src="http://img1.ph.126.net/2r7FulZfj_7UBol-puv0OA==/643733271755249902.png" alt="[转载]UBUNTU14.04 32bit 安装GNS3 1.3.3 - leaf - ------勤解万难------" title="[转载]UBUNTU14.04 32bit 安装GNS3 1.3.3 - leaf - ------勤解万难------"></p>
<p><img src="http://img2.ph.126.net/1EAb_LGBwUUWHmZyRKadJA==/1172343278017882178.png" alt="[转载]UBUNTU14.04 32bit 安装GNS3 1.3.3 - leaf - ------勤解万难------" title="[转载]UBUNTU14.04 32bit 安装GNS3 1.3.3 - leaf - ------勤解万难------"></p>
<p>  </p>
<p><img src="http://img0.ph.126.net/VqehHsnYhAutTxCYl5Yaaw==/6619482211677763503.png" alt="[转载]UBUNTU14.04 32bit 安装GNS3 1.3.3 - leaf - ------勤解万难------" title="[转载]UBUNTU14.04 32bit 安装GNS3 1.3.3 - leaf - ------勤解万难------"></p>
<p> </p>
</blockquote>
<p>8、安装相关工具<br>sudo apt-get install roxterm wireshark<br><img src="http://img0.ph.126.net/IKhsUkL3hVU3kSvSGpQqQw==/6630143076420477582.png" alt="[转载]UBUNTU14.04 32bit 安装GNS3 1.3.3 - leaf - ------勤解万难------" title="[转载]UBUNTU14.04 32bit 安装GNS3 1.3.3 - leaf - ------勤解万难------">  </p>
<p>9、错误提示</p>
<p>Server error from 127.0.0.1:8000: IOU2: The following shared library dependencies cannot be found for IOU image /home/ywz/5Soft/GNS3/images/IOU/i86bi-linux-l3-p-15.0a.bin: libcrypto.so.4</p>
<p>解决  sudo ln -s /lib/i386-linux-gnu/libcrypto.so.1.0.0 /lib/i386-linux-gnu/libcrypto.so.4</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]快速理解Docker - 容器级虚拟化解决方案</title>
    <url>/posts/1535462288/</url>
    <content><![CDATA[<p><a href="http://blog.csdn.net/colorant/article/details/20608157">http://blog.csdn.net/colorant/article/details/20608157</a>  </p>
<p>其他:</p>
<p>docker用户指南  </p>
<p><a href="http://www.widuu.com/chinese/_docker/userguide/README.html">http://www.widuu.com/chinese\_docker/userguide/README.html</a>  </p>
<p>是什么</p>
<p>简单的说Docker是一个构建在LXC之上的,基于进程容器(Processcontainer)的轻量级VM解决方案</p>
<p>拿现实世界中货物的运输作类比,为了解决各种型号规格尺寸的货物在各种运输工具上进行运输的问题,我们发明了集装箱</p>
<p><img src="http://img2.ph.126.net/z8sb7loU42BTjg2aaQpjPQ==/6608641027027329422.png" alt="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------" title="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>Docker的初衷也就是将各种应用程序和他们所依赖的运行环境打包成标准的container/image,进而发布到不同的平台上运行</p>
<p><img src="http://img2.ph.126.net/eTbtT_pQbARMS5PlNNaYUA==/6608415627144727628.png" alt="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------" title="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>从理论上说这一概念并不新鲜,各种虚拟机Image也起着类似的作用</p>
<p>Docker container和普通的虚拟机Image相比,最大的区别是它并不包含操作系统内核.</p>
<p>   </p>
<p><img src="http://img1.ph.126.net/CXoaOka-9j2ea9B9I_K0RA==/6608886218120322808.png" alt="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------" title="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>普通虚拟机将整个操作系统运行在虚拟的硬件平台上,进而提供完整的运行环境供应用程序运行,而Docker则直接在宿主平台上加载运行应用程序.本质上他在底层使用LXC启动一个Linux Container,通过cgroup等机制对不同的container内运行的应用程序进行隔离,权限管理和quota分配等</p>
<p>每个container拥有自己独立的各种命名空间(亦即资源)包括:</p>
<p> PID进程, MNT文件系统, NET网络, IPC, UTS主机名等</p>
<p> <strong>与**</strong>LXC**<strong>有什么不同</strong></p>
<p>基本上你可以认为目前的Docker是LXC的一个高级封装,提供了各种辅助工具和标准接口方便你使用LXC,你可以依靠LXC和各种脚本实现与docker类似的功能，就像你不使用APT/yum等工具也可以自己搞定软件包安装一样，你使用他们的关键原因是方便易用！</p>
<p>实际使用中，你一般不用关心底层LXC的细节,同时也不排将来docker实现基于非LXC方案的可能性</p>
<p>在LXC的基础上, Docker额外提供的Feature包括：标准统一的打包部署运行方案，历史版本控制， Image的重用，Image共享发布等等</p>
<p><strong>Container**</strong>构建方案**</p>
<p>除了LXC，Docker的核心思想就体现在它的运行容器构建方案上</p>
<p><img src="http://img0.ph.126.net/eXtQagb1L5uBGARuybnwwQ==/6619114974793163385.png" alt="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------" title="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>为了最大化重用Image，加快运行速度，减少内存和磁盘footprint, Docker container运行时所构造的运行环境，实际上是由具有依赖关系的多个Layer组成的。例如一个apache的运行环境可能是在基础的rootfs image的基础上，叠加了包含例如Emacs等各种工具的image，再叠加包含apache及其相关依赖library的image，这些image由AUFS文件系统加载合并到统一路径中，以只读的方式存在，最后再叠加加载一层可写的空白的Layer用作记录对当前运行环境所作的修改。</p>
<p>有了层级化的Image做基础，理想中，不同的APP就可以既可能的共用底层文件系统，相关依赖工具等，同一个APP的不同实例也可以实现共用绝大多数数据，进而以copy on write的形式维护自己的那一份修改过的数据等</p>
<p>历史和生态环境</p>
<p>Docker项目从启动到现在不过一年多时间，发展势头还是很迅猛的</p>
<p>2013.01做为dotcloud内部项目开始启动</p>
<p>2013.03.27正式作为public项目发布</p>
<p>2014.1被BLACK DUCK评选为2013年10大开源新项目“TOP 10 OPEN SOURCE ROOKIE OF THE YEAR”</p>
<p>目前的状态 ( 2014.3 )</p>
<p>Docker 0.8.1</p>
<p>10000+ github stars(top 50)</p>
<p>350+ contributors</p>
<p>1500+ fork</p>
<p><img src="http://img1.ph.126.net/5jnIDzPs61Bgt2koJe_xTQ==/6619476714118700914.jpeg" alt="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------" title="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>具体应用方面，可以看到百度至少在2013年10月份就已经成功使用Docker支持其BAE平台的Paas服务</p>
<p>安装运行和使用</p>
<p>Docker虽然是号称build once， runeverywhere。但是实际上还是受其引擎依赖关系的限制的，目前的版本具体来说对系统要求：</p>
<ul>
<li>Linux Kernel 3.8+</li>
<li>LXCsupport</li>
<li>64bitOS</li>
<li>AUFS</li>
</ul>
<p>以上要求，以ubuntu为例，需要12.04配合 3.8kernel升级，或者 ubuntu 13.04+</p>
<p>在ubuntu12.04上，基本安装步骤如下</p>
<p>sudoapt-get update sudo apt-get install linux-image-generic-lts-raringlinux-headers-generic-lts-raring</p>
<p>sudoapt-key adv –keyserver keyserver.ubuntu.com –recv-keys36A1D7869245C8950F966E92D8576A8BA88D21E9</p>
<p>sudosh -c “echo deb <a href="http://get.docker.io/ubuntu">http://get.docker.io/ubuntu</a>docker main\ &gt; /etc/apt/sources.list.d/docker.list”</p>
<p>sudoapt-get update</p>
<p>sudoapt-get install lxc-docker</p>
<p>如果你在安装之前想要先体验一下docker的基本操作命令等的话，可以尝试一下这个在线的live教程<a href="https://www.docker.io/gettingstarted/#h_tutorial">https://www.docker.io/gettingstarted/#h_tutorial</a></p>
<p>常用命令</p>
<p>分类列一下常用的CLI命令</p>
<ul>
<li>仓库相关</li>
</ul>
<p>search/ pull / push / login etc.</p>
<p>例：docker pull ubuntu从仓库下载ubuntuimage</p>
<ul>
<li>Images操作相关</li>
</ul>
<p>images/ rmi / build / export  / import / save /load etc.</p>
<p>例：docker images -t以树形结构列出当前本地Image</p>
<ul>
<li>运行相关</li>
</ul>
<p>run / start / stop / restart / attach /kill etc.</p>
<p>docker run -i -t ubuntu /bin/bash 启动ubuntu image，并交互式的运行shell</p>
<ul>
<li>杂项</li>
</ul>
<p>Docker diff  / commit</p>
<p>Dockerinfo / ps / inspect / port / logs / top / history etc.</p>
<p>具体docker命令的使用参见<a href="http://docs.docker.io/en/latest/reference/commandline/">http://docs.docker.io/en/latest/reference/commandline/</a></p>
<p>常见问题</p>
<ul>
<li>使用Non root用户</li>
</ul>
<p>目前版本的docker由于使用Socket进行通讯，因此需要root用户权限 sudo xxx，或者将需要使用Dockerclient的用户加入docker用户组</p>
<p>sudogpasswd -a ${USER} docker</p>
<ul>
<li>网络相关问题</li>
</ul>
<p>当你在网关背后需要通过代理连接docker的index数据库时，可以手动加上http_proxy环境变量来启动dockerdaemon</p>
<p>HTTP_PROXY=<a href="http://proxy/_server:port">http://proxy\_server:port</a> docker -d &amp;</p>
<p>更好的做法是修改/etc/default/docker ( on ubuntu ),添加exporthttp_proxy=proxy_server:port</p>
<p>同样，docker container如果无法自动正确的从host环境中获得DNS的配置，则需要手动指定DNS服务器地址，这可以通过 docker -run –dns=xxx 来实现，也可以修改/etc/default/docker添加例如DOCKER_OPTS=”-dns 8.8.8.8”</p>
<ul>
<li>特权模式</li>
</ul>
<p>在正常情况下在container内部你没有权限操作device设备，而当前版本中，container内部部分文件例如/etc/hosts;/etc/hostname; /etc/resolve.conf等文件是动态通过mount动态以只读的形式加载上来的，理论上说你应该找到合适的方法去保证这些自动生成并加载的文件的正确性 (例如通过--dns设置 resolve.conf )，但是如果由于特殊原因你需要手动修改，那么你可以通过特权模式启动 docker client ： docker run –privileged，然后你可以卸载这些文件，自己再创建新的版本</p>
<ul>
<li>过多的层级依赖关系</li>
</ul>
<p>以Layer的方式实现APP和相关library的cheap reuse和fast update是Docker的关键所在，不过受目前AUFS文件系统的限制，默认Layer的层级最多只能达到127（曾经只有42），在实际使用中有多种情况可能导致你的container的层级关系快速增长到这个极限值，撇开这么多layer叠加以后AUFS的效率不谈，更多情况下是你无法再更新构建你的image了</p>
<ol>
<li>使用Dockerfile构建Image时，每条指令都会给最终的Image增加一层layer依赖关系.</li>
<li>以修改，提交，再修改再提交的方式不停的调整，更新你的Image</li>
<li>从仓库中下载的别人的Image已经包含众多的层级依赖关系，而你需要进一步更新以创建你自己的版本</li>
</ol>
<p>前两者在一定程度上还是你自己可能把控的，最后一种情况就没办法了。这个问题最终必将影响Docker的实际可用性，目前的解决方案包括：</p>
<ul>
<li>使用Dockerfile时,尽可能合并多个操作：例如使用 “&amp;&amp;” 或 “;”合并运行多个shell命令；将多个shell命令写成脚本，在dockerfile中添加并运行这个脚本</li>
<li>通过Export再Import Image，丢弃所有历史信息和依赖关系，创建一个全新的image</li>
</ul>
<p>将来可能的解决方案包括：</p>
<ul>
<li>在Dockerfile中添加对多步操作的合并提交的支持</li>
<li>外部的image Flat工具的支持，目标是能够保留历史信息等</li>
<li>非AUFS的其它Storage解决方案</li>
</ul>
<p>Future development</p>
<p>虽然Docker目前默认使用LXC和AUFS，但是Docker的核心思想本身，并不强制绑定这两者，0.8版本已经可以使用BTRFS，而整个Docker框架也改成了插件式的架构，便于添加替换各个功能模块</p>
<p><img src="http://img2.ph.126.net/EA-pQxpo2Gr5sAmgsNlEzg==/6619206234258267968.png" alt="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------" title="[转载]快速理解Docker - 容器级虚拟化解决方案 - leaf - ------坚持雅操------"></p>
<p> </p>
<p>例如更多的Storage方案的支持，规避AUFS当前的问题，除了LXC以外更多的虚拟化方案等</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]打开电脑桌面上的图片文件很慢 解决办法</title>
    <url>/posts/3679287795/</url>
    <content><![CDATA[<p><a href="http://hi.baidu.com/muz32/blog/item/0ae6dbffe552fea2b801a04e.html">http://hi.baidu.com/muz32/blog/item/0ae6dbffe552fea2b801a04e.html</a>  </p>
<p>电脑桌面上的图片打开很慢？</p>
<p>可能我们会遇到这样的情况，电脑桌面上的图片文件打开很慢，但是如果把这个文件拷贝到文件夹里面或者放在磁盘根目录下，就可以正常的打开。</p>
<p>网上很多人的建议是用系统优化一类的软件，比如用windows优化大师优化系统，或是说桌面图标太多，再有的就是要求重装系统等等。</p>
<p>如果尝试上述方法，可能只有重装系统是能解决问题的</p>
<p>其实并不是系统有问题的原因，实际原因是桌面上至少有一个快捷方式是无效的。</p>
<p>特别是加入内部局域网的用户，这种情况会时有发生，原因是原先的快捷方式可能是网络不通，因为目标计算机更改IP或者计算机名等，使得快捷方式变成了无效路径，删除无效的快捷方式，问题就能解决了。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]无线路由做桥接方法</title>
    <url>/posts/4278953712/</url>
    <content><![CDATA[<p><a href="http://wenku.baidu.com/view/147ee782e53a580216fcfe62.html">http://wenku.baidu.com/view/147ee782e53a580216fcfe62.html</a>  </p>
<p>     为了增加无线网络的覆盖范围，增加远距离无线传输速率，使较远处能够方便快捷地使用无线来上网冲浪，这样就需要用到我们无线路由器的桥接或WDS功能。其中，桥接又分为点对点的桥接和点对多点的桥接。无线桥接示意图如下：  </p>
<p><img src="http://img.ph.126.net/CnM_ltTcFWmNS9QynizOSQ==/1582733794060896667.jpg" alt="无线路由做桥接方法 - leaf - ------坚持雅操------" title="无线路由做桥接方法 - leaf - ------坚持雅操------"></p>
<p>       如上图，住在同一栋楼的住户B、C、D希望通过A家的ADSL宽带无线上网，但是B、C、D家中只有部分区域信号较好，其它区域信号弱或者根本就搜不到信号，怎么办？在B、C、D家中各增加一台TP-LINK无线路由器，通过无线桥接功能就可以实现整个区域的完美覆盖、消除盲点，这是点对多点桥接的典型应用。如果只有住户B想通过A家的ADSL宽带无线上网，则需要用到点对点的桥接模式。不只是家庭，在多办公楼层、居民小区、复式家庭等环境同样可以桥接来实现无线覆盖。由于在配置过程中，点对点桥接与点对多点桥接基本类似，因此我们以点对多点桥接为例，进行配置说明。  </p>
<p>**<br>1、IP设置**：<br>        住户A、B、C、D家中的无线路由器依次标记为无线路由器A、无线路由器B、无线路由器C、无线路由器D。IP地址192.168.1.X中X的范围为2到254之间的任何数字(1做网关地址)，但是所有电脑和无线路由器的IP地址的最后一位不能相同。  </p>
<p><strong>2.配置无线路由器：</strong>  </p>
<p>&gt;&gt;&gt;启用无线路由器A“无线参数”的Bridge功能，写入无线路由器B、C、D的MAC地址，<br>      并根据个人需求修改SSID和频段；在网络参数—WAN口设置处，设置无线路由器A上网。</p>
<p><img src="http://img.ph.126.net/X-XjmwQQbqLFzLmQEmw7Rg==/1585548543828003312.jpg" alt="无线路由做桥接方法 - leaf - ------坚持雅操------" title="无线路由做桥接方法 - leaf - ------坚持雅操------"></p>
<p>&gt;&gt;&gt;配置无线路由器B、C、D：禁用DHCP服务器；  </p>
<p><img src="http://img.ph.126.net/OyZOV5YJmymo5pBIbvLU_A==/1585548543828003319.jpg" alt="无线路由做桥接方法 - leaf - ------坚持雅操------" title="无线路由做桥接方法 - leaf - ------坚持雅操------"></p>
<p>      修改LAN口IP地址为192.168.1.X（各设备IP不同）；  </p>
<p><img src="http://img.ph.126.net/qijlhnIMIFEPVZzYQ9tUvA==/1277333444329834975.jpg" alt="无线路由做桥接方法 - leaf - ------坚持雅操------" title="无线路由做桥接方法 - leaf - ------坚持雅操------"></p>
<p>     启用“无线参数”的Bridge功能，写入无线路由器A的MAC地址，调整频段与无线路由器A一致，修改SSID(各自不一样)；  </p>
<p><img src="http://img.ph.126.net/73sBSRQqZrEqPkywZ9QFQQ==/2618280233379400085.jpg" alt="无线路由做桥接方法 - leaf - ------坚持雅操------" title="无线路由做桥接方法 - leaf - ------坚持雅操------"></p>
<p>**3.完成设置<br>**       将无线路由器A、B、C、D放到指定位置。注意B、C、D的摆放位置要能较好的搜索到A的信号；<br>       操作各自的电脑无线连接到无线路由器，即可实现无线共享上网。  </p>
<p>提示：不同产品的桥接功能其配置原理一样，只是在配置界面上有所区别。桥接时需要注意双方频段一致，以及填写好对方正确的无线MAC地址。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]机械键盘摘录</title>
    <url>/posts/2122020267/</url>
    <content><![CDATA[<p>转载自：<a href="http://mouse.zol.com.cn/405/4058211_all.html#p4070989">http://mouse.zol.com.cn/405/4058211_all.html#p4070989</a></p>
<p><a href="http://mouse.zol.com.cn/405/4058211_all.html#p4070989">  
</a>我们目前最为常见的机械轴有四种，分为是黑轴、茶轴、青轴以及红轴。</p>
<p><strong>黑轴</strong></p>
<blockquote>
<p><img src="http://img1.ph.126.net/EZ5mwwJxkQCFqdW1BOWE8A==/1476617727924211858.jpg" alt="[转载]机械键盘摘录 - leaf - ------坚持雅操------" title="[转载]机械键盘摘录 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> <strong>段落感最不明显，声音最小，与青轴形成鲜明对比，直上直下，下压1.5mm即可触发。无论你想得到急速或舒缓的输入，黑轴都能自如应对，打字游戏都适合，但是由于触发键程短，压力克数较大，所以在游戏中有上佳的表现。 黑轴机械键盘单个轴使用寿命长达5000万次(其他为2000万次)。</strong></p>
<p><strong>茶轴</strong></p>
<blockquote>
<p><img src="http://img1.ph.126.net/H006rUsyhZvW4GEFlM8Lww==/6597828429681505504.jpg" alt="[转载]机械键盘摘录 - leaf - ------坚持雅操------" title="[转载]机械键盘摘录 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> <strong>相比青轴，茶轴的段落感要弱很多，而对比黑轴，又不是直上直下的感觉，2mm即可触发，属于比较奢侈的机械轴。有人将其比喻为 Cherry的秋天，结合了青轴与黑轴的特点，很容易被大众所接受。</strong></p>
<p><strong>青轴</strong></p>
<blockquote>
<p><img src="http://img2.ph.126.net/t53MPjhVrQCenNCu0uXFbQ==/3889702703264896031.jpg" alt="[转载]机械键盘摘录 - leaf - ------坚持雅操------" title="[转载]机械键盘摘录 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>  段落感最强、青轴的噪声最大，机械感最强，是<a href="http://detail.zol.com.cn/keyboard/p11947/">机械键盘</a>的代表轴，需下压2.4mm才可触发，打字节奏感十足，但是声音较大，比较吵 , 压力克数为60g。</p>
<p><strong>红轴</strong></p>
<blockquote>
<p><img src="http://img0.ph.126.net/keZgjL8FyU63cqbkSGREnw==/6598106606123228022.jpg" alt="[转载]机械键盘摘录 - leaf - ------坚持雅操------" title="[转载]机械键盘摘录 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> 　　与黑轴相似。但压力克数比黑轴小，起35，终60（黑轴起点为40）。是08年出的新轴。手感比较轻盈。敲击时没有段落感，直上直下，触发键程也同为2.0mm，敲击时更加轻松，能很好兼顾游戏和打字的使用需求。 目前只有Cherry原厂的黑白两色产品。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>软考：网工</title>
    <url>/posts/3758575812/</url>
    <content><![CDATA[<p>报考：<br>2012.03.01-2012.04.12，登录 <a href="http://www.zjrjks.org/">www.zjrjks.org</a> 报名并缴费(140元)  </p>
<p>准考证：<br>2012.05.18-2012.05.25  登录 <a href="http://www.zjrjks.org/">www.zjrjks.org</a> 打印准考证  </p>
<p>考试：<br>2012.05.26   9点开考  </p>
<p>查成绩：<br>2012.06.29<br><a href="http://www.zjrjks.org/ygcj/_cjcx.aspx">http://www.zjrjks.org/ygcj\_cjcx.aspx</a><br>上午成绩:     56     下午成绩:     50<br>合格标准：上午45分以上，下午45分以上  </p>
<p>11月领证书<br>地址：市政府 14楼 1499室  </p>
<p>关于参考书：<br>看CCNA的书就好了，指定书范围太宽，又考不了几题，看了也没意思</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>运输层-TCP</title>
    <url>/posts/3823480528/</url>
    <content><![CDATA[<p>TCP格式：</p>
<blockquote>
<p>伪首部-源端口-目的端口-序号-确认号-数据偏移-保留-状态码-窗口-检验和-紧急指针-选项-填充-数据</p>
<p>序号：TCP对传输的数据字段中的每个字节都进行编码。首部的序号就是第一个数据字节的序号。</p>
<p>确认号：下一个报文中第一个数据字段的编码，也就是上一个报文最后一个字段加1。</p>
<p>数据偏移：TCP首部长度。</p>
<p>保留：全0</p>
<p>状态码：</p>
<blockquote>
<p>URG：URG=1表示紧急，立即发送数据。和紧急指针一起用。紧急数据放在数字段的最前面</p>
<p>ACK：ACK=1表示确认号有效。</p>
<p>PSH：PSH=1表示发送的数据接收端尽快交付给进程。</p>
<p>RST：RST=1表示重建连接。断开再连接。</p>
<p>SYN：SYN=1表示连接请求或同意连接。</p>
<blockquote>
<p> SYN=1 ACK=0 连接请求；SYN=1 ACK=1 同意建立连接</p>
</blockquote>
<p>FIN：FIN=1 要求释放连接。</p>
</blockquote>
<p>窗口：用于流控</p>
<p>检验和：检验整个TCP报文。也要加上伪代码。和UDP相同。</p>
<p>紧急指针：指出紧急数据的最后一个字符。这样就知道哪些是紧急数据。紧急数据从第一个数据字段开始</p>
<p>选项：TCP只有MSS选项。</p>
<blockquote>
<p>MSS：最大报文段长度</p>
<p>告诉对方最多能接收的多长的数据字段(是TCP里面的数据字段)。默认536B</p>
<p>网络上都能接受的报文段长度：556B：536+20</p>
</blockquote>
</blockquote>
<p>TCP拥塞控制</p>
<blockquote>
<p> 慢开始+拥塞控制</p>
<p>快开始+拥塞控制+快恢复  </p>
</blockquote>
<p>TCP连接和释放</p>
<blockquote>
<p>连接</p>
<p>SYN=1，ACK=0，SEQ=X (后面传送数据的第一个数据字节序号为X+1)——-&gt;</p>
<p>&lt;—–SYN=1，ACK=1，SEQ=Y，确认号=X+1</p>
<p>ACK=1，SEQ=X+1，确认号=Y+1———-&gt;</p>
<p>后面发的第一个报文的数据字段的序号就是X+1</p>
<p>释放</p>
<p>FIN=1，SEQ=X(左边发送的最后一个数据字段的最后一个字节的序号+1=X)——&gt;</p>
<p>&lt;——–ACK=1，SEQ=Y，确认号=X+1</p>
<p>&lt;——–FIN=1，ACK=1，SEQ=Y，确认号=X+1   （进程通知对方释放连接）</p>
<p>ACK=1，SEQ=X+1，确认号=Y+1————&gt;</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>运输层-UDP</title>
    <url>/posts/2909164064/</url>
    <content><![CDATA[<p>运输层是通信的最高层，再上面就是进程。运输层通过端口和进程通信。</p>
<p>运输层的两端用插口(socket)标记。插口：IP地址+端口号。标记了IP和端口，通信才不会混乱。</p>
<blockquote>
<p>netstat显示出来的socket就是这个。</p>
</blockquote>
<p>UDP</p>
<blockquote>
<p>UDP不使用拥塞控制，但其上层的应用层会提供措施来避免拥塞，如队列(栈)。</p>
<p>UDP和进程的通信使用入队列和出队列方式。入队列负责接收，而出队列负责发送。</p>
<p>如出队列满了，则暂停发送，如入队列满了，则丢弃后面的数据。这样也就起到了流控的作用。</p>
<p>使用两个队列是由于服务器和客户端使用不同的端口。所以要用不同的队列负责接收和发送。</p>
<p>UDP格式</p>
<p>伪首部|源端口|目的端口|长度|检验和</p>
<p>     |</p>
<p>源IP—目的IP—1B的0填充—IP的协议字段17—UDP长度</p>
<p>伪首部：不存在，但是计算检验和的时候要用到。</p>
<p>端口号：用16bit标记，所以总共有65535个端口号。</p>
<p>长度：整个UDP长度(UDP首部+数据部分)</p>
<p>检验和：将整个UDP一起检验。</p>
<p>检验和算法：</p>
<blockquote>
<p>1、检验和用0填充</p>
<p>2、UDP数据字段如不是4B的倍数也用0填充</p>
<p>3、按16bit一行排列。</p>
<p>4、由右向左按反码求和逐列计算。0+0=0；0+1=1；1+1=0但是产生进位1加到下一列。</p>
<p>5、求出的结果再取反码，就是检验和。</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>通过PXE安装系统</title>
    <url>/posts/4265064830/</url>
    <content><![CDATA[<p>PXE整个安装的过程是这样的：</p>
<p>PXE网卡启动 =&gt; </p>
<p>DHCP获得IP地址 =&gt; </p>
<p>从TFTP上下载 pxelinux.0、vmlinuz、initr.img 等 =&gt; </p>
<p>引导系统进入安装步骤 =&gt; </p>
<p>通过PEX linux 下载ks.cfg文件并跟据ks.cfg自动化安装系统 =&gt; 完成。</p>
<p>windows下软件有</p>
<blockquote>
<p>TFTPD32</p>
</blockquote>
<blockquote>
<p>深度网吧GHOST辅助工具服务端</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>linux下详细配置</p>
<blockquote>
<p>需要的文件有</p>
<p>isolinux：安装光盘里有</p>
</blockquote>
<blockquote>
<blockquote>
<p>vmlinuz</p>
</blockquote>
<blockquote>
<p>initrd.img</p>
</blockquote>
<blockquote>
<p>isolinux.cfg</p>
<p>vesamenu.c32</p>
</blockquote>
<blockquote>
<p>splash.jpg</p>
</blockquote>
</blockquote>
<blockquote>
<p>syslinux：<a href="http://www.syslinux.org/wiki/index.php/Download">http://www.syslinux.org/wiki/index.php/Download</a></p>
</blockquote>
<blockquote>
<blockquote>
<p>pxelinux.0</p>
<p>vesamenu.c32 (可选用，二选一)</p>
</blockquote>
</blockquote>
<blockquote>
<p>系统安装盘</p>
</blockquote>
<p><a href="http://zhumeng8337797.blog.163.com/blog/static/100768914201121383022804/">http://zhumeng8337797.blog.163.com/blog/static/100768914201121383022804/</a></p>
<p><a href="http://www.ipcpu.com/2010/12/linux-pxe/">http://www.ipcpu.com/2010/12/linux-pxe/</a></p>
<p><a href="http://www.kernel.org/pub/linux/utils/boot/syslinux/">www.kernel.org/pub/linux/utils/boot/syslinux/</a></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>通过克隆快速建多个相同的vmware虚拟机</title>
    <url>/posts/2344099068/</url>
    <content><![CDATA[<p>转载：<br><a href="http://www.linuxdiyf.com/viewarticle.php?id=186281">http://www.linuxdiyf.com/viewarticle.php?id=186281</a><br><a href="http://www.dbsoo.com/html/11-1/1511.htm">http://www.dbsoo.com/html/11-1/1511.htm</a>  </p>
<p>对做实验的时候很有用，可以快速建多个虚拟机。  </p>
<p>1、右击虚拟机–manage–clone  </p>
<p><img src="http://img5.ph.126.net/hdP7xJtaCFIbev6kV8vTJg==/6597242389983724135.jpg" alt="通过克隆快速建多个相同的vmware虚拟机 - leaf - ------坚持雅操------" title="通过克隆快速建多个相同的vmware虚拟机 - leaf - ------坚持雅操------">  </p>
<p>2、current state in the virtual machine  </p>
<p><img src="http://img6.ph.126.net/FH-HXRjZif6uQBeW85ORIg==/6597776752633506436.jpg" alt="通过克隆快速建多个相同的vmware虚拟机 - leaf - ------坚持雅操------" title="通过克隆快速建多个相同的vmware虚拟机 - leaf - ------坚持雅操------">  </p>
<p>3、这里可以选linked clone 或者 full clone<br>区别：  </p>
<blockquote>
<p>linked clone：相当于一个快照。<br>full clone：想到于复制。  </p>
</blockquote>
<p><img src="http://img4.ph.126.net/ZyDSoR471YmOyKrzaEumLg==/6597980162284648014.jpg" alt="通过克隆快速建多个相同的vmware虚拟机 - leaf - ------坚持雅操------" title="通过克隆快速建多个相同的vmware虚拟机 - leaf - ------坚持雅操------">  </p>
<p>4、继续就完成了。  </p>
<p> linked clone 的虚拟机所占的容量非常小，只有3.2M。  </p>
<p><img src="http://img6.ph.126.net/XI90c_-F8tNtuRU1F1kqNA==/6597343545053564776.jpg" alt="通过克隆快速建多个相同的vmware虚拟机 - leaf - ------坚持雅操------" title="通过克隆快速建多个相同的vmware虚拟机 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>配置 H3C S3600</title>
    <url>/posts/2417698190/</url>
    <content><![CDATA[<p>minicom -C conf-s3600  </p>
<p>display current-configuration                                #查看当前配置<br>system-view<br>sysname H3C                                                       #更改交换机名<br>vlan 1 to 4                                                            #划分vlan 1-4<br>vlan 7                                                                   #划分vlan7<br>interface Vlan-interface3<br>ip address 192.168.1.3 255.255.255.0<br>interface Ethernet1/0/1<br>port access vlan 7<br>interface Ethernet1/0/2<br>port access vlan 3<br>vlan 4<br>port Ethernet 1/0/3 to Ethernet 1/0/36<br>vlan 2<br>port Ethernet 1/0/37 to Ethernet 1/0/48<br>interface GigabitEthernet1/1/1<br>duplex full<br>port link-type trunk<br>port trunk permit vlan all<br>user-interface aux 0 7<br>user-interface vty 0<br>user privilege level 3<br>set authentication password 7 ***<br>user-interface vty 1 4<br>save</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>金万维断网问题</title>
    <url>/posts/3303525192/</url>
    <content><![CDATA[<p><img src="http://img2.ph.126.net/yMiWMdXyaXFKHkjkwde7UA==/4947485665744140125.png" alt="金万维断网问题 - leaf - ------勤解万难------" title="金万维断网问题 - leaf - ------勤解万难------"></p>
<p>断网5分钟，判断你是DDNS用的是免费版，然后路由器重启之后DDNS更新比较慢，导致的问题</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>金蝶安装问题</title>
    <url>/posts/3821662524/</url>
    <content><![CDATA[<p>1、无法连接问题<br>2、  </p>
<p>SQL Server 无法初始化 VIA 支持库 [QLVipl.dll]。这通常指示 VIA 支持库不存在或已损坏。请修复或禁用 VIA 网络协议。错误: 0x7e。  </p>
<p>关掉via协议即可  </p>
<p>错误代码:16389(4005H)<br>Source  :Microsoft OLE DB Provider for SQL Server<br>Detail  :[DBNETLIB][ConnectionOpen (Connect()).]SQL Server 不存在或拒绝访问。  </p>
<p>打开账套，检查数据库服务器名称是否正确</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>金融行业的一些概念</title>
    <url>/posts/3360955934/</url>
    <content><![CDATA[<p>风险投资基金：  </p>
<blockquote>
<p>以参股的方式给创业者的公司注入资金。靠创业的公司升值盈利<br>风投不用抵押和偿还。  </p>
</blockquote>
<p>天使投资人/天使投资社  </p>
<blockquote>
<p>一个或几个人组成的小组进行风险投资。  </p>
<p>融资：每次融资都是以稀释股权的方式来筹措资金。  </p>
<blockquote>
<p>比如A公司价值100W，然后由4个人组成，则每个人的股权都为25%，  </p>
</blockquote>
<blockquote>
<p>现：天使投资人投了25W进来，则原先的每个人的股权就变为20%。公司的总价值则为125W  </p>
</blockquote>
</blockquote>
<p>私募基金：  </p>
<blockquote>
<p>收购状况不良的上市公司，重整后从新上市或出售盈利  </p>
</blockquote>
<p>商业银行：  </p>
<blockquote>
<p>储蓄和商业贷款为主  </p>
</blockquote>
<p>投资银行：  </p>
<blockquote>
<p>买卖证券、拆封和合并上市公司等，给个人和机构财产管理等。<br>如IPO就是投资投行做的。  </p>
</blockquote>
<p>共同基金公司：  </p>
<blockquote>
<p>管理公共财产进行投资等。如养老金的管理  </p>
</blockquote>
<p>对冲基金公司：  </p>
<blockquote>
<p>炒作股票、期货等赚钱。如做多、做空操作。  </p>
</blockquote>
<p>评级机构：  </p>
<blockquote>
<p>对债务等的预测和评价。  </p>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>频发短信可能让人陷于寂寞</title>
    <url>/posts/3738154589/</url>
    <content><![CDATA[<p>在文化传播公司工作的晓丽是个短信狂人,她每天都要给男朋友和其他朋友发很多短信,尤其是给男朋友发的短信几乎可以把手机爆掉,不管是中午下班还是晚上下 班都发,这已经是她的习惯.<strong>如果哪天的短信发少了或收得不及时,她就会不爽.但是,她虽然喜欢发短信,却越来越不喜欢交际,心里时不时还会空荡荡的.</strong></p>
<p>每天走在路上,晓丽哪怕看到一个她认为模样怪怪的人,她都要给有关朋友发个短信描述一番.如果有人没有回她的短信,晓丽就会有些生气,然后会不爽很久,甚至会暗暗把这个人从手机里删除.  </p>
<p>分析  </p>
<p>手机短信大大方便了生活,不再需要面对面的沟通,有些不能当面说的话也能通过短信发出,因此短信成为晓丽这种人喜欢的通信工具.  </p>
<p>很多喜欢通过手机短信交流的人之所以对这种交际方式情有独钟,最主要的原因是短信沟通允许双方之间都不必即刻对另一方做出回复,从而留出了足够的考虑时间.  </p>
<p>但是,心理学家调查发现,越是频繁收发短信的人,表现出来的社会忧虑感和内向型个性就越强烈.心理咨询研究员章睿齐说,晓丽喜欢通过手机短信交流,对这种交际方式情有独钟,最主要的原因,是短信沟通允许双方之间都不必见面,而她发送短信频繁,是因为她还是有交流的渴望,但内心总有些忧虑感.一般来讲,那些宁可选择通过短信这一方式来与他人沟通,却并不依靠一般的电话交谈或面对面交流的人,长期下去,都会越来越内向,而且会产生孤寂和内心空虚,并出现交际心理障碍.  </p>
<p>建言  </p>
<p>适当的短信交流无可厚非,但是过于频繁,或者甚至影响到了自己和别人面对面的沟通,那就要多注意,并努力改变这种局面.因此,建议不要过于依赖短信交流这种交际模式,与人多加交流,这样男友和朋友们也就不会被她的“短信轰炸”弄得不知所措了.要尽量摆脱对短信的依赖,学会与他人面对面友好沟通很重要,需注意学习以下策略.  </p>
<p>策略一 80%的时间倾听,20%的时间说话.  </p>
<p>一般人在倾听时常常出现以下情况:一、很容易打断对方讲话;二、发出认同对方的 “嗯……”“是……”等一类的声音.较佳的倾听却是完全没有声音,而且不打断对方讲话,两眼注视对方,等到对方停止发言时,再发表自己的意见.而更加理想的情况是让对方不断地发言,愈保持倾听,你就越握有控制权.  </p>
<p>在沟通过程中,20%的说话时间中,问问题的时间又占了80%.问问题越简单越好,是非型问题是最好的.说话以自在的态度和缓和的语调,一般人更容易接受.  </p>
<p>策略二 沟通中不要指出对方的错误,即使对方是错误的;你沟通的目的不是去不断证明对方是错的.  </p>
<p>生活中我们常常发现很多人在沟通过程中不断证明自己是对的,但却十分不得人缘;沟通天才认为事情无所谓对错,只有适合还是不适合你而已.所以如果不赞同对方的想法时,不妨还是仔细听他话中的真正意思.若要表达不同的意见时,切记不要说: “你这样说是没错,但我认为……”而最好说:“我很感激你的意见,我觉得这样非常好,同时,我有另一种看法,不知道你认为如何?”“我赞同你的观点,同时……”要不断赞同对方的观点,然后再说“同时……”而不说“可是……”“但是……”.  </p>
<p>策略三 善于运用沟通三大要素.  </p>
<p>人与人面对面沟通的三大要素是文字、声音以及肢体动作.经过行为科学家六十年的研究发现,面对面沟通时三大要素影响力的比率是文字7%,声音38%,肢体语言55%.一般人在与人面对面沟通时,常常强调讲话内容,却忽视了声音和肢体语言的重要性.其实,沟通便是要努力和对方达到一致性以及进入别人的频道,也就是你的声音和肢体语言要让对方感觉到你所讲和所想的十分一致,否则对方无法收到正确讯息.沟通就必须练习一致性.</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>食堂刷卡系统</title>
    <url>/posts/3777425651/</url>
    <content><![CDATA[<p>食堂卡机要求：  </p>
<blockquote>
<p>防水、防油<br>有备用电池<br>维修简便<br>可选：<br>网络口  </p>
</blockquote>
<p>taobao上找了一款：<br><a href="http://detail.tmall.com/item.htm?id=10277596418&amp;%5C_u=u12rt4eedeb">http://detail.tmall.com/item.htm?id=10277596418&amp;\_u=u12rt4eedeb</a><br>不知道好不好，先收藏一下</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>驾照期满换证流程</title>
    <url>/posts/2270870435/</url>
    <content><![CDATA[<p>1、去交警大队车管所</p>
<p>2、交15块钱拍照费，交12块钱体检费。然后拍照（两张一寸照），体检（查色盲和视力）</p>
<p>3、体检完毕拿到体检报告单，把住址，联系号码等写全，然后取票去办驾照</p>
<p>4、办驾照除会出示驾照业务受理凭证，拿凭证去交10块钱，凭证上盖章。</p>
<p>5、拿盖好章的凭证去取驾照。</p>
<p>我第一个拍的队，半个小时搞定。办理的是10年的证噢<del>~</del></p>
<p>注：没到期的拍照省内都可以办，到期后的拍照只能跑原先发证的车管所办理。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第一章</title>
    <url>/posts/2705186880/</url>
    <content><![CDATA[<p>我的是第二版。<br>大学时就在看linux的书，也买了redhat9的盘练习，但是很多按书上的操作多出错了，很打击自信心。<br>另外当时安装nvidia显卡驱动还是有很大难度的，我电脑没装成功。最后对linux就处在似懂非懂的状态。  </p>
<p>鸟哥的书我应该是09年买的，觉得很不错。<br>但是要学的资料很多，有些关于字符串处理的章节看的真的很辛苦(检查日志很有帮助)。<br>现在从新对内容梳理一下，也当成是回顾，把忘记的再从新看一遍。  </p>
<p>第二版用的是fedora4，镜像里面多不提供下载了，我是在博客里面找到的：<a href="http://qsvren.blog.163.com/blog/static/35074567200931680023/">电驴下载</a>  </p>
<p>摘录：  </p>
<blockquote>
<p>操作系统核心：与人沟通，并负责管硬件（有空应该再扩展一下，看一下书：操作系统）  </p>
<blockquote>
<p>进程控制(管理CPU)<br>内存控制(管理内存条)<br>文件系统管理(管理硬盘)<br>系统调度接口(提供shell，人机接口)  </p>
</blockquote>
<p>牛人：stallman 史托曼  </p>
<blockquote>
<p>编写了GCC，GLIBC，bash shell，Emacs<br>GCC和GLIBC是构建系统的核心工具，详细可查看<a href="http://blog.chinaunix.net/uid/436750.html">孙海勇</a>：手把手教你构建自己的linux系统  </p>
</blockquote>
<p>关于图形界面  </p>
<blockquote>
<p>图形界面X WINDOW 1984年就出来了，比苹果系统和微软多早很多年。  </p>
</blockquote>
<p>多任务操作系统  </p>
<blockquote>
<p>就是给每个任务分配一个时间片，超过了一定的时间还没做完，就得等待下一个时间分配到了才能继续  </p>
</blockquote>
<p>相关规范  </p>
<blockquote>
<p>POSIX<br>LSB<br>FHS  </p>
</blockquote>
<p>相关网站  </p>
<blockquote>
<p>鸟哥 ：<a href="http://linux.vbird.org/">http://linux.vbird.org/</a>   <a href="http://vbird.dic.ksu.edu.tw/">http://vbird.dic.ksu.edu.tw/</a>  <br>卧龙小三：<a href="http://www.ols3.net/">http://www.ols3.net/</a>  <br>study-area: <a href="http://www.study-area.org/menu2.htm">http://www.study-area.org/menu2.htm</a><br>网络农夫： <a href="http://netlab.cse.yzu.edu.tw/~statue/freebsd/docs/csh/">http://netlab.cse.yzu.edu.tw/~statue/freebsd/docs/csh/</a><br>狼主：<a href="http://netlab.kh.edu.tw/index.htm">http://netlab.kh.edu.tw/index.htm</a><br>freebsd: <a href="http://freebsd.lab.mlc.edu.tw/">http://freebsd.lab.mlc.edu.tw/</a><br>吴仁智：<a href="http://www.cses.tcc.edu.tw/~chihwu/">http://www.cses.tcc.edu.tw/~chihwu/</a></p>
</blockquote>
<blockquote>
<p>fhs   <a href="http://proton.pathname.com/fhs/">http://proton.pathname.com/fhs/</a><br>lsb   <a href="http://www.linuxfoundation.org/collaborate/workgroups/lsb">http://www.linuxfoundation.org/collaborate/workgroups/lsb</a></p>
</blockquote>
</blockquote>
<p>操作系统图  </p>
<p><img src="http://img6.ph.126.net/0flk9hftHx4kLXZGKkCkfw==/3083839844859752236.jpg" alt="鸟哥基础第一章 - leaf - ------坚持雅操------" title="鸟哥基础第一章 - leaf - ------坚持雅操------"></p>
<p> <br>gnu图  </p>
<p><img src="http://img5.ph.126.net/-lbQFx2sOoC0wiJrGL8RvQ==/2604206484544799405.jpg" alt="鸟哥基础第一章 - leaf - ------坚持雅操------" title="鸟哥基础第一章 - leaf - ------坚持雅操------"></p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第七章</title>
    <url>/posts/3012054958/</url>
    <content><![CDATA[<p>第六章有几个命令就放在这边了  </p>
<blockquote>
<p>chmod、chown、chgrp：选项  -R    </p>
</blockquote>
<p>摘录  </p>
<blockquote>
<p>环境变量PATH更改：具体可看一下第十一章  </p>
</blockquote>
<blockquote>
<p>普通操作命令  </p>
<blockquote>
<p>mkdir、rmdir：其中mkdir -m 755 test  可更改文件夹权限<br>pwd：显示当前位置<br>ls： -a 隐藏文件也列出来。-l 列出包括属性等详细信息<br>cp：  </p>
<blockquote>
<p>-a 全部复制，包括属性、子目录等<br>-l   硬链接   -s 软链接   cp -l 相当于 ln；   cp -s  相当于 ln -s<br>-u 比源文件新才复制过去  </p>
</blockquote>
<p>rm ： -r 递归<br>mv ：-u 比源文件新才复制过去  </p>
</blockquote>
<p>查看文件命令  </p>
<blockquote>
<p>cat：cat -n 显示行号      nl 也是显示行号<br>tac：从最后一行开始显示<br>more：查看时只能往下翻<br>less：查看时能上下翻<br>head：head -n  20  查看前20行<br>tail：查看最后N行<br>od：查看二进制文件，挺有用的  </p>
</blockquote>
<p>touch:建空文件，另外还能改时间  </p>
<blockquote>
<p>时间有3种：  </p>
<blockquote>
<p>改了内容后会更新时间mtime    -m<br>改了文件属性后会更新时间ctime。这个时间是touch改不了的  -c<br>读了文件后会更新时间atime     -a  </p>
</blockquote>
<p>其他参数：<br>-t：  -t 201209121639<br>-d：-d 20120912  </p>
</blockquote>
<blockquote>
</blockquote>
<p>文件\文件夹权限  </p>
<blockquote>
<p>suid、sgid、sbit<br>文件权限除了rwx，还有sst<br>完整权限是：0000,sst由第一个数字表示   srwx srwx trwx<br>其中t表示该文件夹下的文件或目录只有管理员和他本人有权删除，其他人没有权删除<br>更改方法:chmod  </p>
</blockquote>
<p>文件的隐藏属性，只针对文件而非目录  </p>
<blockquote>
<p>文件的属性是指如文件大小，修改时间等等。而rwx是对文件操作的权利(权限)，两者不一样<br>chattr   更改隐藏属性    attr：attribute<br>lsattr    查看隐藏属性  </p>
</blockquote>
<blockquote>
<p>+：增加属性<br>-：减少属性<br>=：设定这个属性  </p>
<p>属性有哪些呢<br>a：只能增加数据，不能删除<br>i：设置后不能对该文件做任何操作，包括增减数据、删除、改名、设置连接等等<br>S：改了什么立刻写入磁盘  </p>
</blockquote>
</blockquote>
<blockquote>
<p>搜索命令  </p>
<blockquote>
<p>which：which command  只查命令文件(相当于windows只查后缀为exe的文件)<br>whereis、locate  </p>
<blockquote>
<p>这2个文件是从指定的记录数据库里面查找的，所以速度比较快，缺点是当天新加的内容查不到<br>但你可以用命令updatedb更新数据库，这样再查就能查到了<br>更新命令：updatedb<br>数据库每日更新：/etc/cron.daily/slocate.cron<br>数据库存放位置：/var/lib/slocate/slocate.db<br>数据库存放位置更改：/etc/updatedb.conf里面改  </p>
</blockquote>
<p>find：  </p>
<blockquote>
<p>find功能很强大<br>find /home -name 123      在/home目录下查找名字为123的文件<br>find /home -prem +7000  在/home目录下查找有一项特殊权限的6、4、3、2、1就可以<br>find /home -prem -7000   在/home目录下查找有特殊权限的文件。必须是7000权限  </p>
</blockquote>
<blockquote>
<p>find /home -perm -7000 -exec ls -l {} \;   -exec就是对搜索的结果进行进一步的处理  </p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第三章、第四章</title>
    <url>/posts/3119352/</url>
    <content><![CDATA[<p>设备号  </p>
<blockquote>
<p>打印机  /dev/lp0-2<br>磁带机 /dev/ht0    /dev/st0       </p>
<blockquote>
<p>磁带机对于大型数据存储非常重要  </p>
</blockquote>
</blockquote>
<p>这里介绍的是fedora4的安装  </p>
<blockquote>
<p>selinux:安全限制比较严格，练习时还是关掉比较好<br>UTC：夏令时，不要勾选  </p>
</blockquote>
<p>关于多重启动，特别是先装了linux，再装windows的情况  </p>
<blockquote>
<p>装了linux后，用dd将主引导记录考出来，然后装了windows后，再写boot.ini将linux选项写上去就可以了<br>su<br>dd if=/dev/sda of=/home/123/mbr bs=512 count=1  </p>
</blockquote>
<p>这个版本有个好的一点就是直接包含了openldap的设置了  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/YMrOqIv9DPeNgD8Sk2_S1Q==/1004302716921510971.jpg" alt="鸟哥基础第三章、第四章 - leaf - ------坚持雅操------" title="鸟哥基础第三章、第四章 - leaf - ------坚持雅操------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第九章</title>
    <url>/posts/1043220146/</url>
    <content><![CDATA[<p>第九章主要是tar，gzip，bzip，dd，cpio命令，都是系统资料备份的重要命令。<br>一般压缩命令和tar一起用了，所以就看3个命令就好了  </p>
<blockquote>
<p>tar：  </p>
<blockquote>
<p>tar -cvf /tmp/a.tar  /home/abc   :打包/home/abc这个目录，命名为a.tar，并放到/tmp下面<br>tar -xvf /tmp/a.tar  /home          :把a.tar解压到/home目录下<br>gzip压缩   tar -zcvf<br>bzip压缩   tar -jcvf  </p>
<p>将某个目录排除之后再打包<br>tar –exclude /home/abc/a -cvf /tmp/a.tar /home/abc  </p>
</blockquote>
<p>dd:  </p>
<blockquote>
<p>用于系统备份比较多，功能很强大<br>备份分区   dd if=/dev/sda1 of=/mnt/sdb1/abc  </p>
</blockquote>
<blockquote>
</blockquote>
<p>cpio:  </p>
<blockquote>
<p>也是用于系统备份，数据备份。<br>备份：find /etc | cpio -o &gt; /home/etc.cpio<br>还原：cd /etc | cpio -icduv &lt; /home/etc.cpio  </p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第二十一章</title>
    <url>/posts/24379294/</url>
    <content><![CDATA[<p>系统本身的服务，由ps、top等查看、管理；提供外部的网络服务，由netstat等查看、管理。<br>十七章是系统服务，而下面的都是网络服务，  </p>
<p>独立程序  </p>
<blockquote>
<p>独立启动，常驻内存<br>位置：/etc/init.d<br>启动：service atd start  </p>
</blockquote>
<p>守护程序  </p>
<blockquote>
<p>由xinetd负责管理和启动，用到的时候才启动，不触发时不占内存<br>inetd本身没有访问控制能力，全靠TCP_wrapper控制(/etc/host.allow、/etc/host.deny)<br>xinetd本身内置了访问控制能力<br>位置：/etc/xinetd.d<br>配置：/etc/xinetd.conf            <br>-————————————————————————————-<br>service rsync<br>{<br>        disable = yes                               #服务失效<br>        socket_type     = stream              #使用tcp流<br>        wait            = no                           #由于是tcp，所以只能是nowait<br>        user            = root<br>        server          = /usr/bin/rsync<br>        server_args     = –daemon         #传递给/usr/bin/rsync的参数 ：rsync –daemon<br>        log_on_failure  += USERID         #记录日志时额外再记录：userid。<br>        #如添加only_from / no_access = 192.168.1.0 /24 即可控制访问来源<br>}<br>-—————————————————————————————  </p>
</blockquote>
<p>端口号文件  </p>
<blockquote>
<p>/etc/services<br>相关服务的端口如果services里面没有列出来，则服务不能使用。<br>先通过netstat -tunlp查看开了哪些端口，<br>再和/etc/services对照一下就知道开启了什么服务<br>再通过关闭程序：sudo /etc/init.d/*  stop 关闭程序  </p>
</blockquote>
<p>服务的启动和关闭(只针对独立启动的服务)  </p>
<blockquote>
<p>ntsysv ：这个是redhat及衍生版本才有的功能  </p>
<blockquote>
</blockquote>
<p>chkconfig  </p>
<blockquote>
<p>chkconfig –list ：查看各项服务的状态<br>chkconfig –level 345 atd on  </p>
<blockquote>
<p>level：表示运行等级<br>atd：该名称必须是/etc/init.d里面包含的<br>on：on或者off  </p>
</blockquote>
</blockquote>
<p>其他：<br>/etc/rc.d/rc.local：里面添加删除  </p>
<blockquote>
</blockquote>
</blockquote>
<p>TCP_Wrappers  </p>
<blockquote>
<p>/etc/hosts.allow、/etc/hosts.deny<br>守护程序管理的服务，由xinetd代理，由TCP_wrapper管理。当然防火墙也对访问进行限制。  </p>
<blockquote>
<p>以上2个文件都是/usr/sbin/tcpd的设置文件<br>/usr/sbin/tcpd的用处就是分析进入系统的TCP包，并进行限制  </p>
</blockquote>
<p>格式：  </p>
<blockquote>
<p>in.telnetd:ALL：加在allow里表示允许进出，加在deny里表示禁止进出<br>in.telnetd:ALL：spawn …|| …||….   后面接操作指令  </p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第二十三章</title>
    <url>/posts/2088480788/</url>
    <content><![CDATA[<p>备份用到的就是脚本+crond  </p>
<p>备份用到的服务：crontd<br>备份的命令：tar、dd、cpio、dump等  </p>
<p>远程备份脚本  </p>
<blockquote>
<p>host=”192.168.1.100”<br>id=”username”<br>pw=”passwd”  </p>
<p>basedir=”本机目录”<br>remodir=“远程目录”  </p>
<p>filename=“backup.tar”  </p>
<p>cd $basedir<br>tar -cvf $filename *  </p>
<p>#ftp到$host，并记录日志，输入EOC时结束连接  </p>
<p>ftp -n “$host” &gt; “$basedir”/“$filename”.log 2&gt;&amp;1 &lt;&lt;EOC      <br>user  $id  $pw<br>binary<br>cd $remodir<br>put $filename<br>bye<br>EOC</p>
</blockquote>
<blockquote>
</blockquote>
<p>crontab  </p>
<blockquote>
<p>30 2 * * * root   /…./ftp-backup.sh</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第二十二章</title>
    <url>/posts/828707654/</url>
    <content><![CDATA[<p>重点是日志的设置和轮换  </p>
<p>1、log默认存放位置  </p>
<blockquote>
<p>/var/log/secure             #访问系统数据的记录<br>/var/log/wtmp               #登录者的信息<br>/var/log/messages       #系统错误的信息<br>/var/log/boot.log          #系统开机和服务启动时的信息<br>/var/log/mail             <br>/var/log/maillog<br>/var/log/cron                 #cron的内容<br>/var/log/samba             #网络服务的信息<br>等等  </p>
</blockquote>
<p>2、syslogd  </p>
<blockquote>
<p>程序：/sbin/syslogd<br>程序配置：/etc/syslog.conf<br>启动脚本：/etc/init.d/syslog<br>启动脚本配置：/etc/sysconfig/syslog  </p>
<p>/etc/syslog.conf<br>cat /etc/syslog.conf | egrep -v “^#|^$”  </p>
<blockquote>
<p>*.info;mail.none;authpriv.none;cron.none                /var/log/messages<br>authpriv.*                                                                 /var/log/secure<br>mail.*                                                                       -/var/log/maillog<br>cron.*                                                                       /var/log/cron<br>*.emerg                                                                      *<br>uucp,news.crit                                                         /var/log/spooler<br>local7.*                                                                    /var/log/boot.log  </p>
<p>服务名称.信息等级                                                  log存放位置<br>服务名称  </p>
<blockquote>
<p>auth、authpriv：认证有关的记录<br>cron：                例行性有关信息<br>daemon:             守护程序相关信息<br>kern：                核心相关信息<br>syslog：             syslog本身相关信息  </p>
</blockquote>
<p>分隔符  </p>
<blockquote>
<p>.                          比后面的信息等级相同的或更高的都记录下来<br>.=                        等于后面的信息等级的记录下来<br>.！                      除了后面的信息等级，其他等级都记录下来  </p>
</blockquote>
<p>信息等级(从低到高)  </p>
<blockquote>
<p>info                      基本信息<br>notice<br>warn/warning     一般都记录这个及以上的信息<br>error/err<br>crit<br>alert<br>panic/emerg       该等级意味着系统快死机了  </p>
</blockquote>
<p>log存放位置  </p>
<blockquote>
<p>@192.168.1.100      存放到远程网络<br>*                               显示出来给所有在线的人看  </p>
</blockquote>
</blockquote>
</blockquote>
<p>3、logrotate  </p>
<blockquote>
<p>logrotate只是一个程序，它靠cron帮助每日运行。  </p>
</blockquote>
<blockquote>
<p>rpm -ql logrotate  </p>
</blockquote>
<blockquote>
<p>程序：/usr/sbin/logrotate<br>配置：/etc/logrotate.conf、/etc/logrotate.d<br>cron：/etc/cron.daily/logrotate  </p>
</blockquote>
<blockquote>
<p>/etc/logrotate.conf<br>cat /etc/logrotate.conf | egrep -v “^#|^$”  </p>
<blockquote>
<p>weekly                                    每周一次<br>rotate 4                                   存4个备份<br>create                                     建新文件来记录<br>include /etc/logrotate.d           包含该目录下的轮替设置，自定义的都可以写在这里，数据库轮替也可以用<br>/var/log/wtmp {                        针对登录时的用户状态进行记录的文件，进行轮替<br>    monthly                               记录用户ID，登录时间等等<br>    create 0664 root utmp<br>    rotate 1<br>}<br>/var/log/btmp {<br>    missingok<br>    monthly<br>    create 0600 root utmp<br>    rotate 1<br>#蓝色部分是要logrotate的内容，并且做了如何logrotate的设置。  </p>
</blockquote>
<p>/etc/logrotate.d/admin  </p>
<blockquote>
<p>/var/log/admin.log {  </p>
<blockquote>
<p>monthly<br>size=10M                            #大于10M自动轮替<br>rotate 5<br>sharedscripts  </p>
<blockquote>
<p>prerotate                      #轮替前做的事  </p>
</blockquote>
<blockquote>
<blockquote>
<p>/usr/bin/chattr -a /var/log/admin.log  </p>
</blockquote>
</blockquote>
<p>endrotate<br>sharedscripts        </p>
<blockquote>
<p>postrotate                    #轮替后做的事         </p>
</blockquote>
<blockquote>
<blockquote>
<p>/usr/bin/killall -HUP syslogd<br>/usr/bin/chattr +a /var/log/admin.log  </p>
</blockquote>
</blockquote>
<p>endrotate  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>logrotate命令  </p>
<blockquote>
<p>logrotate -v /etc/logrotate.d/admin   查看轮替的运行情况<br>logrotate -f /etc/logrotate.d/admin    强制进行轮替，立刻进行  </p>
</blockquote>
</blockquote>
<p>其他命令  </p>
<blockquote>
<p>sudo last /var/log/wtmp <br>sudo lastlog  </p>
</blockquote>
<p>附专题：数据库的轮替  </p>
<blockquote>
<p><a href="http://islandlinux.org/howto/automated-mysql-backups">http://islandlinux.org/howto/automated-mysql-backups</a><br><a href="http://www.cslog.cn/Content/logrotate-mysql-automated-backu/">http://www.cslog.cn/Content/logrotate-mysql-automated-backu/</a>     #这里有些写错了</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第二十五章</title>
    <url>/posts/2764598326/</url>
    <content><![CDATA[<p>查看电脑状态  </p>
<blockquote>
<p>lspci<br>iostat  </p>
<blockquote>
<p>iostat -c 2 3   #2秒检测CPU使用率一次，共检测3次<br>iostat -d 2 3  ##2秒检测硬盘读写一次，共检测3次</p>
</blockquote>
<p>lm_sensors  </p>
<blockquote>
<p>命令：/usr/local/bin/sensors  </p>
<blockquote>
<p> /usr/local/sbin/sensors-detect  </p>
</blockquote>
<p>配置：/etc/sensors3.conf、/etc/sensors.d  </p>
</blockquote>
</blockquote>
<p>setup功能  </p>
<blockquote>
<p>相当于系统安装时每个步骤的设置，包含nvsysv  </p>
<p><img src="http://img9.ph.126.net/dk1_2oq3vP4wmw-3zP7Adw==/6598253940679164369.jpg" alt="鸟哥基础第二十五章 - leaf - ------坚持雅操------" title="鸟哥基础第二十五章 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>cups架构打印机  </p>
<blockquote>
<p>通过网页设置的很方便<br>linux对postscript打印格式支持最好  </p>
<blockquote>
<p>PPD:：用于支持postscript，放在/usr/share/cups/model  </p>
</blockquote>
<p>联机模式：  </p>
<blockquote>
<p>socket模式：socket://IP:9100<br>LPD   模式：打印机名称LPT1/LPT2<br>IPP    模式：ipp://IP:631/printername<br>smb   模式：smb://user:passwd@IP/printername  </p>
</blockquote>
</blockquote>
<p>LVM  </p>
<blockquote>
<p>作用：产生一个大磁盘，并且扩容方便<br>概念：  </p>
<blockquote>
<p>前奏：fdisk将磁盘ID改为8e</p>
</blockquote>
<blockquote>
<p>PV：   physical volume  </p>
<blockquote>
<p>  主要用于标示磁盘用于LVM  </p>
</blockquote>
<p>VG：   volume group  </p>
<blockquote>
<p>  相当于把PV集合起来当作一个硬盘，该硬盘没有分过区、没格式化过  </p>
</blockquote>
<blockquote>
<p>  PE：physcial extend  </p>
<blockquote>
<p>用于设置VG的块大小，相当于硬盘的块大小<br>默认：4M  </p>
</blockquote>
</blockquote>
<p>LV：   logical volume  </p>
<blockquote>
<p>  相当于分区，对LVM磁盘分区  </p>
</blockquote>
<p>后续：格式化和挂载  </p>
</blockquote>
</blockquote>
<blockquote>
<p>操作：  </p>
<blockquote>
<p>前奏：  </p>
<blockquote>
<p>fdisk /dev/hdb —&gt; /dev/hdb1，/dev/hdb2 —&gt; 8e  </p>
</blockquote>
<blockquote>
<p>partprobe                      #让分区表立刻生效  </p>
</blockquote>
<p>PV：  </p>
<blockquote>
<p>pvcreate /dev/hdb1<br>pvcreate /dev/hdb2<br>pvcreate /dev/hdb3<br>pvscan                         #搜索pv分区并显示出来<br>pvdisplay                     #显示pv分区详细信息<br>                                    #pvremove 删除pv分区  </p>
</blockquote>
<p>VG：  </p>
<blockquote>
<p>vgcreate vg /dev/hdb1/dev/hdb2<br>vgscan<br>vgdisplay<br>                                    #vgextend vg /dev/hdb3   增加额外的PV<br>                                    #vgreduce vg /dev/hdb3   删除PV<br>                                    #vgremove vg                   删除VG<br>                                    #vgchange -a n vg            设置vg不可用  </p>
</blockquote>
<p>LV：  </p>
<blockquote>
<p>lvcreate -L 10G -n lv1 vg                                       #相当于分区  </p>
</blockquote>
<blockquote>
<p>lvcreate -L 15G -n lv2 vg         </p>
</blockquote>
<blockquote>
<p>lvscan<br>lvdisplay<br>                                                                             #lvremove 删除lv分区  </p>
</blockquote>
<p>格式化  </p>
<blockquote>
<p>mkfs.ext3 /dev/vg/lv1<br>mkfs.ext3 /dev/vg/lv2  </p>
</blockquote>
<p>挂载  </p>
<blockquote>
<p>mkdir /media/lvm1<br>mount …..<br>fstab  </p>
</blockquote>
<p>加大LVM磁盘  </p>
<blockquote>
<p>vgexteng vg /dev/hdb3<br>lvextend -L +10G /dev/vg/lv1                               #lvreduce 减少lv容量  </p>
</blockquote>
<blockquote>
<p>umount /media/lvm1<br>resize2fs -f /dev/vg/lv1                                         #更新lv磁盘信息，也就是更新超级块信息  </p>
</blockquote>
<blockquote>
<p>mount …..  </p>
</blockquote>
</blockquote>
</blockquote>
<p>磁盘阵列  </p>
<blockquote>
<p>nas：提供存储服务的一台电脑<br>san：一台存储设备(相当于很大容量的硬盘)，通过光纤和电脑主机直接相连<br>iscsi：IP网络存储，相当于设置了IP地址的san，然后是通过网络设备相连的，  </p>
<blockquote>
<p>连接方式：san群-路由器|—-交换机—-|电脑</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第二十六章</title>
    <url>/posts/3250989039/</url>
    <content><![CDATA[<p>编译核心最重要的目的是为了系统的稳定。  </p>
<p>编译核心需要的软件：核心源码src、核心开发套件kernel-devel、gcc、make工具等  </p>
<p>cd /usr/src/kernels/2.6.11-1.1369_FC4smp-i686<br>make menuconfig<br>对于已经编译过，但是要加新内容，可以使用make oldconfig   #必须要有.config文件  </p>
<p><img src="http://img9.ph.126.net/3b59c79c6H3tDr7JStHc9A==/6597183016355275109.jpg" alt="鸟哥基础第二十六章 - leaf - ------坚持雅操------" title="鸟哥基础第二十六章 - leaf - ------坚持雅操------"></p>
<p> <br>make clean<br>make bzImage         #制作核心<br>make modules         #制作模块  </p>
<p>#安装模块到/lib/modules<br>mv /lib/modules/2.6.* /lib/modules/2.6.*.old<br>make modules_install       </p>
<p>#安装核心<br>cp /usr/src/…./bzImage           /boot/vmlinuz-….<br>cp /usr/src/…./System.map     /boot/System.map…  </p>
<p>修改grub菜单</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第二十四章</title>
    <url>/posts/3411454321/</url>
    <content><![CDATA[<p>概念：  </p>
<blockquote>
<p>X客户端，窗口管理器(gnome、KDE)————-X服务器————用户  </p>
<blockquote>
<p>X服务器：负责驱动硬件：控制显示设备(显卡、显示器)，接受鼠标键盘的输入信息等<br>X客户端：负责产生画面，并告诉X服务器如何显示<br>窗口管理器：增强Xclient的绘制能力，使之更好的显示窗口、按钮、菜单、鼠标等<br>#用户和Xserver打交道—–&gt;Xserver把用户的动作告诉Xclient—–&gt;<br>#—–&gt;Xclient负责告诉Xserver如何显示—–&gt;Xserver调用显卡驱动等把画面显示出来。  </p>
</blockquote>
</blockquote>
<p>startx<br>实际启动X的程序是xinit<br>X客户端：                /usr/X11R6/bin/xterm      #X虚拟终端<br>X客户端脚本：         /etc/X11/xinit/xinitrc<br>X服务器：                /usr/X11R6/bin/X<br>X服务器脚本：         /etc/X11/xinit/xserverrc    #默认不存在<br>X服务器设置文件： /etc/X11/xorg.conf<br>X服务器监听端口：  6000                               #可以有多个端口监听不同的X客户端的显示命令<br>                                                                       #如vnc时有本地的和远程的Xclient，都告诉X服务器如何显示<br>                                                                       #X服务器可启动很多，第二个就是tty8了  </p>
<p>xinit   xterm -geometry +1+1 -n login    -display :0                  –         X           :0<br>         客户端                                        第0号显示界面                       服务器   第0号界面  </p>
<blockquote>
<p>whereis startx  </p>
<blockquote>
<p>startx: /usr/X11R6/bin/startx /usr/bin/X11/startx  </p>
</blockquote>
<p>diff /usr/X11R6/bin/startx /usr/bin/X11/startx  </p>
<blockquote>
<p>无  </p>
</blockquote>
<p>cat startx | egrep -v “^#|^$”  </p>
<blockquote>
<p>userclientrc=$HOME/.xinitrc<br>userserverrc=$HOME/.xserverrc<br>sysclientrc=/etc/X11/xinit/xinitrc<br>sysserverrc=/etc/X11/xinit/xserverrc<br>defaultclient=/usr/X11R6/bin/xterm<br>defaultserver=/usr/X11R6/bin/X<br>defaultclientargs=””<br>defaultserverargs=””<br>clientargs=””<br>serverargs=””<br>…………….  </p>
</blockquote>
<p>/etc/X11/xinit/xinitrc  </p>
<blockquote>
<p>会打开/etc/X11/xinit/Xclients，该文件会调用/etc/sysconfig/desktop，里面设置开启gnome<br>如果没有其他窗口管理器，则会打开/usr/X11R6/bin/twm  </p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>XFS：字体服务器  </p>
<blockquote>
<p>作用：为本机或远程Xclient提供字体。  </p>
</blockquote>
<blockquote>
<p>命令：/usr/X11R6/bin/xfs、/usr/bin/X11/xfs  </p>
</blockquote>
<blockquote>
<p>启动程序：/etc/init.d/xfs<br>设置文件：/etc/X11/fs/config  </p>
<blockquote>
<p># 下面是设置字体存放的位置，xfs会搜索这些目录<br>catalogue = /usr/X11R6/lib/X11/fonts/misc:unscaled,<br>        /usr/X11R6/lib/X11/fonts/75dpi:unscaled,<br>        /usr/X11R6/lib/X11/fonts/100dpi:unscaled,<br>        /usr/X11R6/lib/X11/fonts/Type1,<br>        /usr/share/fonts/default/Type1,<br>        ,<br>        /usr/share/fonts/chinese/TrueType  </p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第二十章</title>
    <url>/posts/537343388/</url>
    <content><![CDATA[<p>RPM命令  </p>
<blockquote>
<p>1、rpm包名称  </p>
<blockquote>
<p>*.i386.rpm：适用于所有x86平台<br>*.noarch.rpm：没有硬件上的限制，一般就是文本文件  </p>
</blockquote>
<p>2、rpm安装目录  </p>
<blockquote>
<p>/etc<br>/usr/bin<br>/usr/lib<br>/usr/share/doc<br>/usr/share/man<br>/var/lib/rpm                                      #为系统安装的rpm包信息记录  </p>
</blockquote>
<p>3、rpm命令  </p>
<blockquote>
<p>安装  </p>
<blockquote>
<p>rpm -i                                       #install<br>其他参数  </p>
<blockquote>
<p>rpm -i *.rpm –force         #强制安装<br>rpm -i *.rpm –test           #只测试能否安装到电脑里  </p>
</blockquote>
</blockquote>
<p>升级  </p>
<blockquote>
<p>rpm -U *.rpm                           #有该软件则升级，没有该软件则安装<br>rpm -F *.rpm                           #有该软件则升级，没有该软件则不安装</p>
</blockquote>
<p>卸载  </p>
<blockquote>
<p>rpm -e                                       #erase  </p>
</blockquote>
<p>重建数据库  </p>
<blockquote>
<p>rpm –rebuilddb                         #重建后的信息都写在/var/lib/rpm里面  </p>
</blockquote>
<p>查询(很重要)                                      #查询都是在/var/lib/rpm里面查询的  </p>
<blockquote>
<p>rpm -q  openldap                         #query              查询有没有安装过这个rpm软件<br>rpm -qa                                        #all                  列出所有系统中安装的rpm软件             <br>rpm -qi openldap                          #information   查询rpm软件的信息<br>rpm -ql openldap(重要)                 #list                列出这个rpm软件安装在哪些地方，方便配置、删除等<br>rpm -qc openldap                         #configure      只列出rpm软件配置文件所在位置<br>rpm -qd openldap                         #document       查看rpm软件的帮助文档<br>rpm -qR openldap                         #required       列出rpm软件相关的依赖文件，如函数库等<br>rpm -qf  /etc/openldap/ldap.conf   #file                列出该文件属于哪个rpm软件里面的<br>rpm -qp[licdf]  wmx.i686.rpm         #package       查看rpm安装包的相关信息  </p>
</blockquote>
<p>rpm验证  </p>
<blockquote>
<p>rpm -V openldap                            #verify            验证该软件里的文件有没有被改动过<br>S.5….T  c /etc/openldap/ldap.conf  </p>
<blockquote>
<p>SM5DLUGT，没有改动过的话用.表示  </p>
<blockquote>
<p>S：size        容量是否改变<br>M：mode     文件类型或权限有没有被改变<br>5：md5     <br>D：device     设备名称有没有被改变过<br>L：link           链接文件的属性有没有被改变<br>U：user        u有没有被改变<br>G：group      g有没有被改变<br>T：mtime      建立时间有没有被改变  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>c：配置文件<br>d：文档<br>l：授权文件<br>r：自述文件  </p>
</blockquote>
</blockquote>
<p>rpm数字签名  </p>
</blockquote>
</blockquote>
<p>SRPM  </p>
<blockquote>
<p>srpm目录  </p>
<blockquote>
<p>/usr/src/redhat/SPEC                 #存放配置文件<br>/usr/src/redhat/SOURCE            #存放源文件<br>/usr/src/redhat/BUILD                #存放编译时的暂存文件，编译时就是再这个目录下进行的<br>/usr/src/redhat/RPMS                #编译好后，会放到这个文件夹中  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
<p>相关命令  </p>
<blockquote>
<p>cd /usr/src/redhat/SPEC<br>rpmbulid -bb *.spec                    #编译成rpm文件<br>rpmbulid -ba *.spec                    #打包成srpm文件  </p>
</blockquote>
</blockquote>
<p>扩展：dpkg  </p>
<blockquote>
<p>dpkg数据库：/var/lib/dpkg<br>安装：dpkg -i<br>卸载：dpkg -r<br>查询：<br>dpkg -s             相当于rpm -qi<br>dpkg -L             相当于rpm -ql<br>dpkg -l              相当于rpm -qa  </p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第二章</title>
    <url>/posts/2435517592/</url>
    <content><![CDATA[<p>学习：<br>命令行是一定要学的，虽然记了又忘，但还是要忘了再记。<br>shell非常重要，shell脚本对服务器管理非常有用，必学阿  </p>
<p>文件安全性，账户管理，软件的安装配置，登录文件的分析，自动化任务计划，编写程序多是管理服务器必备的基础知识<br>虽然很多，但是必须要掌握。  </p>
<p>资料的收集归类、多学多练 是需要的必备条件。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第五章</title>
    <url>/posts/75920360/</url>
    <content><![CDATA[<p>摘录  </p>
<blockquote>
<p>yum更新源  </p>
</blockquote>
<blockquote>
<blockquote>
<p>参看：<a href="http://xili.me/post/2012-06-09/40028678681">fedora17 yum更新源</a>    里面有非常详细的说明<br>如163镜像：  </p>
<blockquote>
<p><a href="http://mirrors.163.com/">http://mirrors.163.com/</a> 点fedora右边的使用帮助，里面有写使用说明<br>：<br>下载fedora-163.repo和fedora-updates-163.repo, 放入/etc/yum.repos.d/<br>运行yum makecache生成缓存  </p>
</blockquote>
</blockquote>
<p>基本命令：  </p>
<blockquote>
<p>date   ：  date +%Y/%m/%d       date + %H：%M<br>cal     ： cal 2005     cal  12 2005<br>bc     <br>sync   ：同步<br>reboot<br>halt<br>poweroff<br>shutdown：这边有几个选项还是比较重要的  </p>
<blockquote>
<p>shutdown -k +10 ‘将要在10分钟后关机’<br>shutdown -r  +10<br>shutdown -h +10<br>-—————————————–以上是分钟<br>shutdown -t  10      #10秒后关机<br>-—————————————–<br>shutdown -c            #取消关机  </p>
</blockquote>
</blockquote>
<p>在线帮助：  </p>
<blockquote>
<p>man date   其中里面的数字含义和每段讲什么多应该了解一下，还有如何查询：/向下  ?向上 <br>info   date  </p>
</blockquote>
<p>忘记root密码  </p>
<blockquote>
<p>仅针对grub0.99  </p>
</blockquote>
<blockquote>
<p>开机时按e，然后选kernel这一行再按e，进入编辑模式。在最后添加single，按确定。然后再按b启动<br>e-&gt;e-&gt;写入single-&gt;回车-&gt;b 启动  </p>
<p><img src="http://img0.ph.126.net/Kka7cUvKQ_dt8Acv3lMr2A==/6597733871679262400.jpg" alt="鸟哥基础第五章 - leaf - ------坚持雅操------" title="鸟哥基础第五章 - leaf - ------坚持雅操------"></p>
<p> 以下为单用户界面  </p>
<p><img src="http://img7.ph.126.net/_0uUlulXM7FnSUM8kbD4ww==/1276489019400637977.jpg" alt="鸟哥基础第五章 - leaf - ------坚持雅操------" title="鸟哥基础第五章 - leaf - ------坚持雅操------"></p>
<p> 然后更改/etc/shadow文件中的root密码  </p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第八章</title>
    <url>/posts/1155753965/</url>
    <content><![CDATA[<p>摘录  </p>
<blockquote>
<p>硬盘的构造：硬盘片、磁头、机械臂  </p>
<blockquote>
<p><img src="http://img2.ph.126.net/q8nWPXT71-HKLbbzEIejMQ==/43910096384630452.jpg" alt="鸟哥基础第八章 - leaf - ------坚持雅操------" title="鸟哥基础第八章 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>   </p>
<blockquote>
<p>上面的盘片就是硬盘片，能当镜子用<br>右下三角形的就是机械臂<br>机械臂头上就是磁头，很小很小，是个芯片<br>左下是磁铁，应该是操作机械臂用的  </p>
</blockquote>
<blockquote>
<p>物理扇区是硬盘片上的最小存储物理量，是低级格式化而成的，包括柱面、磁道、扇区都是低级格式化而成的<br>传统物理扇区是512B的，现在改为4KB了<br>逻辑块是高级格式化后系统操作的最小存储单位，只能是512B的倍数  </p>
</blockquote>
<p>文件系统  </p>
<blockquote>
<p>高级格式化的时候进行文件系统的选择。文件系统就是对磁盘上的数据如何组织的一种方法。<br>就是如何存、如何找(取)的方法。  </p>
</blockquote>
<blockquote>
<p>ext2文件系统会有2个区域。inode表和块区域  </p>
<blockquote>
<p>inode表是解决如何找的问题。<br>块区域就是负责存放  </p>
</blockquote>
<blockquote>
<p>inode表存放：文件的属性、文件内容的位置<br>块区域存放：实际内容<br>这里要说一下目录的块区域：  </p>
<blockquote>
<p>目录(文件夹)的块区域是存放的是该目录内的文件的名称和文件存放位置<br>名称、位置、内容是对应的，这就是目录最重要的功能：关联性  </p>
</blockquote>
</blockquote>
<p>注意一点：linux下也不是不要磁盘整理。linux的磁盘整理就是全部复制出来再格式化再复制回去就可以了。  </p>
</blockquote>
<blockquote>
<p>查看inode和块的信息命令：dumpe2fs  </p>
<blockquote>
<p>这个命令是管理员命令，放在/sbin下<br>sudo dumpe2fs /dev/sda1  </p>
</blockquote>
<p><img src="http://img6.ph.126.net/kd4xp39MuNM4RpVay0p3IA==/1317584366000404106.jpg" alt="鸟哥基础第八章 - leaf - ------坚持雅操------" title="鸟哥基础第八章 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>文件系统的操作命令：  </p>
<blockquote>
<p>df：查看分区的容量等情况  </p>
<blockquote>
<p>df -h：df默认单位为KB，-h后默认已GB为单位<br>df -a：列出所有分区，包括虚拟的/proc分区<br>df -T:就是显示分区的文件系统类型，如ext3、ntfs等等  </p>
</blockquote>
<p>du：列出某个目录的文件清单和所占容量，默认KB  </p>
<blockquote>
<p>du :仅列目录名称和目录的容量<br>du -a：列目录名称和其下的文件及容量<br>du -s：仅列总量  </p>
</blockquote>
</blockquote>
<p>关于连接数  </p>
<blockquote>
<p>mkdir 1<br>ls -ld<br>drwxr-xr-x  3 qqq qqq 4096  9月 13 14:20 .<br>ls -ld 1<br>drwxrwxr-x  2 qqq qqq 4096  9月 13 14:20 1<br>上面的3 和2 就是连接数，空目录连接数为2，多一个目录+1。<br>空目录的连接如下<br>.      当前目录<br>..     上一层目录  </p>
</blockquote>
<blockquote>
</blockquote>
<p>分区、格式化等命令  </p>
<blockquote>
<p>分区：fdisk、cfdisk<br>格式化：mkfs    </p>
<blockquote>
<p>mkfs -t ext3 -L “演示” /dev/sda6  </p>
</blockquote>
</blockquote>
<blockquote>
<p>磁盘检查:fsck<br>改卷标：e2lable /dev/sda6 演示2  </p>
</blockquote>
<p>挂载命令  </p>
<blockquote>
<p>相关文件:/etc/fstab;/etc/mtab<br>/etc/fstab:系统自动挂载的设备<br>/etc/mtab:系统当前挂载的设备  </p>
<p>挂载命令：mount<br>mkdir /mnt/abc<br>mount -t iso9660  /dev/cdrom /mnt/abc ：t tpye 就是告知系统以iso9660系统格式来挂载和管理/dev/cdrom设备  </p>
<p>mount -t exit3 -o rw，sync /dev/sda6 /mnt/abc : o参数很有用，可告知对设备的操作权限等<br>文件系统参数见P162，.P169  </p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第六章</title>
    <url>/posts/1636317233/</url>
    <content><![CDATA[<p>摘录  </p>
<blockquote>
<p>一个是文件属于谁 ：user,group,other<br>一个是那些人对文件有哪些权力:read,write,execute  </p>
<p>ls -l后第一个标识符含义：  </p>
<blockquote>
<p>-：文件<br>d：目录<br>l：链接文件，就是快捷方式<br>b：就是存储设备文件  </p>
<blockquote>
<blockquote>
<p>ls /dev<br>brw-rw—-  1 root disk        1,   0 2012-09-10 07:32 ram0  内存就是属于存储设备，所以标识为b  </p>
</blockquote>
</blockquote>
<p>c：就是输入输出信号的设备文件  </p>
<blockquote>
<p>crw-rw—-+ 1 root audio      14,   4 2012-09-10 07:32 audio 声卡做输入输出的设备，所以标识为c  </p>
</blockquote>
<p>s：就是用于网络数据链接  </p>
<blockquote>
<p>ls /var/run<br>srwxrwxrwx 1 root       root          0 2012-09-10 07:33 vmnat.1499   </p>
</blockquote>
<p>p:管道文件，用于解决多个程序访问一个文件时遵守先来先用原则。  </p>
</blockquote>
</blockquote>
<blockquote>
<p>linux的文件目录，对于新手来说是让人困惑的一个知识点  </p>
</blockquote>
<blockquote>
<p><img src="http://img3.ph.126.net/bRD5b7APHgAFaQ7NmE7WAg==/2555792788550568013.jpg" alt="鸟哥基础第六章 - leaf - ------坚持雅操------" title="鸟哥基础第六章 - leaf - ------坚持雅操------"></p>
<blockquote>
<p> 青蓝色的都是链接文件，不用管他<br>bin、sbin：存放命令文件，就是windows的exe文件<br>lib：存放库文件，相当于windows的dll文件<br>boot：存放内核和启动文件如grub<br>root、home：是存放用户文件的地方<br>dev：存放的是设备文件<br>cdrom、media、mnt：是用设备文件的时候必须要挂载，挂载的地方就是这2个地方<br>opt、usr：是存放程序的地方<br>proc：内存中的文件，反映硬件状况<br>selinux：专门的安全模块<br>srv：不太懂，说是存放某些服务所需要访问的数据目录<br>sys：和proc功能差不多。<br>tmp：临时文件夹<br>var：一直变化的文件，如log文件，每时每刻多在更新。数据库的文件也放在这里，网站源码也放在这里  </p>
</blockquote>
</blockquote>
<blockquote>
<p>vfs：<br>对所有文件系统的支持就是靠这个功能实现的。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十七章</title>
    <url>/posts/3510056611/</url>
    <content><![CDATA[<p>系统本身的服务，由ps、top等查看、管理；提供外部的网络服务，由netstat等查看、管理。<br>二十一章是网络服务，而下面的都是系统服务。  </p>
<p>PID：  </p>
<blockquote>
<p>pid是根据用户的相关uid\gid计算出来的，用户的权限就是pid决定的<br>ppid：父进程  </p>
</blockquote>
<p>作业管理：  </p>
<blockquote>
<p>jobs：          查看后台作业数<br>&amp;：              将任务放到后台执行<br>fg 作业号 ： 将任务从后台拿到前台来执行<br>ctrl+z：        将任务放到后台暂停<br>bg 作业号： 将后台暂停的作业执行起来  </p>
</blockquote>
<blockquote>
<p>kill 删除作业  </p>
<blockquote>
<p>kill -1 作业号：重启作业<br>kill -9 作业号 ：强制删除<br>kill -15 作业号：正常终止  </p>
</blockquote>
</blockquote>
<p>进程管理  </p>
<blockquote>
<p>查看：ps 、top 、pstree  </p>
<blockquote>
<p>ps -l：查看pid详细信息  </p>
<p><img src="http://img5.ph.126.net/rrKT1xL6p3Ho7EDM9aDaBA==/1591178043362340965.jpg" alt="鸟哥基础第十七章 - leaf - ------坚持雅操------" title="鸟哥基础第十七章 - leaf - ------坚持雅操------"></p>
<blockquote>
<p>S是状态：R：run 正在运行  S：sleep 睡眠状态<br>ADDR：    -：表示正在运行<br>WCHAN： -：表示正在运行  </p>
</blockquote>
<p>top -d 2 -p 4121  </p>
<p><img src="http://img2.ph.126.net/pCEoPAZcCc3t6Zsa5DByDg==/2655153455329455852.jpg" alt="鸟哥基础第十七章 - leaf - ------坚持雅操------" title="鸟哥基础第十七章 - leaf - ------坚持雅操------"></p>
<blockquote>
<p>最上面是总的信息，最下面一行是跟踪的进程  </p>
</blockquote>
<blockquote>
<p>top -d   表示多少时间更新一次<br>top -p   专门查看某个进程<br>top -n   设置更新几次<br>top -b   就是把top的内容输出，保存到文件  </p>
</blockquote>
<p>pstree -Aup  </p>
<blockquote>
<p>列出当前进程树，并显示PID和所属的账户  </p>
</blockquote>
</blockquote>
<p>删除：kill    </p>
<blockquote>
<p>同作业管理  </p>
</blockquote>
<p>执行顺序：nice、renice  </p>
<blockquote>
<p>调整优先级用  </p>
<blockquote>
<p>优先级是个不断变化的值：最新优先级=原优先级+nice值<br>root可用范围：负20~正19  </p>
</blockquote>
</blockquote>
<p>进程-文件相互查找：fuser、lsof、pidof  </p>
<blockquote>
<p>fuser 通过目录查正在使用该目录的进程号  </p>
<blockquote>
<p>fuser -k ：删除进程号  </p>
</blockquote>
</blockquote>
<blockquote>
<p>lsof：通过进程找出在用的文件  </p>
<blockquote>
<p>lsof -u ：查找某个用户名所打开的文件<br>lsof +d ：查处某个目录下所有打开的文件  </p>
</blockquote>
<p>pidof：通过进程找出pid  </p>
</blockquote>
</blockquote>
<p>系统资源观察  </p>
<blockquote>
<p>free、uname、uptime、dmesg、sar、netstat、/proc/  </p>
</blockquote>
<blockquote>
<p>uname ：查看系统核心等信息  </p>
<blockquote>
<p>-a：linux版本、CPU类型等信息<br>-r：linux  </p>
</blockquote>
<p>dmesg：查看开机启动的信息  </p>
<p>sar：主要是查看cpu的状态  </p>
<p>netstat：网络状况  </p>
<blockquote>
<p>netstat -a 所有tcp/udp连接状况、套接字状况等<br>netstat -t tcp<br>netstat -u udp<br>netstat -p 列出pid号<br>netstat -n 已端口号来显示<br>netstat -l  列出正在监听的服务  </p>
<p>netstat -tulnp 查看tcp/udp的连接信息  </p>
</blockquote>
<blockquote>
</blockquote>
<p>/proc目录：前面查看系统信息多是在这个目录里面取出来的。</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十三章</title>
    <url>/posts/3196769991/</url>
    <content><![CDATA[<p>shell脚本对于系统管理非常重要，不会写也至少要能读懂  </p>
<p>脚本开头有个特殊的注释：#!  这个是标注脚本所要用的解释器。  </p>
<blockquote>
<p>如#!/bin/bash    #!一定要合用。  </p>
</blockquote>
<p>test、[ ]  </p>
<blockquote>
<p>test的参数非常重要，不然就看不懂脚本<br>0表示成立，非0表示不成立<br>类型检测  </p>
<blockquote>
<p>-e：文件名是否存在，exist<br>-f：是否为文件,file<br>-d：目录<br>-b、-c、-s、-p、-L  </p>
</blockquote>
<p>权限  </p>
<blockquote>
<p>-r、-w、-x<br>-u、-g、-k  suid 、sgid、sbit (就是特殊权限)<br>-s：是否为空白文件  </p>
</blockquote>
<p>比较  </p>
<blockquote>
<p>-nt：newer than<br>-ot：older than<br>-et：equal than  </p>
</blockquote>
<p>数值判断  </p>
<blockquote>
<p>-eq： equal<br>-ne： not equal<br>-gt：  greater than<br>-lt：   less than<br>-ge： greater than or equal<br>-le：  less than or equal  </p>
</blockquote>
<p>字符串判断  </p>
<blockquote>
<p>-z：是否为空字符串<br>-n：是否为非空字符串<br>=<br>!=  </p>
</blockquote>
<p>多条件判断  </p>
<blockquote>
<p>-a：and 2个或多个条件一起满足<br>-o：or    满足一个即可<br>！  </p>
</blockquote>
</blockquote>
<p>shell脚本的默认变量和函数的默认变量  </p>
<blockquote>
<p>shell  </p>
<blockquote>
<p>   sh shell.sh                opt1     opt2     opt3<br>           $0                       $1       $2         $3  </p>
</blockquote>
<p>function  </p>
<blockquote>
<p>function printit(){…}<br>printit    1<br>  $0       $1  </p>
</blockquote>
<p>shell的$1是脚本后面跟的参数，而函数的$1是函数后面的参数，两者不一致  </p>
</blockquote>
<p>判断、循环语句，[]主要用在if里面  </p>
<blockquote>
<p>if […]; then  </p>
<blockquote>
<p>…  </p>
</blockquote>
<p>elif […];then  </p>
<blockquote>
<p>….  </p>
</blockquote>
<p>else  </p>
<blockquote>
<p>….  </p>
</blockquote>
<p>fi<br>-—————————————————–  </p>
</blockquote>
<blockquote>
<p>case $ in  </p>
<blockquote>
<p>“”)  </p>
</blockquote>
<blockquote>
<blockquote>
<p>……  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>;;  </p>
</blockquote>
</blockquote>
<blockquote>
<p>“”)  </p>
<blockquote>
<p>……<br>;;  </p>
</blockquote>
<p>*)  </p>
<blockquote>
<p>…..<br>;;  </p>
</blockquote>
</blockquote>
<p>esac<br>-——————————————————-<br>while […]  成立的话一直运行。<br>do  </p>
<blockquote>
<p>…..  </p>
</blockquote>
<p>done<br>-——————————————————-<br>until [….] 成立的话就不再执行<br>do  </p>
<blockquote>
<p>…..  </p>
</blockquote>
<p>done<br>-——————————————————-<br>for ((   ..;   ..;   …   )) 两个括号是因为shell里面的数值运算多是先定义才能用的，不定义的话就要用(())括起来<br>do                             #for的的条件是清楚的，而while是不清楚的  </p>
<blockquote>
<p>………..  </p>
</blockquote>
<p>done<br>-———————————–<br>for var in  .. .. ..<br>do  </p>
<blockquote>
<p>……..  </p>
</blockquote>
<p>done  </p>
</blockquote>
<p>脚本调试  </p>
<blockquote>
<p>sh -x sh15.sh 可以针对脚本一步一步执行，便于找出问题所在  </p>
<p>sh -n sh15.sh  检查语法错误，没错误的话不会显示任何东西</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十九章</title>
    <url>/posts/1553022911/</url>
    <content><![CDATA[<p>函数库：  </p>
<blockquote>
<p>静态函数库：*.a<br>动态函数库：*.so  </p>
</blockquote>
<blockquote>
<p>存放位置：  </p>
<blockquote>
<p>/lib<br>/usr/lib<br>/lib/modules/`uname -r` #这里是核心函数库  </p>
</blockquote>
<p>相关操作  </p>
<blockquote>
<p>1、ld.so.conf  </p>
<blockquote>
<p>/etc/ld.so.cache<br>/etc/ld.so.conf             #就写着要包含/etc/ld.so.conf.d下的所有.conf文件<br>/etc/ld.so.conf.d          #写着要加载的动态函数库目录，只能加载整个目录  </p>
</blockquote>
</blockquote>
<blockquote>
<p>2、ldconfig  </p>
<blockquote>
<p>ldconfig                       #将/etc/ld.so.conf.d里面包含的函数库目录全部读入内存中  </p>
</blockquote>
<blockquote>
<p>ldconfig -p                   #查看当前读入到内存中的函数库  </p>
</blockquote>
<p>3、ldd  </p>
<blockquote>
<p>ldd /usr/bin/make        #查看该命令所包含的动态函数库<br>ldd -v /usr/bin/make    #详细查看该命令所包含的动态函数库<br>ldd /lib/libc.so.6           #也可以查看与某个函数库相关的函数库  </p>
</blockquote>
<p>4、安装  </p>
<blockquote>
<p>缺什么就装什么  </p>
</blockquote>
</blockquote>
</blockquote>
<p>tarball编译：C语言源码：*.c ———&gt;目标文件*.o————-&gt;执行文件  </p>
<blockquote>
<p>1、configure  建立makefile文件  </p>
<blockquote>
<p>参数：–help  </p>
<blockquote>
<p> –prefix<br><a href="http://hi.baidu.com/issweight/item/f9d1b49da703d0df7a7f01c2">#查看 configure参数</a>  </p>
</blockquote>
</blockquote>
<p>2、make clean  </p>
<blockquote>
<p>清除*.o文件<br>由于make一次后，编译过的*.o在下次make时不会再编译，所以先清除好重新编译  </p>
</blockquote>
<p>3、make  </p>
<blockquote>
<p>gcc语法  </p>
<blockquote>
<p>gcc -c hello.c                   #编译成目标文件：hello.o<br>gcc -o hello  hello.o         #编译成执行文件：hello<br>其他参数：<br>gcc -O -c hello.c              #优化编译<br>gcc -Wall -o hello.c          #产生相信编译过程信息<br>gcc abc.c -lm -L/usr/lib -I/usr/include  </p>
<blockquote>
<p>#-l：加入某个函数库<br>#m：libm.so：加入这个函数库<br>#-L：函数库的地址<br>#-I：源码位置  </p>
</blockquote>
</blockquote>
<p>makefile语法规则  </p>
<blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>make参数  </p>
<blockquote>
<p>CFLAGS=”-Wall” make    #同gcc -Wall  </p>
</blockquote>
</blockquote>
<p>4、make install  </p>
<blockquote>
<p>其实就是把编译好的文件放到相关目录下  </p>
</blockquote>
<p>5、在/etc/man.config中添加man文件地址  </p>
<blockquote>
</blockquote>
<p>6、升级  </p>
<blockquote>
<p>patch -p 0 &lt; patch文件                #p 0 表示去掉几个/，如/home/a/b/c   p4 就是c<br>编译安装  </p>
</blockquote>
<p>7、软件的删除  </p>
<blockquote>
<p>将目录下的相关文件删除即可，看一下install到哪里就到哪里删除  </p>
</blockquote>
</blockquote>
<p>其他命令  </p>
<blockquote>
<p>md5sum ：算md5码</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十二章</title>
    <url>/posts/4086592917/</url>
    <content><![CDATA[<p>正则表达式对于系统管理来说是必备的知识点，可以说是基础中的基础，本章只是很简单的介绍了一下。<br>第十章、第十一章的相关字符处理的内容多放到这边来了  </p>
<p>字符串处理  </p>
<blockquote>
<p>grep、sed     取行<br>cut、  awk     取字段  </p>
<p>cut：  </p>
<blockquote>
<p>echo $PATH | cut -d ‘:’ -f 3,5   以：为分隔符 区第3个和第5个字段<br>echo $PATH | cut -c 3-            从第三个字符开始取后面所有的字符  </p>
</blockquote>
</blockquote>
<blockquote>
<p>awk：  </p>
<blockquote>
<p>cut处理不了多个空格为分隔符的数据，awk则可以处理<br>awk命令格式：awk ‘ ‘  </p>
<p>cat /etc/passwd | awk ‘BEGIN         {FS=”:”}              $3 &lt; 10                   {print $1    “\t”     $3}’<br>                                    条件        以:为分隔符     只要第3个字段&lt;10     屏幕显示 第一个和第三个字段<br>                                                                                                             第一个和第3个字段中间tab隔开  </p>
<blockquote>
<p>其中BEGIN 是为了能从第一行开始处理，不加BEGIN则从第二行开始处理  </p>
</blockquote>
<p>last | awk ‘{print    $1    “\t lines:”              NR                  “\t columes:”                NF    } ‘  </p>
</blockquote>
</blockquote>
<p>                                                       tab+文字    awk在处理第几行                              每一行有多少个字段  </p>
<blockquote>
<p>grep：  </p>
<blockquote>
<p>last | grep -v ‘root’                   选择没有root的行(反向选择)<br>grep -n ‘[^g]oo’ test.txt            选择oo前面不含g的字符的行<br>grep -n ‘^[g]’ test.txt               选择有g开头的行  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/x_kShbSnbeQzw_1wucyf7w==/6597720677539774381.jpg" alt="鸟哥基础第十二章 - leaf - ------坚持雅操------" title="鸟哥基础第十二章 - leaf - ------坚持雅操------"></p>
</blockquote>
<blockquote>
<p> 其中第二个很有意思：除了第一行其他多显示出来了。  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>grep -n ‘g.o’ test.txt            .代表有任意一个字符，必须有1个字符<br>grep -n ‘go*‘ test.txt            *代表有0个或多个重复的前面的字符。如g、go、goo、gooo等等<br>                                           .*就是0个或多个任意字符<br>grep -n ‘go\{2,5\}’ test.txt    代表有2个指5个o的字符<br>-————————<br>egrep -n ‘go+d’ test.txt         扩展grep命令，+代表1个或多个o<br>egrep -n ‘go?d’ test.txt         ?代表没有或者1个o<br>egrep -n ‘gd|good’ test.txt    选有gd或者有good的行  | 是或的意思，不是管道命令  </p>
</blockquote>
<p>sed  </p>
<blockquote>
<p>先看printf命令  </p>
<blockquote>
<p>printf   ‘       %10s\t                 %5i\t                %8.2f \n      ’                        `cat printf.txt`  </p>
</blockquote>
</blockquote>
<blockquote>
<p>                      10个字符+tab      5个整数+tab       8个整数2个小数点+换行        先cat，在printf  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>nl /etc/passwd | sed ‘2a test’           在第3行加入 test为内容的一行。2a就是在第二行下面一行<br>nl /etc/passwd | sed ‘2i test’            在第二行加入test为内容的一行。<br>                                                        2i就是在第二行上面加一行，加入后test就是第二行了  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>nl /etc/passwd | sed ‘2,5c test’         把第二至第五行替换为test  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>ifconfig eth0 | grep ‘inet’|   \<br>sed ‘   s                    /                ^.*addr:           /                             /           g’                 | sed ‘s/Bcast.*$//g’<br>         s表示替换      /格式     要替换的内容      /格式    替换为空    /格式   g表示结束  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>cat /etc/passwd | sed -e ‘4d’ -e ‘6c no six line’ &gt; /tmp/test/passwd  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>-e表示在直接在当前命令行上处理<br>4d 就是删除第4行<br>6c 就是把第6行替换为 no six line  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>字符转换命令  </p>
<blockquote>
<p>unix2dos、dos2unix：文档格式转换。  </p>
<blockquote>
<p>dos2unix -n old new   n表示保留旧文件<br>unix和ms的字符格式是不一样的：  </p>
<blockquote>
<p>unix是$<br>MS是M$  </p>
</blockquote>
<p><img src="http://img8.ph.126.net/J5l7lA5vecS6fgU_7lBymQ==/1299851442467638348.jpg" alt="鸟哥基础第十二章 - leaf - ------坚持雅操------" title="鸟哥基础第十二章 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>tr：替换、删除字符串  </p>
<blockquote>
<p>tr默认是替换命令  </p>
<blockquote>
<p>last | tr ‘[a]‘ ‘[A]‘                      ：a替换为A  </p>
</blockquote>
<p>tr -d 删除字符  </p>
<blockquote>
<p>cat /etc/passwd | tr -d ‘：’      ：删除：  </p>
</blockquote>
</blockquote>
<p>col：tab转为空格  </p>
<blockquote>
<p>col -x  </p>
</blockquote>
<p>expand：tab转为空格，转成多少个空格可以自定义  </p>
<blockquote>
<p>enpand -t 4  </p>
</blockquote>
<p>join:2个文件，如果第一个字段一致，就粘成同一行，且第一个字段放在第一个  </p>
<blockquote>
<p>join -t ‘:’ /etc/passwd /etc/shadow  </p>
<blockquote>
<p>以：作为分隔符，比较第一个字段，<br>如root这一行：<br>2个文件的第一个字段都是root，所以就把2个文件的root这一行合并在一起，<br>并且把第二个文件的root删除，只保留第一个文件的root，并且放在最前面  </p>
<p>/etc/passwd      root:x:0:0:root:/root:/bin/bash<br>/etc/shadow      root:$1$tl3LqaXl$7CJiLfD9fbWtPjDluR1TT0:15594:0:99999:7:::<br>join后                root:x:0:0:root:/root:/bin/bash:$1$tl3LqaXl$7CJiLfD9fbWtPjDluR1TT0:15594:0:99999:7:::  </p>
</blockquote>
</blockquote>
<p>paste：2个文件的内容粘在一起。默认tab分隔  </p>
<blockquote>
<p>paste /etc/passwd /etc/shadow<br>paste后        root:x:0:0:root:/root:/bin/bash root:$1$tl3LqaXl$7CJiLfD9fbWtPjDluR1TT0:15594:0:99999:7:::  </p>
</blockquote>
</blockquote>
<p>其他重要命令  </p>
<blockquote>
<p>排序命令  </p>
<blockquote>
<p>sort：排序  </p>
<blockquote>
<p>cat /etc/passwd | sort -t ‘:’ -k 3     以：为分隔符，以第3个字段进行排序  </p>
</blockquote>
<blockquote>
</blockquote>
<p>uniq：重复的仅显示一次  </p>
<blockquote>
<p>last | cut -d ‘ ‘ -f 1 | sort | uniq       以空格为分隔符，取第一个字段，进行排序，再把重复的删除只留一个  </p>
</blockquote>
<p>wc：就是对文件的字数、行数、 字符数进行统计  </p>
<blockquote>
<p>cat /etc/passwd | wc      显示字数、行数、字符数，其中行数不包括空行  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>split：拆分命令(很有用)  </p>
<blockquote>
<p>split -b 300k /tmp/termcap  /tmp/1/term           拆分  </p>
<blockquote>
<p>显示结果：terma  termb termc  </p>
</blockquote>
<p>cat term* &gt;&gt; termcap                                       合并  </p>
</blockquote>
</blockquote>
<blockquote>
<p><a href="http://baike.baidu.com/view/2285387.htm">xargs</a>：参数代换  </p>
<blockquote>
<p>把前面的结果作为参数给后面的命令用  </p>
</blockquote>
<blockquote>
<blockquote>
<p>cat “$accountfile” | cut -d ‘:’ -f1 | xargs -n 1 useradd -m  </p>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>把前面的用户名，每次一位的取给后面的useradd命令做参数用<br>也就是<br>for ((i=1;i&lt;=n;i++))  </p>
<blockquote>
<p>do  </p>
<blockquote>
<p>useradd -m f1  </p>
</blockquote>
<p>done  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>xargs -n 3 finger  </p>
<blockquote>
<p>-n 就是一次取3个参数，也就是 finger 参数1 参数2 参数3 。然后循环的取直到取完结束。  </p>
</blockquote>
<p>xargs -p finger  </p>
<blockquote>
<p>-p就是询问y 还是n  </p>
</blockquote>
</blockquote>
<p>diff：以行为单位比较  </p>
<blockquote>
<p>diff /etc /tmp/test    </p>
</blockquote>
<p>cmp：以字符为单位比较  </p>
<blockquote>
<p>cmp /etc/passwd /tmp/test  </p>
</blockquote>
<p>patch:打补丁命令  </p>
<p>pr：打印  </p>
<blockquote>
<p>pr /etc/passwd</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十五章</title>
    <url>/posts/1715014373/</url>
    <content><![CDATA[<p>首先是分区  </p>
<blockquote>
<p>su<br>fdisk -l             查看当前所有分区  </p>
<p><img src="http://img3.ph.126.net/QAqxCcW2i4IQYZqSoYDRiQ==/206884107899483713.jpg" alt="鸟哥基础第十五章 - leaf - ------坚持雅操------" title="鸟哥基础第十五章 - leaf - ------坚持雅操------"></p>
<blockquote>
<p> 由于原先没分扩展分区，所以成1、2、3了  </p>
</blockquote>
<p>fdisk /dev/sda<br>m     查看分区命令<br>p      和fdisk -l相同<br>n      新建分区  </p>
<blockquote>
<p>提示建主分区还是扩展分区，我选e，扩展分区，并选了全部剩余容量  </p>
</blockquote>
<p>n      再新建分区，选了全部剩余容量<br>p      再查看的时候就有新分区了  </p>
<blockquote>
<p><img src="http://img8.ph.126.net/meamGjfknSjsQ3s8mh8nmA==/1553178921507229398.jpg" alt="鸟哥基础第十五章 - leaf - ------坚持雅操------" title="鸟哥基础第十五章 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> w      保存  </p>
</blockquote>
<p>格式化分区  </p>
<blockquote>
<p>mkfs.ext3 -L “quota” /dev/sda5  </p>
</blockquote>
<p>挂载和开机自动挂载  </p>
<blockquote>
<p>mkdir -m 777 /media/disk  </p>
</blockquote>
<blockquote>
<p>mount -t ext3 /dev/sda5 /media/disk  </p>
</blockquote>
<blockquote>
<p>cat /etc/mtab能看到记录了：/dev/sda5 /media/disk ext3 rw 0 0  </p>
<p>自动挂载就是把这个记录写在/etc/fstab里面<br>LABEL=/quota            /media/disk             ext3    defaults,usrquota,grpquota 1 2  </p>
<p>然后用remount -a测试一下，以防止写错。  </p>
<blockquote>
<p>如果没测试就重启，万一写错的话就会进入单用户模式，用以下命令重新加载了再修改  </p>
</blockquote>
<blockquote>
<p>mount -n -o remount,rw /  </p>
</blockquote>
<p>重启后可用  </p>
<p><img src="http://img8.ph.126.net/R_vXbDifxixP63I_wFGquQ==/6597137936378477398.jpg" alt="鸟哥基础第十五章 - leaf - ------坚持雅操------" title="鸟哥基础第十五章 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<p>配额相关操作  </p>
<blockquote>
<p>quotacheck -avug   扫描后会建2个文件：aquota.group  aquota.user  </p>
<blockquote>
<p>针对分区进行磁盘配额情况的扫描  </p>
</blockquote>
<blockquote>
<p>-a 扫描有配额参数的文件系统<br>-u 针对用户扫描的情况，建aquota.usr<br>-g 针对用户组扫描的情况，建aquota.group<br>-v  查看<br>-m 强制扫描  </p>
<p><img src="http://img0.ph.126.net/xvsG5iSxAi7BZR5TwqoaBQ==/6597339147006348650.jpg" alt="鸟哥基础第十五章 - leaf - ------坚持雅操------" title="鸟哥基础第十五章 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>quotaon -avug  </p>
<blockquote>
<p>启动配额，关闭是quotaoff -a  </p>
<p><img src="http://img9.ph.126.net/ZW_HFnNNZsLbAhfqPZTkGw==/1347139238555032639.jpg" alt="鸟哥基础第十五章 - leaf - ------坚持雅操------" title="鸟哥基础第十五章 - leaf - ------坚持雅操------"></p>
<p>   </p>
</blockquote>
<p>建账户  </p>
<blockquote>
<p>groupadd qgroup<br>useradd -m -g qgroup quser1<br>useradd -m -g qgroup quser2<br>passwd quser1<br>passwd quser2  </p>
</blockquote>
<p>设置用户配额  </p>
<blockquote>
<p>edquota -u quser1                     是用vi操作的，设置配额<br>edquota -p quser1 quser2         -p：copy   复制权限的意思<br>edquota -t                                  设置宽限时间<br>edquota -g qgroup                      设置用户组配额  </p>
</blockquote>
<p>查看配额情况  </p>
<blockquote>
<p>quota -vu  quser1 quser2<br>quota -vg  qgroup<br>repquota -av<br>quota 和 repquota 都是查看命令，效果差不多  </p>
</blockquote>
<blockquote>
</blockquote>
<p>自动启动设置  </p>
<blockquote>
<p>配额在开机时会随系统启动，所以不用设置<br>但是如何设置可以看一下：  </p>
<blockquote>
<p>vi /etc/rc.d/rc.local<br>/sbin/quotaon -avug  </p>
</blockquote>
</blockquote>
</blockquote>
<p>效果  </p>
<blockquote>
<p>80M-100M之间  </p>
<blockquote>
<p><img src="http://img1.ph.126.net/5iojTtFke-RqVqK9pVq9ig==/6597175319773821701.jpg" alt="鸟哥基础第十五章 - leaf - ------坚持雅操------" title="鸟哥基础第十五章 - leaf - ------坚持雅操------">  </p>
</blockquote>
<p>超出100M  </p>
<blockquote>
<p><img src="http://img6.ph.126.net/a7tx7xN4Kgvgg--UnkC5cw==/2630102182402203346.jpg" alt="鸟哥基础第十五章 - leaf - ------坚持雅操------" title="鸟哥基础第十五章 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>   </p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十八章-grub</title>
    <url>/posts/3244904808/</url>
    <content><![CDATA[<p>硬盘分区表结构：  </p>
<blockquote>
<p>主引导记录MBR  </p>
<blockquote>
<p>bootlader：446B<br>DPT：64B<br>magic number：2B ______ 以上共512B  </p>
</blockquote>
<p>stage1.5：32K  </p>
</blockquote>
<blockquote>
<p>分区1<br>分区2<br>分区3<br>分区4  </p>
</blockquote>
<p>GRUB  </p>
<blockquote>
<p>/boot/grub里面包含  </p>
<blockquote>
<p>引导程序：stage1、stage2</p>
</blockquote>
<blockquote>
<p>启动设备信息：device.map  </p>
</blockquote>
<blockquote>
<p>文件系统：iso9660、ufs、xfs、fat、jfs、e2fs等<br>启动选项：menu.lst 。menu.lst是指向grub.conf的<br>启动选项背景：splash.xpm.gz  </p>
</blockquote>
<p>grub.conf  </p>
<blockquote>
<p>cat grub.conf | egrep -v ‘^#|^$’<br>default=0                                                               #按菜单第一行启动：就是2.6…FC4smp<br>timeout=5                                                              #等待时间：5秒<br>splashimage=(hd0,0)/boot/grub/splash.xpm.gz    #背景图片<br>hiddenmenu                                                          #隐藏菜单<br>title Fedora Core (2.6.11-1.1369_FC4smp)<br>        root (hd0,0)                                                  <br>        kernel /boot/vmlinuz-2.6.11-1.1369_FC4smp ro root=LABEL=/ rhgb quiet<br>        initrd /boot/initrd-2.6.11-1.1369_FC4smp.img<br>title Fedora Core-up (2.6.11-1.1369_FC4)<br>        root (hd0,0)<br>        kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/ rhgb quiet<br>        initrd /boot/initrd-2.6.11-1.1369_FC4.img  </p>
<blockquote>
<p>说明：<br>root (hd0,0)                                                   </p>
<blockquote>
<p>#这里的root表示核心在哪个位置。也就是/boot在哪个位置  </p>
</blockquote>
<p>kernel /boot/vmlinuz-2.6.11-1.1369_FC4smp ro root=LABEL=/ rhgb quiet  </p>
<blockquote>
<p>#这里的root表示/分区在哪个位置。可以用root=/dev/sda1代替  </p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>其他选项;  </p>
<blockquote>
<p>unhide (hd0,1)            #显示/dev/hda2<br>hide (hd0,4)                #隐藏/dev/hda5<br>rootnoverify (hd0,0)    #不检查/dev/hda1<br>chainloader +1            #表示打开/dev/hda2的第一个扇区  </p>
</blockquote>
<blockquote>
<p>makeactive                  #设置为活动分区  </p>
</blockquote>
</blockquote>
<p>grub shell  </p>
<blockquote>
<p>grub 进入grub shell<br>help查看所有命令<br>root (hd0,0)：                 查找含有/boot的分区<br>find /boot/grub/stage1**+[tab]** ：查找是否存在stage1文件<br>setup (hd0) ：                 安装到MBR中<br>setup (hd0,0)：               安装到第一个分区的第一个扇区中</p>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十八章-内核模块</title>
    <url>/posts/1341421006/</url>
    <content><![CDATA[<p>模块：<br>模块就是一些能实现某些功能的目标文件，也就是.o文件。<br>模块只供内核使用。<br>模块不被连接成可执行文件是因为他的连接对象是正在运行的内核<br>模块存放位置/lib/modules<br>模块有很多功能，包括硬件驱动模块、加密模块、压缩算法模块、防火墙模块等  </p>
<blockquote>
<p>arch         #有关CPU等项目<br>crypto      #加密相关<br>drivers     #有关驱动，还有防火墙等<br>fs             #有关文件系统<br>lib            #zlib等一些函数库<br>net           #网络协议等<br>sound      #声卡驱动，音效等  </p>
</blockquote>
<p>模块的操作命令：lsmod、modinfo、insmod、rmmod、modprobe  </p>
<blockquote>
<p>lsmod：  </p>
<blockquote>
<p>nvidia              11259462  24<br>模块                占用空间   有24个其他模块用到nvidia  </p>
</blockquote>
<p>modinfo nvidia  </p>
<blockquote>
<p>查看模块信息  </p>
</blockquote>
<p>modprobe  </p>
<blockquote>
<p>找出所有跟nvidia有关的模块<br>modprobe -lt video | grep nvidia       </p>
<blockquote>
<p>kernel/drivers/video/backlight/mbp_nvidia_bl.ko<br>kernel/drivers/video/nvidia/nvidiafb.ko  </p>
</blockquote>
</blockquote>
<blockquote>
<p>modprobe通过调用modules.dep文件来解决模块依赖性问题<br>查看模块的依赖性。<br>grep nvidia /lib/modules/2.6.32-44-generic/modules.dep  </p>
<blockquote>
<p>kernel/drivers/video/backlight/mbp_nvidia_bl.ko:<br>kernel/drivers/video/nvidia/nvidiafb.ko: kernel/drivers/video/fb_ddc.ko<br>kernel/drivers/i2c/algos/i2c-algo-bit.ko kernel/drivers/video/vgastate.ko<br>updates/dkms/nvidia.ko:<br>#：表示后面的模块要先加载，也就是依赖性<br>我们可以看出加载nvidiafb.ko之前要先加载：  </p>
<blockquote>
<p>kernel/drivers/video/fb_ddc.ko<br>kernel/drivers/i2c/algos/i2c-algo-bit.ko<br>kernel/drivers/video/vgastate.ko  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>模块参数设置：modprobe、/etc/modules.conf  </p>
<blockquote>
<p>/etc/modules.conf  </p>
</blockquote>
<blockquote>
<blockquote>
<p>options cx88_alsa index=-2    #给cx88_alsa模块一个参数：index=-2<br>alias eth0 pcnet32                  #pcnet32一个通用的名字：eth0  </p>
</blockquote>
<p>如 modprobe cx88_alsa index=-3 ，则modules.conf不起作用<br>modprobe设置的参数具有优先权<br>更改/etc/modules.conf文件后，需要使用modules-update来更新。  </p>
</blockquote>
<p>模块依赖性文件：modules.dep  </p>
<blockquote>
<p>modules.dep文件格式  </p>
</blockquote>
<blockquote>
<blockquote>
<p>kernel/drivers/video/nvidia/nvidiafb.ko: kernel/drivers/video/fb_ddc.ko  …  </p>
</blockquote>
</blockquote>
<blockquote>
<p>modules.dep建立命令：depmod  </p>
<blockquote>
<p>depmod -a：更新模块依赖性文件modules.dep<br>depmod -A：扫描出新模块才更新<br>depmod -n：扫描后不写入modules.dep，而是输出到屏幕上<br>depmod -e：显示当前加载的模块中已不能用的  </p>
</blockquote>
</blockquote>
<blockquote>
<p>我们编译好模块后，放入/lib/modules/下面，然后depmod -a，新模块就记录到modules.dep下面了  </p>
</blockquote>
<blockquote>
<p>然后，加载的话：“modprobe 模块”即可。自动加载的话写入/etc/modprobe.conf<br>核心需要哪些模块的话也会主动去加载模块的。</p>
</blockquote>
<p>内核  </p>
<p>内核是linux中唯一能访问硬件资源的软件<br>由于内核用不到很多功能，所以就做成模块，用的时候再调用。  </p>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十八章-启动流程</title>
    <url>/posts/3940253776/</url>
    <content><![CDATA[<p>启动流程补充：  </p>
<blockquote>
<p>电脑开机<br>|<br>CPU，北桥运行<br>|<br>BIOS在flash memory运行<br>|<br>BIOS检测硬件<br>|<br>BIOS读取CMOS中的用户设定<br>|<br>BIOS信息整合成SMBIOS写入内存中<br>|<br>BIOS自解压到内存中<br>|<br>BIOS启动POST程序  </p>
<blockquote>
<p>初始化各种主板芯片组</p>
</blockquote>
<blockquote>
<p>初始化键盘控制器8042.</p>
<p>初始化中断向量,中断服务例程.<br>初始化VGA BIOS控制器<br>显示BIOS的版本和公司名称<br>扫描软驱和各种介质容量<br>读取CMOS的启动顺序配置，并检测启动装置是否正常  </p>
</blockquote>
<p>|<br>BIOS将所有检测到的临时设备信息写入SMBIOS___________^__以上只能通过诊断卡查看错误信息。<br>|<br>BIOS调用INT 19H的2号功能来读出硬盘MBR扇区的内容,将其读入到内存0000:7C00h,并跳转至此处执行<br>|<br>BIOS启动MBR上面的引导程序stage1<br>|<br>引导程序加载stage1.5<br>|<br>引导程序通过stage1.5识别文件系统，并加载文件系统中的stage2<br>|<br>stage2加载grub.conf配置文件<br>|<br>通过配置文件加载kernel和initrd  </p>
</blockquote>
<blockquote>
<p>资料来源：  </p>
</blockquote>
<blockquote>
<p>linux操作系统之奥秘  </p>
</blockquote>
<blockquote>
<p><a href="http://zhumeng8337797.blog.163.com/blog/static/1007689142011828012299/">http://zhumeng8337797.blog.163.com/blog/static/1007689142011828012299/</a><br><a href="http://blog.csdn.net/kendyhj9999/article/details/7293925">http://blog.csdn.net/kendyhj9999/article/details/7293925</a></p>
</blockquote>
<p>启动流程  </p>
<blockquote>
<p>1、开机后，BIOS读取CMOS的信息，然后BIOS里的自检程序对硬件进行自检，自检确定可启动的设备后，<br>      通过刚才从CMOS里获取的第一个启动设备的代号，去读第一个启动设备的MBR<br>2、MBR里面存有引导程序，引导程序里面记录了linux核心（vmlinuz）和initrd.img的存放地址，<br>      引导程序通过这个地址来加载linux核心<br>3、linux核心解压缩到内存中，并通过initrd.img来建立虚拟盘，虚拟盘加载驱动，并读取BIOS的硬件信息交给核心，<br>      linux核心检测所有硬件并从虚拟盘中加载驱动<br>4、linux核心加载完驱动后删除虚拟盘，并执行第一个程序/sbin/init<br>5、init：  </p>
<blockquote>
<p>程序：/sbin/init<br>配置：/etc/inittab  </p>
<blockquote>
<p>cat /etc/inittab | grep -v ^# | grep -v ^$<br>id:5:initdefault:                            #默认是按5来启动，initdefault:表示默认运行等级<br>si::sysinit:/etc/rc.d/rc.sysinit        #启动服务前先根据/etc/rc.d/rc.sysinit进行检测和设置<br>l0:0:wait:/etc/rc.d/rc 0                 #sysinit：表示系统初始化操作项目<br>l1:1:wait:/etc/rc.d/rc 1                 #wait：后面的接的项目必须执行完才能继续<br>l2:2:wait:/etc/rc.d/rc 2<br>l3:3:wait:/etc/rc.d/rc 3<br>l4:4:wait:/etc/rc.d/rc 4<br>l5:5:wait:/etc/rc.d/rc 5                                 #就是按这个启动相关的服务<br>l6:6:wait:/etc/rc.d/rc 6<br>ca::ctrlaltdel:/sbin/shutdown -t3 -r now       #按crtl+alt+del重启<br>pf::powerfail:/sbin/shutdown -f -h +2 “Power Failure; System Shutting Down”<br>#接UPS后的设置<br>pr:12345:powerokwait:/sbin/shutdown -c “Power Restored; Shutdown Cancelled”<br>#接UPS后的设置<br>1:2345:respawn:/sbin/mingetty tty1            #开启6个tty终端，respawn表示不能结束终端，<br>2:2345:respawn:/sbin/mingetty tty2            #结束后会自动开起来<br>3:2345:respawn:/sbin/mingetty tty3<br>4:2345:respawn:/sbin/mingetty tty4<br>5:2345:respawn:/sbin/mingetty tty5<br>6:2345:respawn:/sbin/mingetty tty6<br>x:5:once:/etc/X11/prefdm -nodaemon         #按5启动的话开启X11  </p>
</blockquote>
</blockquote>
<p>5.1、/etc/rc.d/rc.sysinit                                                  #<a href="http://www.byywee.com/page/M0/S611/611349.html">rc.sysinit详解</a></p>
<blockquote>
<p>首先/etc下面也有很多rc目录，但都是链接文件，链接到/etc/rc.d目录里面  </p>
<blockquote>
<p>ls -l /etc | grep rc | awk ‘{print $9 $10 $11}’ | grep -v ^$<br>init.d-&gt;rc.d/init.d<br>rc-&gt;rc.d/rc<br>rc0.d-&gt;rc.d/rc0.d<br>rc1.d-&gt;rc.d/rc1.d<br>rc2.d-&gt;rc.d/rc2.d<br>rc3.d-&gt;rc.d/rc3.d<br>rc4.d-&gt;rc.d/rc4.d<br>rc5.d-&gt;rc.d/rc5.d<br>rc6.d-&gt;rc.d/rc6.d<br>rc.d<br>rc.local-&gt;rc.d/rc.local<br>rc.sysinit-&gt;rc.d/rc.sysinit<br>所以实质上，所有的rc配置文件都放在/etc/rc.d目录下  </p>
</blockquote>
<p>这个配置文件有600多行，服务相关配置文件全部存放在/etc/sysconfig里，任务有：  </p>
<blockquote>
<p>设置网络<br>给HOSTNAME赋值<br>加载/proc<br>加载/usb驱动<br>加载/sys<br>运行/etc/init.d/functions    #<a href="http://kangpeng.sinaapp.com/?p=24">functions文件详解</a><br>检测是否开启SElinux<br>屏幕默认字体设置<br>屏幕上输出：welcome to 什么什么<br>设置日志级别  </p>
</blockquote>
<blockquote>
<p>*给cmdline赋值<br>开始接口设备检测：  </p>
<blockquote>
<p>IDE<br>SCSI<br>network<br>sound<br>其他  </p>
</blockquote>
<p>加载用户自定义模块：/etc/sysconfig/modules/*.modules<br>加载模块：/etc/rc.modules，这个模块fedora4里面没找到<br>挂载/dev/pts<br>配置核心设置值/etc/sysctl.conf<br>设置系统时间<br>设置主机名<br>设置ACPI<br>确定是否进行fsck<br>设置RAID<br>设置LVM2<br>卸载initrd<br>进行quota转换<br>以读写方式挂载根目录：/<br>*清除selinux<br>清除/etc/mtab<br>挂载信息重新写入/etc/mtab  </p>
<blockquote>
<p>/<br>/proc<br>/sys<br>/dev/pts<br>/proc/bus/usb  </p>
</blockquote>
<p>挂载所有其他文件系统，并开启quota<br>??<br>??<br>启动随机数<br>对系统进行重新设置<br>清除临时文件<br>将启动信息写入到/var/log/dmesg<br>告知已离开rc.sysinit  </p>
</blockquote>
</blockquote>
<p>5.2、/etc/rc.d/rc5.d  </p>
<blockquote>
<blockquote>
<p>该目录下的文件全部都是链接文件，全部链接到/etc/init.d下面，而/etc/init.d是链接到/etc/rc.d/init.d的<br>所以，该目录下所有文件都是链接到/etc/rc.d/init.d。该目录就是启动相关服务的作用。<br>/etc/init.d里面是脚本，而/etc/sysconfig/里面是这些脚本的设置文件<br><a href="http://www.cnblogs.com/hbycool/articles/2207103.html">#服务详解</a><br>S：表示开机时启动，数字表示启动顺序  </p>
<blockquote>
<p>ls | sort<br>S03vmware-tools<br>S05kudzu               #硬件检测，硬件不经常更新建议关闭<br>S06cpuspeed        #动态调节cpu速度来节能<br>S08iptables<br>S09isdn                 #isdn用户用的<br>S09pcmcia            #支持笔记本接口<br>S10network<br>S12syslog<br>S13portmap<br>S14nfslock<br>S15mdmonitor        #监测RAID和lvm的信息<br>S18auditd               #kernel的审计<br>S18rpcidmapd        #用于nfs<br>S19rpcgssd            #用于nfs<br>S25bluetooth<br>S25netfs<br>S26apmd<br>S28autofs<br>S30nscd                 #为nis、ldap提供更快的验证<br>S33nifd<br>S34mDNSResponder<br>S44acpid<br>S55cups<br>S55sshd<br>S80sendmail<br>S85gpm                  #支持鼠标<br>S87iiim                    #中文输入法<br>S90crond<br>S90xfs<br>S95anacron<br>S95atd<br>S97messagebus       #IPC进程间通信<br>S97rhnsd                  #通知官方的安全信息以及为系统打补丁<br>S98cups-config-daemon<br>S98haldaemon<br>S99local                    #用户自定义开机启动的程序  </p>
</blockquote>
<p>K表示关机时关闭的服务  </p>
<blockquote>
<p>K01yum<br>K02NetworkManager<br>K02NetworkManagerDispatcher<br>K05saslauthd                     #sasl认证<br>K10psacct                          #监测进程<br>K20nfs<br>K24irda<br>K30spamassassin<br>K35vncserver<br>K35winbind<br>K50netdump<br>K69rpcsvcgssd<br>K73ypbind<br>K74ntpd<br>K85mdmpd<br>K89named<br>K89netplugd                       #检测网络接口<br>K89rdisc<br>K94diskdump  </p>
</blockquote>
</blockquote>
<blockquote>
<p>另外应该还会启动xinetd  </p>
<blockquote>
<p>里面包含验证等服务：  </p>
<blockquote>
<p>cvs<br>eklogin<br>gssftp<br>klogin<br>krb5-telnet<br>kshell<br>rsync  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>5.3、/etc/X11/prefdm            #<a href="http://www.jcwcn.com/article-20906-1.html">详解</a></p>
<blockquote>
<p>设置是否自动登录<br>选择界面  </p>
</blockquote>
<p>6、开启/bin/login  </p>
<p>7、登录后由shell控制主机</p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十六章</title>
    <url>/posts/53952828/</url>
    <content><![CDATA[<p>at  </p>
<blockquote>
<p>命令：               /usr/bin/at  </p>
</blockquote>
<blockquote>
<p>服务atd：          /etc/init.d/atd<br>使用限制：        /etc/at.deny          /etc/at.allow是不存在的可以新建一个，<br>任务存放目录： /var/spool/at         ug都是daemon，是由守护进程inet负责处理的<br>相关命令：  </p>
<blockquote>
<p>at  </p>
<blockquote>
<p>at 9:10  </p>
<blockquote>
<p>/bin/sync  </p>
</blockquote>
<blockquote>
<p>ctrl+d  </p>
</blockquote>
<p>#这个命令，如果时间已经过了，则下一天再运行  </p>
<p>at 9:10 2012-09-25  </p>
<blockquote>
<p>/bin/sync<br>ctrl+d  </p>
</blockquote>
<p>#这个命令，强制在这个时间执行，如果设置的时间已经过了，则任务就没了<br>如现在9：30，如果设置9：00的话，用atq是找不到这个任务的  </p>
</blockquote>
</blockquote>
<blockquote>
<p>atq                              查看有多少任务<br>atrm 任务号                删除任务  </p>
</blockquote>
</blockquote>
<p>crontab  </p>
<blockquote>
<p>命令：                /usr/bin/crontab  </p>
</blockquote>
<blockquote>
<p>服务crond：      /etc/init.d/crond<br>使用限制：        /etc/cron.deny<br>任务存放目录： /var/spool/cron/             用户的任务  </p>
<blockquote>
<blockquote>
<blockquote>
<p>/etc/crontab                  系统的任务，由于不止一个，所以把任务放在目录里，直接执行目录<br>/etc/cron.daily<br>/etc/cron.hourly<br>/etc/cron.monthly<br>/etc/cron.weekly  </p>
</blockquote>
</blockquote>
</blockquote>
<p>任务执行记录： /var/log/cron 下<br>crontab格式：  </p>
<blockquote>
<p>[root@localhost cron]# cat /etc/crontab<br>SHELL=/bin/bash<br>PATH=/sbin:/bin:/usr/sbin:/usr/bin<br>MAILTO=root<br>HOME=/  </p>
<p># run-parts<br>01 * * * * root run-parts /etc/cron.hourly<br>02 4 * * * root run-parts /etc/cron.daily<br>22 4 * * 0 root run-parts /etc/cron.weekly<br>42 4 1 * * root run-parts /etc/cron.monthly<br>#分 时 日 月 周<br>#run-parts：执行目录下所有脚本的意思  </p>
</blockquote>
<p>相关命令  </p>
</blockquote>
<blockquote>
<blockquote>
<p>crontab -e   编辑命令，一个命令一行(增删多可以)<br>crontab -l    查看命令<br>crontab -r   删除所有任务 就相当于把/var/spool/cron/账户 这个文件删除  </p>
</blockquote>
<p>补充：20130923  </p>
<blockquote>
<p>用户的cron配置：保存在/var/spool/cron<br>系统的cron配置：保存在/etc/crontab<br>run-parts：后接文件或文件夹  </p>
</blockquote>
<blockquote>
</blockquote>
<p>列子：<br>touch ~/test.sh<br>chmod 755 test.sh<br>vi test.sh  </p>
<blockquote>
<p>#!/bin/bash<br>/bin/touch  ~/`date +%Y%m%d%H%M`  </p>
</blockquote>
<p>crontab -e  </p>
<blockquote>
<p>*/1 * * * *  /home/leaf/test.sh  </p>
</blockquote>
<p>sudo /etc/init.d/crond restart<br>效果：  </p>
<p><img src="http://img7.ph.126.net/kn8-SzwWOoq-4tQffpOqNA==/6597419411354177057.jpg" alt="鸟哥基础第十六章 - leaf - ------坚持雅操------" title="鸟哥基础第十六章 - leaf - ------坚持雅操------"></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十四章</title>
    <url>/posts/161992610/</url>
    <content><![CDATA[<p>账户的配置文件  </p>
<blockquote>
<p>/etc/passwd  </p>
<blockquote>
<p>cat /etc/passwd | grep ^root  </p>
</blockquote>
<blockquote>
<blockquote>
<p>root:        x:           0:       0:         root:             /root:            /bin/bash<br>用户名    已加密   UID     GID     账户介绍      账户家目录    该账户用的shell  </p>
<blockquote>
<p>x：表示已加密，并且存放在/etc/shadow里面<br>UID、GID的ID号设置：/etc/login.defs<br>/root：是否建家目录：/etc/login.defs  </p>
<blockquote>
<p>  家目录所在位置：/etc/default/useradd   对root无效  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>/etc/shadow  </p>
</blockquote>
<blockquote>
<blockquote>
<p>cat /etc/shadow | grep ^root<br>root:$1$tl3LqaXl$7CJiLfD9fbWtPjDluR1TT0:15594:0:99999:7:7:16594:  </p>
</blockquote>
</blockquote>
<blockquote>
<p>root:      $1……T0:    15594:            0:            99999:                   7:                            7:                 16594:                       空<br>用户名      密码       最后一次     密码不可     密码必须要      密码到期警告           密码的失效时间     账户的失效日期         保留字段<br> 更改密码      更改的天     更改的天数     时间,到期前7天        到期后再过7天      这个是账户的失效<br> 的时间           数                                       提示                         才失效                  时间  </p>
</blockquote>
<blockquote>
<blockquote>
<p>密码的相关限制：/etc/login.defs  </p>
</blockquote>
<p>/etc/group  </p>
<blockquote>
<p>cat /etc/group | grep ^root</p>
</blockquote>
<blockquote>
<blockquote>
<p>root:x:0:root  </p>
</blockquote>
<blockquote>
<p>第4个字段的root表示，那个用户属于root用户组<br>第4个字段可以添加多个账户，但是只享受用户组的权限而不是用户的权限  root,test<br>查看、更改、离开有效用户组的方法  </p>
<blockquote>
<p>查看：groups<br>更改：newgrp  test<br>离开有效用户组：exit  </p>
</blockquote>
<p>切换用户组的条件：  </p>
<blockquote>
<p>用户组必须有密码<br>root必须在这个用户组里面  </p>
</blockquote>
</blockquote>
</blockquote>
<p>/etc/default/useradd  </p>
<blockquote>
<p># useradd defaults file<br>GROUP=100                    #默认的用户组<br>HOME=/home                   #家目录默认存放位置<br>INACTIVE=-1                    #密码失效时间<br>EXPIRE=                           #账户的失效时间<br>SHELL=/bin/bash              #默认的shell<br>SKEL=/etc/skel                 #给新账户预先设置的内容  </p>
</blockquote>
<p>/etc/login.defs  </p>
<blockquote>
<p>cat /etc/login.defs | grep -v ^# | grep -v ^$<br>MAIL_DIR        /var/spool/mail              #邮箱默认存放路径<br>PASS_MAX_DAYS   99999                       #密码必须更改的天数<br>PASS_MIN_DAYS   0                                #密码不可更改的天数<br>PASS_MIN_LEN    5                                 #密码最小长度<br>PASS_WARN_AGE   7                               #密码快到期之前7天警告<br>UID_MIN                   500<br>UID_MAX                 60000<br>GID_MIN                   500<br>GID_MAX                 60000<br>CREATE_HOME     yes                             #默认建家目录  </p>
</blockquote>
<p>/etc/skel/*  </p>
<blockquote>
<p>skel是目录，目录下放的所有文件，都会放到新用户的家目录里面  </p>
</blockquote>
<p>其他  </p>
<blockquote>
<p>/var/log/messages：所有操作记录<br>/var/log/secure：      权限的操作记录</p>
</blockquote>
</blockquote>
<p>账户操作的相关命令  </p>
<blockquote>
<p>useradd：  </p>
<blockquote>
<p>useradd -m name     建账户时建家目录<br>useradd -M name     建账户时不建家目录<br>useradd -d /tmp/home/name  name     建账户时指定家目录  </p>
</blockquote>
<p>usermod:  </p>
<blockquote>
<p>usermod -L name     冻结账户<br>usermod -U name     解锁账户<br>usermod -d /tmp/home/name -m name    新建家目录  </p>
</blockquote>
<p>passwd：  </p>
<blockquote>
<p>passwd -l name         冻结账户<br>passwd -u name        解锁账户<br>passwd -  </p>
</blockquote>
</blockquote>
<blockquote>
<p>userdel：  </p>
<blockquote>
<p>userdel -r name     账户连同该账户的家目录一起删除  </p>
</blockquote>
<p>pwck:  </p>
<blockquote>
<p>检查/etc/passwd /etc/shadow有没有语法错误  </p>
</blockquote>
<p>chpasswd：  </p>
<blockquote>
<p>echo “name:password” | chpasswd -m <br>以前面的格式读入，并以md5码加密明文密码，并存入/etc/shadow中  </p>
</blockquote>
<p>chage：  </p>
<blockquote>
<p>修改账户密码的时效  </p>
</blockquote>
<p>groupadd、groupmod、 groupdel、gpasswd、groups、newgrp<br>id：  </p>
<blockquote>
<p>id name ：查看uid、gid等信息  </p>
</blockquote>
<p>su、sudo：  </p>
<blockquote>
<p>su：要输入root密码<br>sudo：输入本账户密码即可  </p>
</blockquote>
<blockquote>
<p>在/etc/group里面加入账户，这个账户只有相关用户组的权限<br>而在/etc/sudoers里面加入账户后，能获取相应的权限，如能运行/sbin里面的命令等  </p>
</blockquote>
<p>/etc/sudoers  </p>
<blockquote>
<p># User privilege specification<br>root    ALL=(ALL) ALL              #拥有所有的权限  </p>
<p># Uncomment to allow people in group wheel to run all commands<br># %wheel        ALL=(ALL)       ALL      #用户组拥有所有的权限   </p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>#%wheel 表示用户组  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p># Same thing without a password<br># %wheel        ALL=(ALL)       NOPASSWD: ALL    #不用输入密码直接拥有所有的权限<br># Samples<br># %users  ALL=/sbin/mount /cdrom,/sbin/umount /cdrom<br># %users  localhost=/sbin/shutdown -h now  </p>
</blockquote>
<p>用户对话等命令  </p>
<blockquote>
<p>mesg、wall、talk、wrtie、mail  </p>
</blockquote>
</blockquote>
<p>pam模块  </p>
<blockquote>
<p>pam模块都存放在/lib/security目录中  </p>
<p><img src="http://img2.ph.126.net/KMpQogP6ns8pGlA0Z_aLfg==/6597866912586278182.jpg" alt="鸟哥基础第十四章 - leaf - ------坚持雅操------" title="鸟哥基础第十四章 - leaf - ------坚持雅操------"></p>
<p> <br>pam配置都存放在/etc/pam.d目录中  </p>
<p><img src="http://img1.ph.126.net/G9UPNWgFFCB0Ocxg1jxwEA==/6597841623818838691.jpg" alt="鸟哥基础第十四章 - leaf - ------坚持雅操------" title="鸟哥基础第十四章 - leaf - ------坚持雅操------"></p>
<p> <br>pam模块的相关说明都存放在/usr/share/doc/pam*的五个目录中  </p>
</blockquote>
<blockquote>
<p><img src="http://img7.ph.126.net/k5rxzcfeVhNZK7sjsSCdtQ==/6597180817331929947.jpg" alt="鸟哥基础第十四章 - leaf - ------坚持雅操------" title="鸟哥基础第十四章 - leaf - ------坚持雅操------"></p>
<p> <br>pam的验证类别和验证步骤过后的操作  </p>
<blockquote>
<p>验证类别：  </p>
<blockquote>
<p>auth：          用于用户密码验证<br>account：    用于用户使用权限的验证<br>session：    主要是记录相关操作  </p>
</blockquote>
<blockquote>
<p>password：主要是提供修改密码的验证  </p>
</blockquote>
<p>验证后的操作：  </p>
<blockquote>
<p>required：验证成不成功，后面的模块照样运行<br>requisite：验证不成功，   后面的模块就不再运行<br>sufficient：验证成功，      后面的模块就不再运行<br>optional：主要是记录信息用  </p>
</blockquote>
<p>/etc/pam.d/login的配置  </p>
<blockquote>
<p><img src="http://img3.ph.126.net/THMhANCWhqdyBpWKdG6SPQ==/6597925186702550563.jpg" alt="鸟哥基础第十四章 - leaf - ------坚持雅操------" title="鸟哥基础第十四章 - leaf - ------坚持雅操------"></p>
</blockquote>
<blockquote>
<p> <br>pam_securetty.so：用于预防不安全的登录  </p>
<blockquote>
<p>该模块会读取：/etc/securetty   </p>
</blockquote>
<blockquote>
<blockquote>
<p>里面设置的终端都是安全的，不在里面的都算不安全的<br>里面设置的终端能用root登录，里面没有的终端则不能用root登录  </p>
</blockquote>
</blockquote>
<p>pam_nologin.so：也是控制用户的登录，但对root没有效果  </p>
<p>其他pam相关的设置文件放在/etc/security/目录下</p>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥基础第十章、第十一章</title>
    <url>/posts/1577105434/</url>
    <content><![CDATA[<p>第十章  </p>
<blockquote>
<p>vi编辑器非常重要，分为3种模式  </p>
<blockquote>
<p>一般模式：可以查询、增删、替换字符等<br>编辑模式：增删、替换字符<br>命令模式：主要是参数设置、内容保存等命令<br>vi的操作记录多记录在～/.viminfo文件中  </p>
<p>如果觉得太复杂，可以使用nano文本编辑器，很好用。<br>当然vi只针对命令行环境的时候。如果是图形环境，编辑的软件多了。  </p>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>第十一章  </p>
<blockquote>
<p>bash shell 是通向系统管理的基础。是重点中的重点。<br>本章主要讲变量和shell环境设置，字符操作的相关命令放在第十二章一起讲  </p>
</blockquote>
<blockquote>
<p>摘录<br>系统的shell分很多种，最重要的2种：/bin/bash  和 /sbin/nologin      </p>
<blockquote>
<p>linux支持的shell文件：/etc/shells<br>ubuntu好像用/bin/false来代替/sbin/nologin的用途的  </p>
</blockquote>
<p>变量  </p>
<blockquote>
<p>变量书写规则：  </p>
<blockquote>
<p>变量赋值用=号，=号两边不能用空格：m=123<br>累加变量的内容：                                “$PATH”:/HOME<br>取消变量用 unset：                              unset m  </p>
</blockquote>
<blockquote>
<p>export用于不同程序之间传递变量值，就是设置为环境变量  </p>
<p>“”表示保持变量的内容<br>‘’表示把内容变为字符<br>··表示先执行··里面的命令再执行··外面的命令  </p>
<p>大写变量为系统默认变量，小写变量为自定义变量。系统默认变量一般是${}表示<br>有些字符比较特殊，需要转义：前面加上\  </p>
<blockquote>
</blockquote>
</blockquote>
<p>变量的相关操作  </p>
<blockquote>
<p>查看环境变量  </p>
<blockquote>
<p>env 、set、export  </p>
</blockquote>
<p>设置环境变量  </p>
<blockquote>
<p>export 变量<br>declare -x 自定义环境变量  </p>
</blockquote>
<p>定义变量类型  </p>
<blockquote>
<p>declare -a 数组<br>declare -i  整数<br>declare -x 自定义环境变量<br>declare -r 变量设置为只读  </p>
</blockquote>
<p>变量赋值：  </p>
<blockquote>
<p>普通变量赋值：  </p>
<blockquote>
<p>m=123  </p>
</blockquote>
<p>数组变量赋值  </p>
<blockquote>
<p>m[1]=1<br>m[2]=2<br>m[3]=3  </p>
</blockquote>
<p>还有键盘赋值  </p>
</blockquote>
<blockquote>
<blockquote>
<p> read -p “please keyin your name:” -t 30 name      </p>
</blockquote>
<blockquote>
<p>name就是变量名，read就是获取键盘输入，然后把内容给name  </p>
</blockquote>
</blockquote>
<p>查看变量  </p>
<blockquote>
<p>echo $变量名      echo $PATH  </p>
</blockquote>
<p>取消变量  </p>
<blockquote>
<p>unset m  </p>
</blockquote>
</blockquote>
</blockquote>
<p>shell环境的相关设置文件  </p>
<blockquote>
<p>用户登陆时，bash shell会依次执行：  </p>
<blockquote>
<p>/etc/profile—&gt;.bash_profile—&gt;.bash_profile—-&gt;.bash_login—-&gt;.profile，最后执行.bashrc  </p>
</blockquote>
<p>/etc/profile  </p>
<blockquote>
<p>设置PATH、mail路径、history记录条目等  </p>
</blockquote>
<p>/etc/bashrc  </p>
<blockquote>
<p>每个用户初始设置是这个文件进行设置的，然后才是用户各自的.bashrc  </p>
</blockquote>
<p>/etc/profiled/*  </p>
<blockquote>
<p>设置bash的规范  </p>
</blockquote>
<p>~/.bashrc<br>前面的设置多可以在这个文件里面设置，而且生效<br>默认：  </p>
<p><img src="http://img0.ph.126.net/yZAOR85lL2E0_9-BPqRTWA==/6597428207446972800.jpg" alt="鸟哥基础第十章、第十一章 - leaf - ------坚持雅操------" title="鸟哥基础第十章、第十一章 - leaf - ------坚持雅操------"></p>
<p> 在后面加就好了<br>如：umask 022<br>特别说明一点：我用的fedora4里面有些命令大不了，这些命令都是/sbin里面的<br>查PATH发现/sbin不包含在PATH里面，添加一下即可<br>export PATH=$PATH:/sbin  </p>
</blockquote>
<p>-————————————————————————————————-  </p>
<blockquote>
<p>语言环境设置：<br>/etc/sysconfig/i18n  </p>
<blockquote>
<p><img src="http://img6.ph.126.net/2UIz5GESTs2dUZv9y85Hzg==/1016687615896710596.jpg" alt="鸟哥基础第十章、第十一章 - leaf - ------坚持雅操------" title="鸟哥基础第十章、第十一章 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>/etc/man.config  </p>
<blockquote>
<p>设置man文档路径 <br>如：MANPATH /usr/man  </p>
</blockquote>
<p>.inputrc  </p>
<blockquote>
<p>用来定义按键的功能，是readline()函数库的配置文件  </p>
</blockquote>
<p>登录消息提示<br>/etc/issue：登录前显示的内容  </p>
<blockquote>
<p><img src="http://img4.ph.126.net/t5-ysPRyQyir9dP-0ISBNQ==/6597224797797031104.jpg" alt="鸟哥基础第十章、第十一章 - leaf - ------坚持雅操------" title="鸟哥基础第十章、第十一章 - leaf - ------坚持雅操------"></p>
</blockquote>
<p> /etc/motd：登录后显示的内容  </p>
<blockquote>
<p><img src="http://img6.ph.126.net/4DS-qq-Qm9JSg7EsGDfzbA==/996421417573634226.jpg" alt="鸟哥基础第十章、第十一章 - leaf - ------坚持雅操------" title="鸟哥基础第十章、第十一章 - leaf - ------坚持雅操------"></p>
</blockquote>
<p>   </p>
</blockquote>
</blockquote>
<blockquote>
<p>-————————————————————————————————-  </p>
</blockquote>
<blockquote>
<blockquote>
</blockquote>
<p>其他  </p>
<blockquote>
<p>type：查看命令的类型：内部、外部命令<br>ulimit：给程序或用户配额<br>alias：设置别名<br>unalias：取消别名<br>history：查看历史命令  </p>
<blockquote>
<p>history  3    列出最近3条命令<br>history  -w  把当前历史命令写入~/.bash_history中<br>!5               执行history中的第几条命令<br>!!                执行上一条命令  </p>
</blockquote>
</blockquote>
<blockquote>
<p>数据流重导向  </p>
</blockquote>
<blockquote>
<blockquote>
<p>&gt;      覆盖<br>&gt;&gt;    累加到后面<br>&lt;      文件输入<br>&lt;&lt;     结束的输入字符<br>2&gt;     错误输出，覆盖<br>2&gt;&gt;   错误输出，累加<br>例子：  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>cat &gt; catfile &lt; somefile     </p>
</blockquote>
<blockquote>
<blockquote>
<p>把somefile导入进来<br>用cat读取somefile文件<br>然后导出到catfile文件<br>&lt; 比 &gt; 优先处理  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>cat &gt; catfile &lt;&lt; eof  </p>
<blockquote>
<p>输eof的时候结束导出  </p>
</blockquote>
</blockquote>
</blockquote>
<p>；、&amp;&amp;、||、|  </p>
<blockquote>
<p>；表示一个程序一个程序执行<br>&amp;&amp;：表示前面的命令没有错误后再接下去执行<br>||：表示前面的命令错误后执行后面的程序  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>|：表示对前面的处理结果再处理。  </p>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥服务器第一章</title>
    <url>/posts/1004538176/</url>
    <content><![CDATA[<p>架站的能力：  </p>
<blockquote>
<p>网络基础、硬件基础<br>架站<br>调试、除错<br>安全、备份  </p>
</blockquote>
<p>摘录：<br>1、磁盘配额quota  </p>
<blockquote>
<p>配额针对整个分区，所以需要有不同的2种服务配额，就需要划分2个分区  </p>
</blockquote>
<p>2、samba  </p>
<blockquote>
<p>samba的原理是利用 netbios over tcp/ip  。netbios是无法夸网段的。  </p>
</blockquote>
<p>3、tarball安装  </p>
<blockquote>
<p>用tarball装软件，要升级的话需要先删除旧版本再安装  </p>
</blockquote>
<p>4、启动相关  </p>
<blockquote>
<p>stand alone服务的设置文件放在/etc/init.d/里面<br>super daemon服务的设置文件放在/etc/xinetd.d里面  </p>
</blockquote>
<p>5、安全性  </p>
<blockquote>
<p>/etc/login.defa设置密码规则<br>/etc/security/limits.conf设置用户权限<br>pam模块提供额外的密码验证<br>还有/etc/hosts.allow 、防火墙设置、打补丁等设置安全性  </p>
</blockquote>
<p>6、查看日志文件和数据备份  </p>
<blockquote>
</blockquote>
<blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥服务器第二章</title>
    <url>/posts/200730008/</url>
    <content><![CDATA[<p>摘录：  </p>
<blockquote>
<p>帧和MTU  </p>
<blockquote>
<p>以太网帧最大容量是1518B，所以网络层要设置MTU，防止数据包过大<br>jumbo frame:用于千兆以太网，容量9000B-64000B，还没有获IEEE认可  </p>
</blockquote>
<p>lo网段  </p>
<blockquote>
<p>用于测试系统内部循环的网段，即使没网卡也一样存在<br>127.0.0.1  </p>
</blockquote>
<p>观察主机的路由信息：route -n  </p>
<blockquote>
<p><img src="http://img4.ph.126.net/-pTyYO0ZJbt0u3eJ2duS4w==/2563955562875174134.jpg" alt="鸟哥服务器第二章 - leaf - ------坚持雅操------" title="鸟哥服务器第二章 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<blockquote>
<p>U：代表该路由可用<br>G：代表该网段通过路由转发<br>子网掩码：0.0.0.0 就是默认路由的意思  </p>
<blockquote>
<p>0.0.0.0 192.168.3.1 0.0.0.0 就是所有地址都通过192.168.3.1转发<br>相当于 (config)#ip route 0.0.0.0 0.0.0.0 192.168.3.1  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>TCP表头代码位（code）说明：控制标志码  </p>
<blockquote>
<p>SYN=1 请求建立连接  </p>
<blockquote>
<p>而序列号（sequence Number）：为数据包的序号  </p>
</blockquote>
<p>ACK=1 为响应数据包  </p>
<blockquote>
<p>而确认应答号（acknowledge Number）：为确认应答的序号  </p>
</blockquote>
<p>FIN=1 为请求中断连接<br>RST=1为强制断线，且发送端已断线<br>其他<br>URG=1 为紧急数据包，要紧急处理<br>PSH=1 为立即发送缓冲区的数据包，而不要等到满了再发  </p>
<p>三次握手：  </p>
<blockquote>
<p><img src="http://img5.ph.126.net/kXLgIx0zEkCe_efyx1pQfg==/6597952674493174955.jpg" alt="鸟哥服务器第二章 - leaf - ------坚持雅操------" title="鸟哥服务器第二章 - leaf - ------坚持雅操------"></p>
<p> </p>
</blockquote>
<p>发送序号就是sequence Number，对应TCP表头第二排<br>确认序号就是acknowledge Number，对应TCP表头第3排<br>标志位就是code，对应TCP表头第四行的代码位  </p>
</blockquote>
</blockquote>
<blockquote>
<p>防火墙的原理就是分析表头，再进行规则设置  </p>
</blockquote>
<blockquote>
<p>DNS设置文件：/etc/resolv.conf  直接写DNS就可以了，如60.191.134.196  </p>
</blockquote>
<p>相关网站  </p>
<blockquote>
<p>协议网站 http：//<a href="http://www.rfc-editor.org/">www.rfc-editor.org</a><br>酷学园 <a href="http://phorum.study-area.org/">http://phorum.study-area.org</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥服务器第四章</title>
    <url>/posts/4056244143/</url>
    <content><![CDATA[<p>第三章没什么内容，略</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>鸟哥的linux私房菜-基础学习篇(第二版)</title>
    <url>/posts/2598844820/</url>
    <content><![CDATA[<p>2011-05-11更新</p>
<p>要深入学习及加强的有：</p>
<p>       1、vim多练习</p>
<p>       2、sed、awk、grep、cut、sort、uniq深入学习</p>
<p>       3、shell脚本深入学习</p>
<p>       4、PAM模块学习</p>
<p>       5、quota实践(和ldap、samba一起)</p>
<p>       6、at、crontab实践</p>
<p>       7、grub2学习</p>
<p>       8、make学习</p>
<p>       9、日志管理、系统备份实践</p>
<p>     10、logrotate实践</p>
<p>     11、xorg.conf 学习</p>
<p>     12、内核编译、驱动模块管理等联系</p>
<p>第一部分</p>
<p>一、<br>    GNU、GPL、FSF、LSB、LHS、VFS(六)<br>二、<br>    多学、多练、多总结、多领悟</p>
<p>三、</p>
<p>    分区</p>
<p>    硬件设备号：/dev/lp0 /dev/st0 /dev/ht0</p>
<p>四、</p>
<p>    系统安装：</p>
<p>        utc：夏令时，没有用不要设置</p>
<p>        selinux：没什么用，关掉好了</p>
<p>    多重启动：</p>
<p>        dd if=dev/sda? of=/home/mbr bs=512 count=1 #?为linux安装的盘符</p>
<p>        然后复制到windows盘，安装windows并更改boot.ini</p>
<p>五、</p>
<p>     1、date +% 、cal 、bc scale </p>
<p>     2、startx、exit、快捷键<br>     3、man info<br>     4、shutdown -t -h -r -c -k  -t 秒数  其他 +分钟</p>
<p>第二部分</p>
<p>六、</p>
<p>     1、u、g、o、a  421 <br>     2、chown、chgrp、chmod -R                                                                    注意 -R<br>     3、- d l b c s p<br>     4、LHS<br>七、</p>
<p>    1、cd - ~ . .. 、 ls -a -l -i -d <br>         mkdir -m -p  rmdir -p<br>    2、cp mv rm   :cp -a -p -d -r -f -i -l -s -u                                                   注意 -u -r<br>    3、cat tac nl more less head tail od<br>    4、umask chattr lsattr  文件的安全属性 特殊权限<br>          chattr +i +a</p>
<p>          –t–t–s<br>    5、which whereis locate find<br>         whereis  -m -b -s<br>         find -time -user  -name -perm -exec                                                     要掌握<br>八、<br>     df、du、cfdisk、fsck、mount、mkfs、ln</p>
<p>     /etc/fstab  /etc/mtab</p>
<p>    1、扇区、物理存取原理<br>    2、df du </p>
<p>         df：系统目录 du：当前目录<br>          fdisk mke2fs mkswap fsck<br>    3、ln -s <br>    4、mount  -t -o -L      -o rw,sync,auto,dev,suid,exec,user,defaults,remount  要掌握<br>         将设备文件挂载到目录<br>         ：e2lable 设备名 lable<br>         dumpe2fs<br>    5、/etc/fstab</p>
<p>    6、mkswap、swapon、swapoff <br>九、</p>
<p>     tar、dd、cpio<br>    1、tar -z -j -c -x -v -f -p -P –exclude  -N<br>    2、dd if=dev/sda? of=/home/mbr bs=512 count=1 #?为linux安装的盘符<br>    3、cpio -ocvB -icduv<br> <br>第三部分  <br>十、</p>
<p>     编辑模式：0、$、g、G、x、d、y、p、c、u、</p>
<p>     命令模式：w、q、e！、：w、ZZ、：set nu <br>十一、</p>
<p>     cut、grep、sort、uniq、tee、split、xargs、alias、history、&amp;&amp; ||</p>
<p>     配置文件：bashrc、profile、inputrc、locale</p>
<p>十二、<br>     sed、awk、grep、printf、字符<br>十三、<br>   1、if elif else fi<br>   2、case $n in “”) *) esac<br>   3、while [] do done<br>      unil [] do done<br>   4、for n in     do done  </p>
<p>第四部分<br>十四、</p>
<p>   配置文件：passwd、shadow、securetty、nologin、sudoers</p>
<p>   groups、newgrp、useradd、passwd、userdel、who、mail</p>
<p>十五、<br>   quota quotacheck edquota quotaon quotaoff </p>
<p>   1、useradd、passwd</p>
<p>   2、vi /etc/fstab、mount -o remount </p>
<p>   3、quotacheck -avug</p>
<p>   4、quotaon -avug</p>
<p>   5、edquota -u  edquota -p  edquota -t </p>
<p>   6、/etc/rc.d/rc.local</p>
<p>   #   repquota -a </p>
<p>十六、</p>
<p>   at.deny、cron.deny、crontab</p>
<p>   at、atq、atrm<br>   crontab -l <br>十七、</p>
<p>   &amp;、jobs、fg % 、bg % 、kill</p>
<p>   ps aux、top、pstree -Aup</p>
<p>   free、rname -r -a 、uptime、dmesg、</p>
<p>   fuser、lsof、pidof        #不熟</p>
<p>第五部分<br>十八、</p>
<p>    启动过程、inittab、rc.sysinit、sysconfig、rc.local、</p>
<p>    lsmod、modinfo、modprobe  -r、modprobe.conf </p>
<p>    grub设置</p>
<p>十九、<br>    configure   make   make clean   make install</p>
<p>    ldconfig、ldd  <br>二十、<br>   rpm -ivh<br>二一、<br>    xinetd.conf、hosts.deny</p>
<p>    独立守护程序<br>二二、</p>
<p>    syslog.conf<br>    logrotate：</p>
<p>        monthly          #每个月轮替</p>
<p>        size=10M       #大于10M自动轮替</p>
<p>        rotate 5          #保存5份</p>
<p>        compress       #压缩</p>
<p>        sharedscripts  #？</p>
<p>        prerotate        #轮替前预处理</p>
<p>             /usr/bin/chattr -a /var/log/admin.log</p>
<p>        endscript</p>
<p>        sharedscripts</p>
<p>        postrotate      #轮替处理</p>
<p>            /usr/bin/killall -HUP syslogd</p>
<p>            /usr/bin/chattr +a /var/log/admin.log</p>
<p>        endscript</p>
<p>二三、<br>        多种备份手段<br>二四、<br>        xorg.conf、inittab</p>
<p>          module         #加载模块</p>
<p>          inputdevice   #键盘鼠标设置</p>
<p>          files              #显示字体</p>
<p>          monitor         #水平、垂直刷新频率</p>
<p>          device           #显卡驱动</p>
<p>          screen          #屏幕分辨率</p>
<p>          serverlayout  #要用的设置</p>
<p>二五、<br>       lspci、iostat</p>
<p>       LVM<br>二六、<br>   核心编译</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>（转）Debian/Ubuntu常见安装软件错误解决方案</title>
    <url>/posts/2441145418/</url>
    <content><![CDATA[<p>1、错误： Can’t find X includes. Please check your installation and add the correct paths!<br>原因：没有X的包含文件<br>解决：安装xlibs-dev即可  </p>
<p>2、错误： Qt (&gt;= Qt 3.0) (headers and libraries) not found. Please check your installation!<br>原因：查找提供qt的lib&amp;&amp;headers的软件包,并安装之<br>解决：apt-get install libqt3-headers libqt3-mt-dev  </p>
<p>3、错误：in the prefix, you’ve chosen, are no KDE headers installed. This will fail.<br>So, check this please and use another prefix!<br>原因：install a KDE application in a Gnome environment。<br>解决：which basically means its going to want to install a lot of KDE specific packages to work. This ‘configure:error’<br>is due to it expecting you to be running KDE and again refers to some ‘headers’.<br>sudo apt-get update<br>sudo apt-get install kdelibs4-dev kdelibs4c2a  </p>
<p>4、错误： C compiler cannot create executables<br>原因：<br>解决：sudo apt-get gcc libc6-dev  </p>
<p>5、错误：checking for C compiler default output… configure: error: C compiler cannot create executables<br>原因：<br>解决：sudo apt-get install libc6-dev  </p>
<p>6、错误：configure: error: C++ preprocessor “/lib/cpp” fails sanity check<br>原因：gcc的组件没装全<br>解决：apt-get install build-essential  </p>
<p>7、错误：./admin/cvs.sh: 585: autoconf: not found<br>原因：<br>解决：apt-get install autoconf  </p>
<p>8、错误： *** GTK &gt;= 2.4.0 not installed! ***<br>原因：没装GTK<br>解决：apt-get build-dep gedit  </p>
<p>9、错误：heching for gtk-config… no<br>checking for GTK - version = 1.2.0… no<br>*** The gtk-config script installed by GTK could not be found<br>*** If GTK was installed in PREFIX, make sure PREFIX/bin is in<br>*** your path, or set the GTK_CONFIG enviroment variable to the<br>*** full path to gtk-config.<br>configure: error: Cannot find GTK: Is gtk-config in path?<br>原因：<br>解决：sudo apt-get install libgtk1.2-dev  </p>
<p>10、问题：eclipse中encoding不支持中文<br>解决：编辑/var/lib/locales/supported.d/local，加一行zh_CN.GBK GBK，执行sudo locale-gen  </p>
<p>11、问题：eva不弹出输入法<br>解决：sudo apt-get install scim-qtimm  </p>
<p>12、问题：No package ‘gtk+-2.0’ found<br>No package ‘gtksourceview-1.0’ found<br>No package ‘libgnomeui-2.0’ found<br>No package ‘libglade-2.0’ found<br>No package ‘libgnomeprintui-2.2’ found<br>解决：sudo apt-get install libgtk2.0-dev libgtksourceview-dev libgnomeui-dev libglade2-dev libgnomeprint2.2-dev  </p>
<p>13、问题：No package ‘libpanelapplet-2.0’ found<br>解决：sudo apt-get install libpanelappletmm-2.6-dev  </p>
<p>错误：configure: error: C++ preprocessor “/lib/cpp” fails sanity check  </p>
<p>原因：gcc的组件没装全<br>解决：apt-get install build-essential  </p>
<p>问题：eclipse中encoding不支持中文<br>解决：编辑/var/lib/locales/supported.d/local，加一行zh_CN.GBK GBK，执行sudo locale-gen  </p>
<p>错误：gnome.h: No such file or directory  </p>
<p>问题：No package ‘gtk+-2.0’ found<br>No package ‘gtksourceview-1.0’ found<br>No package ‘libgnomeui-2.0’ found<br>No package ‘libglade-2.0’ found<br>No package ‘libgnomeprintui-2.2’ found<br>解决：sudo apt-get install libgtk2.0-dev libgtksourceview-dev libgnomeui-dev libglade2-dev libgnomeprint2.2-dev  </p>
<p>问题：No package ‘libpanelapplet-2.0’ found<br>解决：sudo apt-get install libpanelappletmm-2.6-dev  </p>
<p>还有摘录：  </p>
<p>编译<br>./configure （建议使用 –help 查询需要用到的参数）<br>make<br>sudo make install<br>如果在 ./configure 这一步出现错误  </p>
<p>错误一：<br>configure: error:  </p>
<p>You must have the GTK+ 2.0 development headers installed to compile Pidgin.<br>If you only want to build Finch then specify –disable-gtkui when running configure.<br>解决：<br>sudo apt-get install libgtk2.0-dev  </p>
<p>错误二：<br>configure: error:  </p>
<p>You must have libxml2 &gt;= 2.6.0 development headers installed to build.<br>解决：<br>sudo apt-get install libxml2-dev  </p>
<p>错误三：<br>configure: error:  </p>
<p>The msgfmt command is required to build libpurple. If it is installed on your system, ensure that it is in your path. If it is not, install GNU gettext to continue.<br>解决：<br>sudo apt-get install gettext<br>如果在使用 GTalk 或 MSN 时出现错误  </p>
<p>错误：<br>SSL Library/Libraries……… : None (MSN and Google Talk will not work<br>without SSL!)<br>解决：<br>sudo apt-get install libnss-dev libnspr-dev  </p>
<p>如果在./configure中还出现问题，那么要找到问题所在，安装缺失的包即可。  </p>
<p>在配置过程中，config.log文件是很有帮助的。我们可以在这里面找出错误的根源，从而寻找应对措施。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>FC4 实体机的/etc/rc.d/rc.sysinit</title>
    <url>/posts/941525438/</url>
    <content><![CDATA[<p>#!/bin/bash</p>
<p>#</p>
<p># /etc/rc.d/rc.sysinit - run once at boot time</p>
<p>#</p>
<p># Taken in part from Miquel van Smoorenburg’s bcheckrc.</p>
<p>#</p>
<p>HOSTNAME=`/bin/hostname`</p>
<p>HOSTTYPE=`uname -m`</p>
<p>unamer=`uname -r`</p>
<p>if [ -f /etc/sysconfig/network ]; then</p>
<p>    . /etc/sysconfig/network</p>
<p>fi</p>
<p>if [ -z “$HOSTNAME” -o “$HOSTNAME” = “(none)” ]; then</p>
<p>    HOSTNAME=localhost</p>
<p>fi</p>
<p># Mount /proc and /sys (done here so volume labels can work with fsck)</p>
<p>mount -n -t proc /proc /proc</p>
<p>if [ ! -d /proc/bus/usb ]; then</p>
<p>modprobe usbcore &gt;/dev/null 2&gt;&amp;1 &amp;&amp; mount -n -t usbfs /proc/bus/usb /proc/bus/usb</p>
<p>else</p>
<p>mount -n -t usbfs /proc/bus/usb /proc/bus/usb</p>
<p>fi</p>
<p>mount -n -t sysfs /sys /sys &gt;/dev/null 2&gt;&amp;1</p>
<p>. /etc/init.d/functions</p>
<p># Check SELinux status</p>
<p>selinuxfs=`LC_ALL=C awk ‘/ selinuxfs / { print $2 }’ /proc/mounts`</p>
<p>SELINUX=</p>
<p>if [ -n “$selinuxfs” ] &amp;&amp; [ “`cat /proc/self/attr/current`“ != “kernel” ]; then</p>
<p>if [ -r $selinuxfs/enforce ] ; then</p>
<p>SELINUX=`cat $selinuxfs/enforce`</p>
<p>else</p>
<p># assume enforcing if you can’t read it</p>
<p>SELINUX=1</p>
<p>fi</p>
<p>fi</p>
<p>if [ -n “$SELINUX” -a -x /sbin/restorecon ] &amp;&amp; LC_ALL=C fgrep -q “ /dev “ /proc/mounts ; then</p>
<p>/sbin/restorecon  -R /dev 2&gt;/dev/null</p>
<p>fi</p>
<p>disable_selinux() {</p>
<p>echo “*** Warning – SELinux is active”</p>
<p>echo “*** Disabling security enforcement for system recovery.”</p>
<p>echo “*** Run ‘setenforce 1’ to reenable.”</p>
<p>echo “0” &gt; $selinuxfs/enforce</p>
<p>}</p>
<p>relabel_selinux() {</p>
<p>    if [ -x /usr/bin/rhgb-client ] &amp;&amp; /usr/bin/rhgb-client –ping ; then</p>
<p>chvt 1</p>
<p>    fi</p>
<p>    echo “</p>
<p>         *** Warning – SELinux relabel is required. ***</p>
<p>*** Disabling security enforcement.         ***</p>
<p>*** Relabeling could take a very long time, ***</p>
<p>*** depending on file system size.          ***</p>
<p>“</p>
<p>    echo “0” &gt; $selinuxfs/enforce</p>
<p>    /sbin/fixfiles -f -F relabel &gt; /dev/null 2&gt;&amp;1 </p>
<p>    rm -f  /.autorelabel </p>
<p>    echo “*** Enabling security enforcement.         ***“</p>
<p>    echo $SELINUX &gt; $selinuxfs/enforce</p>
<p>    if [ -x /usr/bin/rhgb-client ] &amp;&amp; /usr/bin/rhgb-client –ping ; then</p>
<p>chvt 8</p>
<p>    fi</p>
<p>}</p>
<p>if [ “$HOSTTYPE” != “s390” -a “$HOSTTYPE” != “s390x” ]; then</p>
<p>  last=0</p>
<p>  for i in `LC_ALL=C grep ‘^[0-9].*respawn:/sbin/mingetty’ /etc/inittab | sed ‘s/^.* tty\([0-9][0-9]*\).*/\1/g’`; do</p>
<p>        &gt; /dev/tty$i</p>
<p>        last=$i</p>
<p>  done</p>
<p>  if [ $last -gt 0 ]; then</p>
<p>       &gt; /dev/tty$((last+1))</p>
<p>       &gt; /dev/tty$((last+2))</p>
<p>  fi</p>
<p>fi</p>
<p>if [ “$CONSOLETYPE” = “vt” -a -x /sbin/setsysfont ]; then</p>
<p>   echo -n “Setting default font ($SYSFONT): “</p>
<p>   /sbin/setsysfont</p>
<p>   if [ $? -eq 0 ]; then</p>
<p>      success</p>
<p>   else</p>
<p>      failure</p>
<p>   fi</p>
<p>   echo ; echo</p>
<p>fi</p>
<p># Print a text banner.</p>
<p>echo -en $”\t\tWelcome to “</p>
<p>if LC_ALL=C fgrep -q “Red Hat” /etc/redhat-release ; then </p>
<p> [ “$BOOTUP” = “color” ] &amp;&amp; echo -en “\\033[0;31m”</p>
<p> echo -en “Red Hat”</p>
<p> [ “$BOOTUP” = “color” ] &amp;&amp; echo -en “\\033[0;39m”</p>
<p> PRODUCT=`sed “s/Red Hat \(.*\) release.*/\1/“ /etc/redhat-release`</p>
<p> echo “ $PRODUCT”</p>
<p>elif LC_ALL=C fgrep -q “Fedora” /etc/redhat-release ; then </p>
<p> [ “$BOOTUP” = “color” ] &amp;&amp; echo -en “\\033[0;31m”</p>
<p> echo -en “Fedora”</p>
<p> [ “$BOOTUP” = “color” ] &amp;&amp; echo -en “\\033[0;39m”</p>
<p> PRODUCT=`sed “s/Fedora \(.*\) release.*/\1/“ /etc/redhat-release`</p>
<p> echo “ $PRODUCT”</p>
<p>else</p>
<p> PRODUCT=`sed “s/ release.*//g” /etc/redhat-release`</p>
<p> echo “$PRODUCT”</p>
<p>fi</p>
<p>if [ “$PROMPT” != “no” ]; then</p>
<p> echo -en $”\t\tPress ‘I’ to enter interactive startup.”</p>
<p> echo</p>
<p>fi</p>
<p># Fix console loglevel</p>
<p>if [ -n “$LOGLEVEL” ]; then</p>
<p>/bin/dmesg -n $LOGLEVEL</p>
<p>fi</p>
<p>[ -x /sbin/start_udev ] &amp;&amp; /sbin/start_udev</p>
<p># Only read this once.</p>
<p>cmdline=$(cat /proc/cmdline)</p>
<p># Initialize hardware</p>
<p>if [ -f /proc/sys/kernel/modprobe ]; then</p>
<p>   if ! strstr “$cmdline” nomodules &amp;&amp; [ -f /proc/modules ] ; then</p>
<p>       sysctl -w kernel.modprobe=”/sbin/modprobe” &gt;/dev/null 2&gt;&amp;1</p>
<p>       sysctl -w kernel.hotplug=”/sbin/udevsend” &gt;/dev/null 2&gt;&amp;1</p>
<p>   else</p>
<p>       # We used to set this to NULL, but that causes ‘failed to exec’ messages”</p>
<p>       sysctl -w kernel.modprobe=”/bin/true” &gt;/dev/null 2&gt;&amp;1</p>
<p>       sysctl -w kernel.hotplug=”/bin/true” &gt;/dev/null 2&gt;&amp;1</p>
<p>   fi</p>
<p>fi</p>
<p>echo -n $”Initializing hardware… “</p>
<p>ide=””</p>
<p>scsi=””</p>
<p>network=””</p>
<p>audio=””</p>
<p>other=””</p>
<p>eval `kmodule -d | while read devtype mod ; do</p>
<p>case “$devtype” in</p>
<p>“IDE”)ide=”$ide $mod”</p>
<p>  echo “ide=\“$ide”\“;;</p>
<p>“SCSI”) scsi=”$scsi $mod”</p>
<p>  echo “scsi=\“$scsi”\“;;</p>
<p>“NETWORK”) network=”$network $mod”</p>
<p>  echo “network=\“$network”\“;;</p>
<p>“AUDIO”) audio=”$audio $mod”</p>
<p>  echo “audio=\“$audio”\“;;</p>
<p>*) other=”$other $mod”</p>
<p>  echo “other=\“$other”\“;;</p>
<p>esac</p>
<p>done`</p>
<p>load_module () {</p>
<p>LC_ALL=C fgrep -xq “$1” /etc/hotplug/blacklist 2&gt;/dev/null || modprobe $1 &gt;/dev/null 2&gt;&amp;1</p>
<p>}</p>
<p># IDE</p>
<p>for module in $ide ; do</p>
<p>load_module $module</p>
<p>done</p>
<p># SCSI</p>
<p>for module in `/sbin/modprobe -c | LC_ALL=C awk ‘/^alias[[:space:]]+scsi_hostadapter[0-9]*[[:space:]]/ { print $3 }’` $scsi; do</p>
<p>load_module $module</p>
<p>done</p>
<p>load_module floppy</p>
<p>echo -n $” storage”</p>
<p># Network</p>
<p>pushd /etc/sysconfig/network-scripts &gt;/dev/null 2&gt;&amp;1</p>
<p>interfaces=`ls ifcfg* | LC_ALL=C egrep -v ‘(ifcfg-lo|:|rpmsave|rpmorig|rpmnew)’ | \</p>
<p>            LC_ALL=C egrep -v ‘(~|\.bak)$’ | \</p>
<p>            LC_ALL=C egrep ‘ifcfg-[A-Za-z0-9\._-]+$’ | \</p>
<p>   sed ‘s/^ifcfg-//g’ |</p>
<p>   sed ‘s/[0-9]/ &amp;/‘ | LC_ALL=C sort -k 1,1 -k 2n | sed ‘s/ //‘`</p>
<p>for i in $interfaces ; do</p>
<p>eval $(LC_ALL=C fgrep “DEVICE=” ifcfg-$i)</p>
<p>load_module $DEVICE</p>
<p>done</p>
<p>popd &gt;/dev/null 2&gt;&amp;1</p>
<p>for module in $network ; do</p>
<p>load_module $module</p>
<p>done</p>
<p>echo -n $” network”</p>
<p># Sound</p>
<p>for module in `/sbin/modprobe -c | LC_ALL=C awk ‘/^alias[[:space:]]+snd-card-[[:digit:]]+[[:space:]]/ { print $3 }’` $audio; do</p>
<p>load_module $module</p>
<p>done</p>
<p>echo -n $” audio”</p>
<p># Everything else (duck and cover)</p>
<p>for module in $other ; do</p>
<p>load_module $module</p>
<p>done</p>
<p>echo -n $” done”</p>
<p>success</p>
<p>echo</p>
<p># Load other user-defined modules</p>
<p>for file in /etc/sysconfig/modules/*.modules ; do</p>
<p>  [ -x $file ] &amp;&amp; $file</p>
<p>done</p>
<p># Load modules (for backward compatibility with VARs)</p>
<p>if [ -f /etc/rc.modules ]; then</p>
<p>/etc/rc.modules</p>
<p>fi</p>
<p># Start the graphical boot, if necessary; /usr may not be mounted yet, so we</p>
<p># may have to do this again after mounting</p>
<p>RHGB_STARTED=0</p>
<p>mount -n /dev/pts</p>
<p>if strstr “$cmdline” rhgb &amp;&amp; ! strstr “$cmdline” early-login &amp;&amp; [ “$BOOTUP” = “color” -a “$GRAPHICAL” = “yes” -a -x /usr/bin/rhgb ]; then</p>
<p>   LC_MESSAGES= /usr/bin/rhgb</p>
<p>   RHGB_STARTED=1</p>
<p>fi</p>
<p># Configure kernel parameters</p>
<p>update_boot_stage RCkernelparam</p>
<p>sysctl -e -p /etc/sysctl.conf &gt;/dev/null 2&gt;&amp;1</p>
<p># Set the system clock.</p>
<p>update_boot_stage RCclock</p>
<p>ARC=0</p>
<p>SRM=0</p>
<p>UTC=0</p>
<p>if [ -f /etc/sysconfig/clock ]; then</p>
<p>   . /etc/sysconfig/clock</p>
<p>   # convert old style clock config to new values</p>
<p>   if [ “${CLOCKMODE}” = “GMT” ]; then</p>
<p>      UTC=true</p>
<p>   elif [ “${CLOCKMODE}” = “ARC” ]; then</p>
<p>      ARC=true</p>
<p>   fi</p>
<p>fi</p>
<p>CLOCKDEF=””</p>
<p>CLOCKFLAGS=”$CLOCKFLAGS –hctosys”</p>
<p>case “$UTC” in</p>
<p>    yes|true)CLOCKFLAGS=”$CLOCKFLAGS –utc”</p>
<p>CLOCKDEF=”$CLOCKDEF (utc)” ;;</p>
<p>    no|false)CLOCKFLAGS=”$CLOCKFLAGS –localtime”</p>
<p>CLOCKDEF=”$CLOCKDEF (localtime)” ;;</p>
<p>esac</p>
<p>case “$ARC” in</p>
<p>    yes|true)CLOCKFLAGS=”$CLOCKFLAGS –arc”</p>
<p>CLOCKDEF=”$CLOCKDEF (arc)” ;;</p>
<p>esac</p>
<p>case “$SRM” in</p>
<p>    yes|true)CLOCKFLAGS=”$CLOCKFLAGS –srm”</p>
<p>CLOCKDEF=”$CLOCKDEF (srm)” ;;</p>
<p>esac</p>
<p>/sbin/hwclock $CLOCKFLAGS</p>
<p>action $”Setting clock $CLOCKDEF: `date`“ /bin/true</p>
<p>if [ “$CONSOLETYPE” = “vt” -a -x /bin/loadkeys ]; then</p>
<p> KEYTABLE=</p>
<p> KEYMAP=</p>
<p> if [ -f /etc/sysconfig/console/default.kmap ]; then</p>
<p>  KEYMAP=/etc/sysconfig/console/default.kmap</p>
<p> else</p>
<p>  if [ -f /etc/sysconfig/keyboard ]; then</p>
<p>    . /etc/sysconfig/keyboard</p>
<p>  fi</p>
<p>  if [ -n “$KEYTABLE” -a -d “/lib/kbd/keymaps” ]; then</p>
<p>     KEYMAP=”$KEYTABLE.map”</p>
<p>  fi</p>
<p> fi</p>
<p> if [ -n “$KEYMAP” ]; then </p>
<p>  if [ -n “$KEYTABLE” ]; then</p>
<p>    echo -n $”Loading default keymap ($KEYTABLE): “</p>
<p>  else</p>
<p>    echo -n $”Loading default keymap: “</p>
<p>  fi</p>
<p>  loadkeys -u $KEYMAP &lt; /dev/tty0 &gt; /dev/tty0 2&gt;/dev/null &amp;&amp; \</p>
<p>     success $”Loading default keymap” || failure $”Loading default keymap”</p>
<p>  echo</p>
<p> fi</p>
<p>fi</p>
<p># Set the hostname.</p>
<p>update_boot_stage RChostname</p>
<p>action $”Setting hostname ${HOSTNAME}: “ hostname ${HOSTNAME}</p>
<p># Initialiaze ACPI bits</p>
<p>if [ -d /proc/acpi ]; then</p>
<p>   for module in /lib/modules/$unamer/kernel/drivers/acpi/* ; do</p>
<p>      insmod $module &gt;/dev/null 2&gt;&amp;1</p>
<p>   done</p>
<p>fi</p>
<p># configure all zfcp (scsi over fibrechannel) devices before trying to mount them</p>
<p># zfcpconf.sh exists only on mainframe</p>
<p>[ -x /sbin/zfcpconf.sh ] &amp;&amp; /sbin/zfcpconf.sh</p>
<p># RAID setup</p>
<p>update_boot_stage RCraid</p>
<p>echo “raidautorun /dev/md0” | nash –quiet</p>
<p>if [ -f /etc/mdadm.conf ]; then</p>
<p>    /sbin/mdadm -A -s</p>
<p>fi</p>
<p># LVM2 initialization</p>
<p>if [ -x /sbin/lvm.static ]; then</p>
<p>    if ! LC_ALL=C fgrep -q “device-mapper” /proc/devices 2&gt;/dev/null ; then</p>
<p>modprobe dm-mod &gt;/dev/null 2&gt;&amp;1</p>
<p>    fi</p>
<p>    echo “mkdmnod” | /sbin/nash –quiet &gt;/dev/null 2&gt;&amp;1</p>
<p>    [ -n “$SELINUX” ] &amp;&amp; restorecon /dev/mapper/control &gt;/dev/null 2&gt;&amp;1</p>
<p>    if [ -c /dev/mapper/control -a -x /sbin/lvm.static ]; then</p>
<p>if /sbin/lvm.static vgscan –mknodes –ignorelockingfailure &gt; /dev/null 2&gt;&amp;1 ; then</p>
<p>   action $”Setting up Logical Volume Management:” /sbin/lvm.static vgchange -a y –ignorelockingfailure</p>
<p>fi</p>
<p>    fi</p>
<p>fi</p>
<p>if [ -f /fastboot ] || strstr “$cmdline” fastboot ; then</p>
<p>fastboot=yes</p>
<p>fi</p>
<p>if [ -f /fsckoptions ]; then</p>
<p>fsckoptions=`cat /fsckoptions`</p>
<p>fi</p>
<p>if [ -f /forcefsck ] || strstr “$cmdline” forcefsck ; then</p>
<p>fsckoptions=”-f $fsckoptions”</p>
<p>elif [ -f /.autofsck ]; then</p>
<p>[ -f /etc/sysconfig/autofsck ] &amp;&amp; . /etc/sysconfig/autofsck</p>
<p>if [ “$AUTOFSCK_DEF_CHECK” = “yes” ]; then</p>
<p>AUTOFSCK_OPT=”$AUTOFSCK_OPT -f”</p>
<p>fi</p>
<p>fsckoptions=”$AUTOFSCK_OPT $fsckoptions”</p>
<p>fi</p>
<p>if [ “$BOOTUP” = “color” ]; then</p>
<p>fsckoptions=”-C $fsckoptions”</p>
<p>else</p>
<p>fsckoptions=”-V $fsckoptions”</p>
<p>fi</p>
<p>if [ -f /etc/sysconfig/readonly-root ]; then</p>
<p>    . /etc/sysconfig/readonly-root</p>
<p>    if [ “$READONLY” = “yes” ]; then</p>
<p>        # Call rc.readonly to set up magic stuff needed for readonly root</p>
<p>        . /etc/rc.readonly</p>
<p>    fi</p>
<p>fi</p>
<p>_RUN_QUOTACHECK=0</p>
<p>if [ -z “$fastboot” -a “$READONLY” != “yes” ]; then</p>
<p>        STRING=$”Checking filesystems”</p>
<p>echo $STRING</p>
<p>if [ “${RHGB_STARTED}” != “0” -a -w /etc/rhgb/temp/rhgb-console ]; then</p>
<p>fsck -T -A -a $fsckoptions &gt; /etc/rhgb/temp/rhgb-console</p>
<p>else</p>
<p>fsck -T -A -a $fsckoptions</p>
<p>fi</p>
<p>rc=$?</p>
<p>if [ “$rc” -eq “0” ]; then</p>
<p>success “$STRING”</p>
<p>echo</p>
<p>elif [ “$rc” -eq “1” ]; then</p>
<p>       passed “$STRING”</p>
<p>echo</p>
<p>elif [ “$rc” -eq “2” -o “$rc” -eq “3” ]; then </p>
<p>echo $”Unmounting file systems”</p>
<p>umount -a</p>
<p>mount -n -o remount,ro /</p>
<p>echo $”Automatic reboot in progress.”</p>
<p>reboot -f</p>
<p>        fi</p>
<p>        # A return of 4 or higher means there were serious problems.</p>
<p>if [ $rc -gt 1 ]; then</p>
<p>       if [ -x /usr/bin/rhgb-client ] &amp;&amp; /usr/bin/rhgb-client –ping ; then</p>
<p>   chvt 1</p>
<p>fi</p>
<p>failure “$STRING”</p>
<p>echo</p>
<p>echo</p>
<p>echo $”*** An error occurred during the file system check.”</p>
<p>echo $”*** Dropping you to a shell; the system will reboot”</p>
<p>echo $”*** when you leave the shell.”</p>
<p>                str=$”(Repair filesystem)”</p>
<p>PS1=”$str \# # “; export PS1</p>
<p>[ “$SELINUX” = “1” ] &amp;&amp; disable_selinux</p>
<p>sulogin</p>
<p>echo $”Unmounting file systems”</p>
<p>umount -a</p>
<p>mount -n -o remount,ro /</p>
<p>echo $”Automatic reboot in progress.”</p>
<p>reboot -f</p>
<p>elif [ “$rc” -eq “1” ]; then</p>
<p>_RUN_QUOTACHECK=1</p>
<p>fi</p>
<p>if [ -f /.autofsck -a -x /usr/bin/rhgb-client ] &amp;&amp; /usr/bin/rhgb-client –ping ; then</p>
<p>chvt 8</p>
<p>    fi</p>
<p>fi</p>
<p># Unmount the initrd, if necessary</p>
<p>if LC_ALL=C fgrep -q /initrd /proc/mounts &amp;&amp; ! LC_ALL=C fgrep -q /initrd/loopfs /proc/mounts ; then</p>
<p>   umount /initrd</p>
<p>   /sbin/blockdev –flushbufs /dev/ram0 &gt;/dev/null 2&gt;&amp;1</p>
<p>fi</p>
<p># Update quotas if necessary</p>
<p>if [ X”$_RUN_QUOTACHECK” = X1 -a -x /sbin/quotacheck ]; then</p>
<p>if [ -x /sbin/convertquota ]; then</p>
<p>   # try to convert old quotas</p>
<p>   for mountpt in `LC_ALL=C awk ‘$4 ~ /quota/{print $2}’ /etc/mtab` ; do</p>
<p>if [ -f “$mountpt/quota.user” ]; then</p>
<p>   action $”Converting old user quota files: “ \</p>
<p>   /sbin/convertquota -u $mountpt &amp;&amp; \</p>
<p>rm -f $mountpt/quota.user</p>
<p>fi</p>
<p>if [ -f “$mountpt/quota.group” ]; then</p>
<p>   action $”Converting old group quota files: “ \</p>
<p>   /sbin/convertquota -g $mountpt &amp;&amp; \</p>
<p>rm -f $mountpt/quota.group</p>
<p>fi</p>
<p>   done</p>
<p>fi</p>
<p>action $”Checking local filesystem quotas: “ /sbin/quotacheck -aRnug</p>
<p>fi</p>
<p># Remount the root filesystem read-write.</p>
<p>update_boot_stage RCmountfs</p>
<p>state=`LC_ALL=C awk ‘/ \/ / &amp;&amp; ($3 !~ /rootfs/) { print $4 }’ /proc/mounts`</p>
<p>[ “$state” != “rw” -a “$READONLY” != “yes” ] &amp;&amp; \</p>
<p>  action $”Remounting root filesystem in read-write mode: “ mount -n -o remount,rw /</p>
<p># Clean up SELinux labels</p>
<p>if [ -n “$SELINUX” ]; then</p>
<p>   for file in /etc/mtab /etc/ld.so.cache ; do</p>
<p>   [ -r $file ] &amp;&amp; restorecon $file  &gt;/dev/null 2&gt;&amp;1</p>
<p>   done</p>
<p>fi</p>
<p># Clear mtab</p>
<p>(&gt; /etc/mtab) &amp;&gt; /dev/null</p>
<p># Remove stale backups</p>
<p>rm -f /etc/mtab~ /etc/mtab~~</p>
<p># Enter mounted filesystems into /etc/mtab</p>
<p>mount -f /</p>
<p>mount -f /proc &gt;/dev/null 2&gt;&amp;1</p>
<p>mount -f /sys &gt;/dev/null 2&gt;&amp;1</p>
<p>mount -f /dev/pts &gt;/dev/null 2&gt;&amp;1</p>
<p>mount -f /proc/bus/usb &gt;/dev/null 2&gt;&amp;1</p>
<p># Mount all other filesystems (except for NFS and /proc, which is already</p>
<p># mounted). Contrary to standard usage,</p>
<p># filesystems are NOT unmounted in single user mode.</p>
<p>action $”Mounting local filesystems: “ mount -a -t nonfs,nfs4,smbfs,ncpfs,cifs,gfs -O no_netdev</p>
<p>if [ -x /sbin/quotaon ]; then</p>
<p>    action $”Enabling local filesystem quotas: “ /sbin/quotaon -aug</p>
<p>fi</p>
<p># Check to see if a full relabel is needed</p>
<p>if [ -n “$SELINUX” ]; then </p>
<p>    if [ -f /.autorelabel ] || strstr “$cmdline” autorelabel ; then</p>
<p>relabel_selinux</p>
<p>    fi</p>
<p>else</p>
<p>    if [ -d /etc/selinux ]; then</p>
<p>        [ -f /.autorelabel ] || touch /.autorelabel</p>
<p>    fi</p>
<p>fi</p>
<p># Start the graphical boot, if necessary and not done yet.</p>
<p>if strstr “$cmdline” rhgb &amp;&amp; ! strstr “$cmdline” early-login &amp;&amp; [ “$RHGB_STARTED” -eq 0 -a “$BOOTUP” = “color” -a “$GRAPHICAL” = “yes” -a -x /usr/bin/rhgb ]; then</p>
<p>   LC_MESSAGES= /usr/bin/rhgb</p>
<p>   RHGB_STARTED=1</p>
<p>fi</p>
<p># Initialize pseudo-random number generator</p>
<p>if [ -f “/var/lib/random-seed” ]; then</p>
<p>cat /var/lib/random-seed &gt; /dev/urandom</p>
<p>else</p>
<p>touch /var/lib/random-seed</p>
<p>fi</p>
<p>chmod 600 /var/lib/random-seed</p>
<p>dd if=/dev/urandom of=/var/lib/random-seed count=1 bs=512 2&gt;/dev/null</p>
<p># Use the hardware RNG to seed the entropy pool, if available</p>
<p>#[ -x /sbin/rngd -a -c /dev/hw_random ] &amp;&amp; rngd</p>
<p># Configure machine if necessary.</p>
<p>if [ -f /.unconfigured ]; then</p>
<p>    if [ -x /usr/bin/rhgb-client ] &amp;&amp; /usr/bin/rhgb-client –ping ; then</p>
<p>chvt 1</p>
<p>    fi</p>
<p>    if [ -x /usr/bin/system-config-keyboard ]; then</p>
<p>/usr/bin/system-config-keyboard</p>
<p>    fi</p>
<p>    if [ -x /usr/bin/passwd ]; then </p>
<p>        /usr/bin/passwd root</p>
<p>    fi</p>
<p>    if [ -x /usr/sbin/netconfig ]; then</p>
<p>/usr/sbin/netconfig</p>
<p>    fi</p>
<p>    if [ -x /usr/sbin/timeconfig ]; then</p>
<p>/usr/sbin/timeconfig</p>
<p>    fi</p>
<p>    if [ -x /usr/sbin/authconfig ]; then</p>
<p>/usr/sbin/authconfig –nostart</p>
<p>    fi</p>
<p>    if [ -x /usr/sbin/ntsysv ]; then</p>
<p>/usr/sbin/ntsysv –level 35</p>
<p>    fi</p>
<p>    # Reread in network configuration data.</p>
<p>    if [ -f /etc/sysconfig/network ]; then</p>
<p>. /etc/sysconfig/network</p>
<p># Reset the hostname.</p>
<p>action $”Resetting hostname ${HOSTNAME}: “ hostname ${HOSTNAME}</p>
<p>    fi</p>
<p>    rm -f /.unconfigured</p>
<p>    if [ -x /usr/bin/rhgb-client ] &amp;&amp; /usr/bin/rhgb-client –ping ; then</p>
<p>chvt 8</p>
<p>    fi</p>
<p>fi</p>
<p># Clean out /.</p>
<p>rm -f /fastboot /fsckoptions /forcefsck /.autofsck /halt /poweroff &amp;&gt; /dev/null</p>
<p># Do we need (w|u)tmpx files? We don’t set them up, but the sysadmin might…</p>
<p>_NEED_XFILES=</p>
<p>[ -f /var/run/utmpx -o -f /var/log/wtmpx ] &amp;&amp; _NEED_XFILES=1</p>
<p># Clean up /var.  I’d use find, but /usr may not be mounted.</p>
<p>for afile in /var/lock/* /var/run/* ; do</p>
<p>if [ -d “$afile” ]; then</p>
<p>  case “$afile” in</p>
<p>*/news|*/mon);;</p>
<p>*/sudo)rm -f $afile/*/* ;;</p>
<p>*/vmware)rm -rf $afile/*/* ;;</p>
<p>*/samba)rm -rf $afile/*/* ;;</p>
<p>*/screen)rm -rf $afile/* ;;</p>
<p>*)rm -f $afile/* ;;</p>
<p>  esac</p>
<p>else</p>
<p>  rm -f $afile</p>
<p>fi</p>
<p>done</p>
<p>rm -f /var/lib/rpm/__db* &amp;&gt; /dev/null</p>
<p>rm -f /var/gdm/.gdmfifo &amp;&gt; /dev/null</p>
<p># Reset pam_console permissions</p>
<p>[ -x /sbin/pam_console_apply ] &amp;&amp; /sbin/pam_console_apply -r</p>
<p>{</p>
<p># Clean up utmp/wtmp</p>
<p>&gt; /var/run/utmp</p>
<p>touch /var/log/wtmp</p>
<p>chgrp utmp /var/run/utmp /var/log/wtmp</p>
<p>chmod 0664 /var/run/utmp /var/log/wtmp</p>
<p>if [ -n “$_NEED_XFILES” ]; then</p>
<p>  &gt; /var/run/utmpx</p>
<p>  touch /var/log/wtmpx</p>
<p>  chgrp utmp /var/run/utmpx /var/log/wtmpx</p>
<p>  chmod 0664 /var/run/utmpx /var/log/wtmpx</p>
<p>fi</p>
<p># Clean up various /tmp bits</p>
<p>[ -n “$SELINUX” ] &amp;&amp; restorecon /tmp</p>
<p>rm -f /tmp/.X*-lock /tmp/.lock.* /tmp/.gdm_socket /tmp/.s.PGSQL.*</p>
<p>rm -rf /tmp/.X*-unix /tmp/.ICE-unix /tmp/.font-unix /tmp/hsperfdata_* \</p>
<p>       /tmp/kde-* /tmp/ksocket-* /tmp/mc-* /tmp/mcop-* /tmp/orbit-*  \</p>
<p>       /tmp/scrollkeeper-*  /tmp/ssh-*</p>
<p># Make ICE directory</p>
<p>mkdir -m 1777 -p /tmp/.ICE-unix &gt;/dev/null 2&gt;&amp;1</p>
<p>chown root:root /tmp/.ICE-unix</p>
<p>[ -n “$SELINUX” ] &amp;&amp; restorecon /tmp/.ICE-unix &gt;/dev/null 2&gt;&amp;1</p>
<p># Start up swapping.</p>
<p>update_boot_stage RCswap</p>
<p>action $”Enabling swap space: “ swapon -a -e</p>
<p># Set up binfmt_misc</p>
<p>/bin/mount -t binfmt_misc none /proc/sys/fs/binfmt_misc &gt; /dev/null 2&gt;&amp;1</p>
<p># Initialize the serial ports.</p>
<p>if [ -f /etc/rc.serial ]; then</p>
<p>. /etc/rc.serial</p>
<p>fi</p>
<p># If they asked for ide-scsi, load it</p>
<p>if strstr “$cmdline” ide-scsi ; then</p>
<p>modprobe ide-cd &gt;/dev/null 2&gt;&amp;1</p>
<p>modprobe ide-scsi &gt;/dev/null 2&gt;&amp;1</p>
<p>fi</p>
<p># Boot time profiles. Yes, this should be somewhere else.</p>
<p>if [ -x /usr/sbin/system-config-network-cmd ]; then</p>
<p>  if strstr “$cmdline” netprofile= ; then</p>
<p>    for arg in $cmdline ; do</p>
<p>        if [ “${arg##netprofile=}” != “${arg}” ]; then</p>
<p>   /usr/sbin/system-config-network-cmd –profile ${arg##netprofile=}</p>
<p>        fi</p>
<p>    done</p>
<p>  fi</p>
<p>fi</p>
<p># Now that we have all of our basic modules loaded and the kernel going,</p>
<p># let’s dump the syslog ring somewhere so we can find it later</p>
<p>dmesg -s 131072 &gt; /var/log/dmesg</p>
<p># create the crash indicator flag to warn on crashes, offer fsck with timeout</p>
<p>touch /.autofsck &amp;&gt; /dev/null</p>
<p>kill -TERM `/sbin/pidof getkey` &gt;/dev/null 2&gt;&amp;1</p>
<p>} &amp;</p>
<p>if strstr “$cmdline” confirm ; then</p>
<p>touch /var/run/confirm</p>
<p>fi</p>
<p>if [ “$PROMPT” != “no” ]; then</p>
<p>/sbin/getkey i &amp;&amp; touch /var/run/confirm</p>
<p>fi</p>
<p>wait</p>
<p># Let rhgb know that we’re leaving rc.sysinit</p>
<p>if [ -x /usr/bin/rhgb-client ] &amp;&amp; /usr/bin/rhgb-client –ping ; then</p>
<p>    /usr/bin/rhgb-client –sysinit</p>
<p>fi</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LFS制作-4、目标系统-3必要程序</title>
    <url>/posts/2307134587/</url>
    <content><![CDATA[<p>Berkeley DB-4.5.20</p>
<blockquote>
<p>包含一些程序和工具，供其他的一些程序来在做数据库相关函数时调用<br>-—————-<br>patch -Np1 -i ../db-4.5.20-fixes-1.patch<br>cd build_unix<br>../dist/configure –prefix=/usr –enable-compat185 –enable-cxx<br>make<br>make docdir=/usr/share/doc/db-4.5.20 install<br>chown -Rv root:root /usr/share/doc/db-4.5.20  </p>
</blockquote>
<p>Sed-4.1.5</p>
<blockquote>
<p>sed编辑器<br>-—————<br>./configure –prefix=/usr –bindir=/bin –enable-html<br>make<br>make install  </p>
</blockquote>
<p>E2fsprogs-1.40.2</p>
<blockquote>
<p>提供用于 ext2 文件系统的工具。它还支持 ext3 日志文件系统</p>
<p>包含命令：chattr、lsattr、mkfs、fsck等<br>-————–<br>sed -i -e ‘s@/bin/rm@/tools&amp;@’ lib/blkid/test_probe.in<br>mkdir -v build<br>cd build<br>../configure –prefix=/usr –with-root-prefix=”” \<br>    –enable-elf-shlibs<br>make<br>make install<br>make<br>make install-libs  </p>
</blockquote>
<p>Coreutils-6.9</p>
<blockquote>
<p>包括一套显示、设置基本系统属性的工具</p>
<p>包含命令：chroot、chown、cp、dd、dir、env、ln、ls、mkdir、mv、rm、seq、tee、touch、tty等</p>
<p>安装位置/usr，移动命令到/bin 、/sbin下<br>-———————–<br>patch -Np1 -i ../coreutils-6.9-uname-1.patch<br>patch -Np1 -i ../coreutils-6.9-suppress_uptime_kill_su-1.patch<br>patch -Np1 -i ../coreutils-6.9-i18n-1.patch<br>chmod +x tests/sort/sort-mb-tests<br>./configure –prefix=/usr<br>make<br>make install<br>mv -v /usr/bin/{cat,chgrp,chmod,chown,cp,date,dd,df,echo} /bin<br>mv -v /usr/bin/{false,hostname,ln,ls,mkdir,mknod,mv,pwd,readlink,rm} /bin<br>mv -v /usr/bin/{rmdir,stty,sync,true,uname} /bin<br>mv -v /usr/bin/chroot /usr/sbin<br>mv -v /usr/bin/{head,sleep,nice} /bin  </p>
</blockquote>
<p>Iana-Etc-2.20</p>
<blockquote>
<p>提供了网络服务和协议的数据</p>
<p>安装文件：/etc/protocols, /etc/services<br>-———————-<br>make<br>make install  </p>
</blockquote>
<p>M4-1.4.10</p>
<blockquote>
<p>宏处理器<br>-——————–<br>./configure –prefix=/usr<br>make<br>make install  </p>
</blockquote>
<p>Bison-2.3</p>
<blockquote>
<p>语法分析程序生成器</p>
<p>命令：bison、yacc<br>-———————<br>./configure –prefix=/usr<br>echo ‘#define YYENABLE_NLS 1’ &gt;&gt; config.h<br>make<br>make install  </p>
</blockquote>
<p>Ncurses-5.6</p>
<blockquote>
<p>提供字符终端处理库，包括面板和菜单</p>
<p>命令：clear、reset等<br>-———————-<br>patch -Np1 -i ../ncurses-5.6-coverity_fixes-1.patch<br>./configure –prefix=/usr –with-shared –without-debug –enable-widec<br>make<br>make install<br>chmod -v 644 /usr/lib/libncurses++w.a<br>mv -v /usr/lib/libncursesw.so.5* /lib<br>ln -sfv ../../lib/libncursesw.so.5 /usr/lib/libncursesw.so<br>for lib in curses ncurses form panel menu ; do \<br>    rm -vf /usr/lib/lib${lib}.so ; \<br>    echo “INPUT(-l${lib}w)” &gt;/usr/lib/lib${lib}.so ; \<br>    ln -sfv lib${lib}w.a /usr/lib/lib${lib}.a ; \<br>done<br>ln -sfv libncurses++w.a /usr/lib/libncurses++.a<br>rm -vf /usr/lib/libcursesw.so<br>echo “INPUT(-lncursesw)” &gt;/usr/lib/libcursesw.so<br>ln -sfv libncurses.so /usr/lib/libcurses.so<br>ln -sfv libncursesw.a /usr/lib/libcursesw.a<br>ln -sfv libncurses.a /usr/lib/libcurses.a  </p>
</blockquote>
<p>Procps-3.2.7</p>
<blockquote>
<p>用于监视系统进程的程序</p>
<p>命令：free、top、ps、uptime、kill等<br>-———————<br>make<br>make install  </p>
</blockquote>
<p>Libtool-1.5.24</p>
<blockquote>
<p>通用库支持脚本，将使用动态库的复杂性隐藏在统一的、可移植的接口中<br>-——————–<br>./configure –prefix=/usr<br>make<br>make install  </p>
</blockquote>
<p>Perl-5.8.8</p>
<blockquote>
<p>编程语言，各编程语言转换等用处<br>-—————-<br>echo “127.0.0.1 localhost leaf” &gt; /etc/hosts<br>./configure.gnu –prefix=/usr \<br>    -Dman1dir=/usr/share/man/man1 \<br>    -Dman3dir=/usr/share/man/man3 \<br>    -Dpager=”/usr/bin/less -isR”<br>make<br>make install  </p>
</blockquote>
<p>Readline-5.2</p>
<blockquote>
<p>提供命令行编辑和历史纪录功能的库集合<br>-——————–<br>sed -i ‘/MV.*old/d’ Makefile.in<br>sed -i ‘/{OLDSUFF}/c:’ support/shlib-install<br>patch -Np1 -i ../readline-5.2-fixes-3.patch<br>./configure –prefix=/usr –libdir=/lib<br>make SHLIB_LIBS=-lncurses<br>make install<br>mv -v /lib/lib{readline,history}.a /usr/lib<br>rm -v /lib/lib{readline,history}.so<br>ln -sfv ../../lib/libreadline.so.5 /usr/lib/libreadline.so<br>ln -sfv ../../lib/libhistory.so.5 /usr/lib/libhistory.so  </p>
</blockquote>
<p>Zlib-1.2.3</p>
<blockquote>
<p>很多程序中的压缩或者解压缩程序都会用到这个库<br>-——————–<br>./configure –prefix=/usr –shared –libdir=/lib<br>make<br>make install<br>rm -v /lib/libz.so<br>ln -sfv ../../lib/libz.so.1.2.3 /usr/lib/libz.so<br>make clean<br>./configure –prefix=/usr<br>make<br>make install<br>chmod -v 644 /usr/lib/libz.a  </p>
</blockquote>
<p>Autoconf-2.61</p>
<blockquote>
<p>生成用于自动配置源代码的 shell 脚本</p>
<p>命令：autoconf、autoheader等<br>-——————-<br>./configure –prefix=/usr<br>make<br>make install  </p>
</blockquote>
<p>Automake-1.10</p>
<blockquote>
<p>与 Autoconf 配合使用，产生 Makefile 文件<br>-——————<br>./configure –prefix=/usr<br>make<br>make install  </p>
</blockquote>
<p>Bash-3.2</p>
<blockquote>
<p>bash shell<br>-———————<br>tar -xvf ../bash-doc-3.2.tar.gz<br>sed -i “s|htmldir = @htmldir@|htmldir = /usr/share/doc/bash-3.2|” \<br>    Makefile.in<br>patch -Np1 -i ../bash-3.2-fixes-5.patch<br>./configure –prefix=/usr –bindir=/bin \<br>    –without-bash-malloc –with-installed-readline<br>make<br>sed -i ‘s/LANG/LC_ALL/‘ tests/intl.tests<br>sed -i ‘s@tests@&amp; &lt;/dev/tty@’ tests/run-test<br>chown -Rv nobody ./<br>su-tools nobody -s /bin/bash -c “make tests”<br>make install<br>exec /bin/bash –login +h  </p>
</blockquote>
<p>Bzip2-1.0.4</p>
<blockquote>
<p>包含了对文件进行压缩和解压缩的工具<br>-———————<br>patch -Np1 -i ../bzip2-1.0.4-install_docs-1.patch<br>make -f Makefile-libbz2_so<br>make clean<br>make<br>make PREFIX=/usr install<br>cp -v bzip2-shared /bin/bzip2<br>cp -av libbz2.so* /lib<br>ln -sv ../../lib/libbz2.so.1.0 /usr/lib/libbz2.so<br>rm -v /usr/bin/{bunzip2,bzcat,bzip2}<br>ln -sv bzip2 /bin/bunzip2<br>ln -sv bzip2 /bin/bzcat  </p>
</blockquote>
<p>Diffutils-2.8.1</p>
<blockquote>
<p>显示两个文件或目录的差异</p>
<p>命令：cmp、diff<br>-———————–<br>patch -Np1 -i ../diffutils-2.8.1-i18n-1.patch<br>touch man/diff.1<br>./configure –prefix=/usr<br>make<br>make install  </p>
</blockquote>
<p>File-4.21</p>
<blockquote>
<p>用来判断文件类型的工具</p>
<p>命令：file<br>-————————<br>./configure –prefix=/usr<br>make<br>make install  </p>
</blockquote>
<p>Findutils-4.2.31</p>
<blockquote>
<p>查找文件的工具</p>
<p>命令：find、updatedb、locate、xargs<br>-———————-<br>./configure –prefix=/usr –libexecdir=/usr/lib/findutils \<br>    –localstatedir=/var/lib/locate<br>make<br>make install<br>mv -v /usr/bin/find /bin<br>sed -i -e ‘s/find:=${BINDIR}/find:=\/bin/‘ /usr/bin/updatedb  </p>
</blockquote>
<p>Flex-2.5.33</p>
<blockquote>
<p>能生成识别文本模式的程序的工具<br>-——————-<br>./configure –prefix=/usr<br>make<br>make install<br>ln -sv libfl.a /usr/lib/libl.a  </p>
<blockquote>
<p>cat &gt; /usr/bin/lex &lt;&lt; “EOF”<br>#!/bin/sh<br># Begin /usr/bin/lex  </p>
<p>exec /usr/bin/flex -l “$@”  </p>
<p># End /usr/bin/lex<br>EOF  </p>
</blockquote>
<p>chmod -v 755 /usr/bin/lex  </p>
</blockquote>
<p>GRUB-0.97</p>
<blockquote>
<p>包含 GRand 统一引导装载程序<br>-—————-<br>patch -Np1 -i ../grub-0.97-disk_geometry-1.patch<br>./configure –prefix=/usr<br>make<br>make install<br>mkdir -v /boot/grub<br>cp -v /usr/lib/grub/i386-pc/stage{1,2} /boot/grub  </p>
</blockquote>
<p>Gawk-3.1.5</p>
<blockquote>
<p>包含用于管理文本文件的程序</p>
<p>命令：awk等<br>-——————–<br>patch -Np1 -i ../gawk-3.1.5-segfault_fix-1.patch<br>./configure –prefix=/usr –libexecdir=/usr/lib  </p>
<blockquote>
<p>cat &gt;&gt; config.h &lt;&lt; “EOF”<br>#define HAVE_LANGINFO_CODESET 1<br>#define HAVE_LC_MESSAGES 1<br>EOF  </p>
</blockquote>
<p>make<br>make install  </p>
</blockquote>
<p>Gettext-0.16.1</p>
<blockquote>
<p>系统的国际化和本地化<br>-—————<br>./configure –prefix=/usr<br>make<br>make install  </p>
</blockquote>
<p>Grep-2.5.1a</p>
<blockquote>
<p>搜索文件中符合指定匹配模式的行</p>
<p>命令：grep<br>-————–<br>patch -Np1 -i ../grep-2.5.1a-redhat_fixes-2.patch<br>chmod +x tests/fmbtest.sh<br>./configure –prefix=/usr –bindir=/bin<br>make<br>make install  </p>
</blockquote>
<p>Groff-1.18.1.4</p>
<blockquote>
<p>包含几个处理和格式化文本的程序<br>-—————-<br>patch -Np1 -i ../groff-1.18.1.4-debian_fixes-1.patch<br>sed -i -e ‘s/2010/002D/‘ -e ‘s/2212/002D/‘ \<br>    -e ‘s/2018/0060/‘ -e ‘s/2019/0027/‘ font/devutf8/R.proto<br>PAGE=A4 ./configure –prefix=/usr –enable-multibyte<br>make<br>make install<br>ln -sv eqn /usr/bin/geqn<br>ln -sv tbl /usr/bin/gtbl  </p>
</blockquote>
<p>Gzip-1.3.12</p>
<blockquote>
<p>压缩和解压文件的程序<br>-——————-<br>./configure –prefix=/usr –bindir=/bin<br>make<br>make install<br>mv -v /bin/{gzexe,uncompress,zcmp,zdiff,zegrep} /usr/bin<br>mv -v /bin/{zfgrep,zforce,zgrep,zless,zmore,znew} /usr/bin  </p>
</blockquote>
<p>Inetutils-1.5</p>
<blockquote>
<p>包含基本的网络程序</p>
<p>配置文件:/etc</p>
<p>命令：ping、ftp、telnet等<br>-——————-<br>patch -Np1 -i ../inetutils-1.5-no_server_man_pages-2.patch<br>./configure –prefix=/usr –libexecdir=/usr/sbin \<br>    –sysconfdir=/etc –localstatedir=/var \<br>    –disable-ifconfig –disable-logger –disable-syslogd \<br>    –disable-whois –disable-servers<br>make<br>make install<br>mv -v /usr/bin/ping /bin  </p>
</blockquote>
<p>IPRoute2-2.6.20-070313</p>
<blockquote>
<p>基本的和高级的基于 IPv4 网络的程序</p>
<p>命令：ip、arpd守护程序、<br>-—————-<br>sed -i -e ‘/tc-bfifo.8/d’ -e ‘/tc-pfifo.8/s/pbfifo/bfifo/‘ Makefile<br>make SBINDIR=/sbin<br>make SBINDIR=/sbin install<br>mv -v /sbin/arpd /usr/sbin  </p>
</blockquote>
<p>Kbd-1.12</p>
<blockquote>
<p>键盘映射表和键盘工具<br>-——————-<br>patch -Np1 -i ../kbd-1.12-backspace-1.patch<br>patch -Np1 -i ../kbd-1.12-gcc4_fixes-1.patch<br>./configure –datadir=/lib/kbd<br>make<br>make install<br>mv -v /usr/bin/{kbd_mode,openvt,setfont} /bin  </p>
</blockquote>
<p>Less-406</p>
<blockquote>
<p>一个文本文件查看器</p>
<p>命令：less<br>-———————<br>./configure –prefix=/usr –sysconfdir=/etc<br>make<br>make install  </p>
</blockquote>
<p>Make-3.81</p>
<blockquote>
<p>自动地确定一个大型程序的哪些片段需要重新编译，并且发出命令去重新编译它们</p>
<p>应该和autoconf和automake有关系<br>-——————–<br>./configure –prefix=/usr<br>make<br>make install  </p>
</blockquote>
<p>Man-DB-2.4.4</p>
<blockquote>
<p>查找和显示 man 手册页的程序</p>
<p>命令：man等</p>
<p>-———————<br>sed -i -e ‘\%\t/usr/man%d’ -e ‘\%\t/usr/local/man%d’ src/man_db.conf.in</p>
<blockquote>
<p>cat &gt;&gt; include/manconfig.h.in &lt;&lt; “EOF”</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>#define WEB_BROWSER “exec /usr/bin/lynx”</p>
</blockquote>
<blockquote>
<p>#define COL “/usr/bin/col”</p>
</blockquote>
<blockquote>
<p>#define VGRIND “/usr/bin/vgrind”</p>
</blockquote>
<blockquote>
<p>#define GRAP “/usr/bin/grap”</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>EOF</p>
</blockquote>
<p>patch -Np1 -i ../man-db-2.4.4-fixes-1.patch</p>
<p>./configure –prefix=/usr –enable-mb-groff –disable-setuid</p>
<p>make &amp;&amp; make install  </p>
</blockquote>
<p>Mktemp-1.5</p>
<blockquote>
<p>包含用于在 shell 脚本中创建安全临时文件的程序<br>-——————–<br>patch -Np1 -i ../mktemp-1.5-add_tempfile-3.patch<br>./configure –prefix=/usr –with-libc<br>make<br>make install<br>make install-tempfile  </p>
</blockquote>
<p>Module-Init-Tools-3.2.2</p>
<blockquote>
<p>处理 2.5.47 及以上版本的内核模块时使用的工具</p>
<p>命令：modprobe、insmod、depmod、lsmod</p>
<p>安装位置:/sbin<br>-——————<br>patch -Np1 -i ../module-init-tools-3.2.2-modprobe-1.patch<br>./configure<br>make check<br>make distclean<br>./configure –prefix=/ –enable-zlib<br>make<br>make INSTALL=install install  </p>
</blockquote>
<p>Patch-2.5.4</p>
<blockquote>
<p>补丁命令，一般和diff一起用</p>
</blockquote>
<blockquote>
<p>命令：patch<br>-—————-<br>./configure –prefix=/usr<br>make<br>make install  </p>
</blockquote>
<p>Psmisc-22.5</p>
<blockquote>
<p>用于显示进程信息的程序</p>
<p>命令：pstree、killall<br>-—————–<br>./configure –prefix=/usr –exec-prefix=””<br>make<br>make install<br>mv -v /bin/pstree* /usr/bin<br>ln -sv killall /bin/pidof  </p>
</blockquote>
<p>Shadow-4.0.18.1</p>
<blockquote>
<p>用于在安全方式下处理密码的程序</p>
<p>配置文件/etc</p>
<p>库文件:/usr/lib、/lib</p>
<p>命令位置:/bin、/usr/bin</p>
<p>命令：su、passwd、login、useradd、userdel、chsh</p>
<p>-—————–<br>patch -Np1 -i ../shadow-4.0.18.1-useradd_fix-2.patch</p>
<p>./configure –libdir=/lib –sysconfdir=/etc –enable-shared \</p>
<p>    –without-selinux</p>
<p>sed -i ‘s/groups$(EXEEXT) //‘ src/Makefile</p>
<p>find man -name Makefile -exec sed -i ‘s/groups\.1 / /‘ {} \;</p>
<p>sed -i -e ‘s@#MD5_CRYPT_ENAB.no@MD5_CRYPT_ENAB yes@’ \</p>
<p>    -e ‘s@/var/spool/mail@/var/mail@’ etc/login.defs</p>
<p>make</p>
<p>make install</p>
<p>mv -v /usr/bin/passwd /bin</p>
<p>mv -v /lib/libshadow.*a /usr/lib</p>
<p>rm -v /lib/libshadow.so</p>
<p>ln -sfv ../../lib/libshadow.so.0 /usr/lib/libshadow.so</p>
<p>pwconv</p>
<p>grpconv</p>
<p>useradd -D -b /home</p>
<p>sed -i ‘s/yes/no/‘ /etc/default/useradd</p>
<p>passwd root   #一定要设置root密码  </p>
</blockquote>
<p>Sysklogd-1.4.1</p>
<blockquote>
<p>记录系统日志信息的程序</p>
<p>命令：klogd守护程序、syslogd<br>-—————-<br>patch -Np1 -i ../sysklogd-1.4.1-fixes-2.patch<br>patch -Np1 -i ../sysklogd-1.4.1-8bit-1.patch<br>make<br>make install  </p>
<blockquote>
<p>cat &gt; /etc/syslog.conf &lt;&lt; “EOF”<br># Begin /etc/syslog.conf  </p>
<p>auth,authpriv.* -/var/log/auth.log<br>*.*;auth,authpriv.none -/var/log/sys.log<br>daemon.* -/var/log/daemon.log<br>kern.* -/var/log/kern.log<br>mail.* -/var/log/mail.log<br>user.* -/var/log/user.log<br>*.emerg *  </p>
<p># End /etc/syslog.conf<br>EOF  </p>
</blockquote>
</blockquote>
<p>Sysvinit-2.86  </p>
<blockquote>
<p>一些控制系统启动、运行、关闭的程序</p>
<p>配置文件：/etc/inittab</p>
<p>命令：shutdown、init、reboot等<br>-——————<br>sed -i ‘s@Sending processes@&amp; configured via /etc/inittab@g’ \<br>    src/init.c<br>make -C src<br>make -C src install  </p>
<blockquote>
<p>cat &gt; /etc/inittab &lt;&lt; “EOF”<br># Begin /etc/inittab  </p>
<p>id:3:initdefault:  </p>
<p>si::sysinit:/etc/rc.d/init.d/rc sysinit  </p>
<p>l0:0:wait:/etc/rc.d/init.d/rc 0<br>l1:S1:wait:/etc/rc.d/init.d/rc 1<br>l2:2:wait:/etc/rc.d/init.d/rc 2<br>l3:3:wait:/etc/rc.d/init.d/rc 3<br>l4:4:wait:/etc/rc.d/init.d/rc 4<br>l5:5:wait:/etc/rc.d/init.d/rc 5<br>l6:6:wait:/etc/rc.d/init.d/rc 6  </p>
<p>ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now  </p>
<p>su:S016:once:/sbin/sulogin  </p>
<p>1:2345:respawn:/sbin/agetty tty1 9600<br>2:2345:respawn:/sbin/agetty tty2 9600<br>3:2345:respawn:/sbin/agetty tty3 9600<br>4:2345:respawn:/sbin/agetty tty4 9600<br>5:2345:respawn:/sbin/agetty tty5 9600<br>6:2345:respawn:/sbin/agetty tty6 9600  </p>
<p># End /etc/inittab  </p>
</blockquote>
<blockquote>
<p>EOF  </p>
</blockquote>
</blockquote>
<p>Tar-1.18</p>
<blockquote>
<p>一个归档程序<br>-————-<br>./configure –prefix=/usr –bindir=/bin –libexecdir=/usr/sbin<br>make<br>make install  </p>
</blockquote>
<p>Texinfo-4.9</p>
<blockquote>
<p>读取、写入、转换 Info 文档的程序</p>
<p>命令：info等<br>-—————<br>patch -Np1 -i ../texinfo-4.9-multibyte-1.patch<br>patch -Np1 -i ../texinfo-4.9-tempfile_fix-1.patch<br>./configure –prefix=/usr<br>make<br>make install<br>make TEXMF=/usr/share/texmf install-tex<br>cd /usr/share/info<br>rm dir<br>for f in *<br>do install-info $f dir 2&gt;/dev/null<br>done  </p>
</blockquote>
<p>Udev-113</p>
<blockquote>
<p>包含动态地创建设备节点的程序</p>
<p>命令：udevinfo等<br>-—————–<br>tar -xvf ../udev-config-6.3.tar.bz2<br>install -dv /lib/{firmware,udev/devices/{pts,shm}}<br>mknod -m0666 /lib/udev/devices/null c 1 3<br>ln -sv /proc/self/fd /lib/udev/devices/fd<br>ln -sv /proc/self/fd/0 /lib/udev/devices/stdin<br>ln -sv /proc/self/fd/1 /lib/udev/devices/stdout<br>ln -sv /proc/self/fd/2 /lib/udev/devices/stderr<br>ln -sv /proc/kcore /lib/udev/devices/core<br>make EXTRAS=”`echo extras/*/`“<br>make DESTDIR=/ EXTRAS=”`echo extras/*/`“ install<br>cp -v etc/udev/rules.d/[0-9]* /etc/udev/rules.d/<br>cd udev-config-6.3<br>make install<br>make install-doc<br>make install-extra-doc<br>cd ..<br>install -m644 -v docs/writing_udev_rules/index.html \<br>    /usr/share/doc/udev-113/index.html  </p>
</blockquote>
<p>Util-linux-2.12r</p>
<blockquote>
<p>包含许多工具。其中比较重要的是加载、卸载、格式化、分区和管理硬盘驱动器，打开 tty 端口和得到内核消息</p>
<p>命令位置：/usr/bin</p>
<p>命令：mount、whereis、cfdisk、<br>-—————<br>sed -e ‘s@etc/adjtime@var/lib/hwclock/adjtime@g’ \<br>    -i $(grep -rl ‘/etc/adjtime’ .)<br>mkdir -pv /var/lib/hwclock<br>patch -Np1 -i ../util-linux-2.12r-cramfs-1.patch<br>patch -Np1 -i ../util-linux-2.12r-lseek-1.patch<br>./configure<br>make HAVE_KILL=yes HAVE_SLN=yes<br>make HAVE_KILL=yes HAVE_SLN=yes install  </p>
</blockquote>
<p>Vim-7.1 </p>
<blockquote>
<p>强大的文本编辑器<br>-————-<br>patch -Np1 -i ../vim-7.1-fixes-1.patch<br>patch -Np1 -i ../vim-7.1-mandir-1.patch<br>echo ‘#define SYS_VIMRC_FILE “/etc/vimrc”‘ &gt;&gt; src/feature.h<br>./configure –prefix=/usr –enable-multibyte<br>make<br>make install<br>ln -sv vim /usr/bin/vi<br>for L in “” fr it pl ru; do<br>    ln -sv vim.1 /usr/share/man/$L/man1/vi.1<br>done<br>ln -sv ../vim/vim71/doc /usr/share/doc/vim-7.1  </p>
<blockquote>
<p>cat &gt; /etc/vimrc &lt;&lt; “EOF”<br>“ Begin /etc/vimrc  </p>
<p>set nocompatible<br>set backspace=2<br>syntax on<br>if (&amp;term == “iterm”) || (&amp;term == “putty”)<br>  set background=dark<br>endif  </p>
<p>“ End /etc/vimrc<br>EOF  </p>
</blockquote>
</blockquote>
<p>2、清理</p>
<p>logout</p>
<p>mv $LFS/tools $LFS/root</p>
<p>mv $LFS/sources $LFS/root</p>
<p>mv $LFS/build $LFS/root</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ocs-agent 安装过程</title>
    <url>/posts/380620447/</url>
    <content><![CDATA[<p>desktop:~/Ocsinventory-Agent-2.0rc4$ sudo make install</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Compress.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/postinst.pl</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Logger.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/LoggerBackend/Stderr.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/LoggerBackend/File.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/LoggerBackend/Syslog.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Network.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Hooks.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Config.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/AccountConfig.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Common.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/AccountInfo.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/IpDiscover.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/DeviceID.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/AccessLog.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/Parallels.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/Libvirt.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/SolarisZones.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/VmWareDesktop.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/Xen.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/VirtualBox.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/VmWareESX.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/Vmsystem.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/Qemu.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/Virtualization/Xen/XM.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/IpDiscover/IpDiscover.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/IpDiscover/Nmap.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Domains.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Controllers.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/IPv4.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Storages.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Mem.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Networks.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Packages.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Bios.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Users.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Slots.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Memory.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/Drives.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Solaris/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Domains.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/IPv4.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Sounds.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Storages.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Modems.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Mem.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Networks.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Controller.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Videos.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Users.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Slots.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Software.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Hardware.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Memory.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/Drives.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/AIX/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Domains.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/IPv4.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Printers.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Storages.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Mem.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Uptime.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Networks.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Packages.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Bios.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Sound.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Hostname.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Video.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/Drives.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/MacOS/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Ipmi.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Hostname.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Users.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Dmidecode.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Screen.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Packaging.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Lspci.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Processes.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Lspci/Controllers.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Lspci/Sounds.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Lspci/Modems.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Lspci/Videos.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Printers/Cups.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Packaging/BSDpkg.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Packaging/Pacman.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Packaging/RPM.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Packaging/ByHand.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Packaging/Deb.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Packaging/Gentoo.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Dmidecode/Ports.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Dmidecode/UUID.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Dmidecode/Bios.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Dmidecode/Slots.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Generic/Dmidecode/Memory.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Domains.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/IPv4.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Storages.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Mem.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Networks.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Bios.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Controller.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Slots.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Software.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Memory.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/Drives.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/README</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/HPUX/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Domains.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Sounds.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Storages.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Mem.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Uptime.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Sys.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Drives.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/ARM.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/MIPS.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/PowerPC.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/SPARC.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/m68k.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/Alpha.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/i386.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/MIPS/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/ARM/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/Alpha/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/PowerPC/Various.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/PowerPC/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/i386/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/m68k/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Archs/SPARC/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Storages/3ware.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Storages/Lsilogic.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Storages/Adaptec.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Storages/ServeRaid.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Storages/HP.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/LSB.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Redhat.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Trustix.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Ubuntu.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/ArchLinux.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Mandrake.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/VmWare.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Fedora.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Gentoo.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Mandriva.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Knoppix.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Debian.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/SuSE.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Distro/NonLSB/Slackware.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Network/IPv4.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/Linux/Network/Networks.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Domains.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/IPv4.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Storages.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Mem.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Uptime.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Networks.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Sys.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Drives.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/CPU.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Archs/Sparc.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Archs/Sgimips.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Archs/Alpha.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Backend/OS/BSD/Archs/I386.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/XML/Inventory.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/XML/Response.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/XML/Prolog.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/XML/SimpleMessage.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/XML/Response/Inventory.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/XML/Response/Prolog.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Download.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Example.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/If_Mib.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/11.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/3224.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/641.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/9.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/311.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/7244.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/8072.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/3375.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/2620.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/Printer_Mib.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/Host_Resources_Mib.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/Entity_Mib.pm</p>
<p>Installing /usr/local/share/perl/5.10.1/Ocsinventory/Agent/Modules/Snmp/Default.pm</p>
<p>Installing /usr/local/man/man1/ocsinventory-agent.1p</p>
<p>Installing /usr/local/man/man3/Ocsinventory::Agent::XML::Inventory.3pm</p>
<p>Installing /usr/local/man/man3/Ocsinventory::Agent::Common.3pm</p>
<p>Installing /usr/local/bin/ipdiscover</p>
<p>Installing /usr/local/bin/ocsinventory-agent</p>
<p>#安装在/usr/local/share/perl下面</p>
<p>Appending installation info to /usr/local/lib/perl/5.10.1/perllocal.pod</p>
<p>[ ! -f run-postinst ] || /usr/bin/perl postinst.pl</p>
<p>Do you want to configure the agent   #配置agent</p>
<p>Please enter ‘y’ or ‘n’?&gt; [y] y</p>
<p>Where do you want to write the configuration file?</p>
<p> 0 -&gt; /etc/ocsinventory</p>
<p> 1 -&gt; /usr/local/etc/ocsinventory</p>
<p> 2 -&gt; /etc/ocsinventory-agent</p>
<p>?&gt;  2  #配置文件放在/etc/ocsinventory-agent目录下</p>
<p>Do you want to create the directory /etc/ocsinventory-agent?</p>
<p>Please enter ‘y’ or ‘n’?&gt; [y] y</p>
<p>[info] The config file will be written in /etc/ocsinventory/ocsinventory-agent.cfg,</p>
<p>What is the address of your ocs server?&gt; [ocsinventory-ng] ywz-desktop  #设置服务器名</p>
<p>Do you need credential for the server? (You probably don’t) #设置证书</p>
<p>Please enter ‘y’ or ‘n’?&gt; [n] n</p>
<p>Do you want to apply an administrative tag on this machine  #设置标签</p>
<p>Please enter ‘y’ or ‘n’?&gt; [y] y</p>
<p>tag?&gt;  test</p>
<p>ocsinventory agent presents: /usr/local/bin/ocsinventory-agent</p>
<p>Do yo want to install the cron task in /etc/cron.d #建立例行性命令</p>
<p>Please enter ‘y’ or ‘n’?&gt; [y] y</p>
<p>Where do you want the agent to store its files? (You probably don’t need to change it)?&gt; [/var/lib/ocsinventory-agent] </p>
<p>Do you want to create the /var/lib/ocsinventory-agent directory?</p>
<p>Please enter ‘y’ or ‘n’?&gt; [y] y</p>
<p>New settings written! Thank you for using OCS Inventory</p>
<p>Should I remove the old linux_agent</p>
<p>Please enter ‘y’ or ‘n’?&gt; [n] y</p>
<p>/etc/ocsinventory-client</p>
<p>/etc/logrotate.d/ocsinventory-client</p>
<p>/usr/sbin/ocsinventory-client.pl</p>
<p>/etc/cron.d/ocsinventory-client</p>
<p>/bin/ocsinv</p>
<p>done</p>
<p>Do you want to use OCS-Inventory software deployment feature?</p>
<p>Please enter ‘y’ or ‘n’?&gt; [y] y</p>
<p>Do you want to use OCS-Inventory SNMP scans feature?</p>
<p>Please enter ‘y’ or ‘n’?&gt; [y] y</p>
<p>Do you want to send an inventory of this machine?</p>
<p>Please enter ‘y’ or ‘n’?&gt; [y] y</p>
<p>[info] Accountinfo file doesn’t exist. I create an empty one.   #要安装libnet-snmp-perl</p>
<p>   -&gt;  Success!</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ocs-server 安装过程</title>
    <url>/posts/342914756/</url>
    <content><![CDATA[<p>desktop:~/XML-Entities/OCSNG_UNIX_SERVER-2.0rc4$ sudo sh ./setup.sh </p>
<p>+———————————————————-+</p>
<p>|                                                          |</p>
<p>| Welcome to OCS Inventory NG Management server setup !    |</p>
<p>|                                                          |</p>
<p>+———————————————————-+</p>
<p>Trying to determine whitch OS or Linux distribution you use</p>
<p>+———————————————————-+</p>
<p>| Checking for Apache web server binaries !                |</p>
<p>+———————————————————-+</p>
<p>CAUTION: If upgrading Communication server from OCS Inventory NG 1.0 RC2 and</p>
<p>previous, please remove any Apache configuration for Communication Server!</p>
<p>Do you wish to continue ([y]/n)?y</p>
<p>Assuming Communication server 1.0 RC2 or previous is not installed</p>
<p>on this computer.</p>
<p>Starting OCS Inventory NG Management server setup from folder /home/ywz/XML-Entities/OCSNG_UNIX_SERVER-2.0rc4</p>
<p>Storing log in file /home/ywz/XML-Entities/OCSNG_UNIX_SERVER-2.0rc4/ocs_server_setup.log</p>
<p>#1、做安装前的准备，包括数据库等</p>
<p>+———————————————————-+</p>
<p>| Checking for database server properties…               |</p>
<p>+———————————————————-+</p>
<p>Your MySQL client seems to be part of MySQL version 5.1.</p>
<p>Your computer seems to be running MySQL 4.1 or higher, good ;-)</p>
<p>#要安装mysql5.1</p>
<p>Which host is running database server [localhost] ?</p>
<p>OK, database server is running on host localhost ;-)</p>
<p>#因为是本机安装，所以就写localhost</p>
<p>On which port is running database server [3306] ?</p>
<p>OK, database server is running on port 3306 ;-)</p>
<p>#mysql服务端口：3306</p>
<p>+———————————————————-+</p>
<p>| Checking for Apache web server daemon…                 |</p>
<p>+———————————————————-+</p>
<p>Where is Apache daemon binary [/usr/sbin/apache2] ?</p>
<p>OK, using Apache daemon /usr/sbin/apache2 ;-)</p>
<p>#要安装aphche2</p>
<p>+———————————————————-+</p>
<p>| Checking for Apache main configuration file…           |</p>
<p>+———————————————————-+</p>
<p>Where is Apache main configuration file [/etc/apache2/apache2.conf] ?</p>
<p>OK, using Apache main configuration file /etc/apache2/apache2.conf ;-)</p>
<p>#apache2的配置文件在/etc/apache2/apache2.conf</p>
<p>+———————————————————-+</p>
<p>| Checking for Apache user account…                      |</p>
<p>+———————————————————-+</p>
<p>Which user account is running Apache web server [www-data] ?</p>
<p>OK, Apache is running under user account www-data ;-)</p>
<p>#apache的用户名为：www-data</p>
<p>+———————————————————-+</p>
<p>| Checking for Apache group…                             |</p>
<p>+———————————————————-+</p>
<p>Which user group is running Apache web server [www-data] ?</p>
<p>OK, Apache is running under users group www-data ;-)</p>
<p>#apache的用户组为：www-data</p>
<p>+———————————————————-+</p>
<p>| Checking for Apache Include configuration directory…   |</p>
<p>+———————————————————-+</p>
<p>Setup found Apache Include configuration directory in</p>
<p>//etc/apache2/conf.d/.</p>
<p>Setup will put OCS Inventory NG Apache configuration in this directory.</p>
<p>Where is Apache Include configuration directory [//etc/apache2/conf.d/] ?</p>
<p>OK, Apache Include configuration directory //etc/apache2/conf.d/ found ;-)</p>
<p>#apache的配置文件还包括/etc/apache2/conf.d/</p>
<p>+———————————————————-+</p>
<p>| Checking for PERL Interpreter…                         |</p>
<p>+———————————————————-+</p>
<p>Found PERL Intrepreter at &lt;/usr/bin/perl&gt; ;-)</p>
<p>Where is PERL Intrepreter binary [/usr/bin/perl] ?</p>
<p>OK, using PERL Intrepreter /usr/bin/perl ;-)</p>
<p>#要安装perl</p>
<p>Do you wish to setup Communication server on this computer ([y]/n)?y</p>
<p>#2、OCS Inventory NG Communication server安装</p>
<p>+———————————————————-+</p>
<p>| Checking for Make utility…                             |</p>
<p>+———————————————————-+</p>
<p>OK, Make utility found at &lt;/usr/bin/make&gt; ;-)</p>
<p>#要安装make</p>
<p>+———————————————————-+</p>
<p>| Checking for Apache mod_perl version…                  |</p>
<p>+———————————————————-+</p>
<p>Checking for Apache mod_perl version 1.99_22 or higher</p>
<p>Found that mod_perl version 1.99_22 or higher is available.</p>
<p>OK, Apache is using mod_perl version 1.99_22 or higher ;-)</p>
<p>#要安装libapache2-mod-perl2</p>
<p>+———————————————————-+</p>
<p>| Checking for Communication server log directory…       |</p>
<p>+———————————————————-+</p>
<p>Communication server can create detailled logs. This logs can be enabled</p>
<p>by setting interger value of LOGLEVEL to 1 in Administration console</p>
<p>menu Configuration.</p>
<p>Where to put Communication server log directory [/var/log/ocsinventory-server] ?</p>
<p>OK, Communication server will put logs into directory /var/log/ocsinventory-server ;-)</p>
<p>#Communication server的log放在/var/log/ocsinventory-server</p>
<p>+———————————————————-+</p>
<p>| Checking for required Perl Modules…                    |</p>
<p>+———————————————————-+</p>
<p>Checking for DBI PERL module…                              #要安装libdbi-perl</p>
<p>Found that PERL module DBI is available. </p>
<p>Checking for Apache::DBI PERL module…                 #要安装libapache-dbi-perl</p>
<p>Found that PERL module Apache::DBI is available.</p>
<p>Checking for DBD::mysql PERL module…                  #要安装libdbd-mysql-perl</p>
<p>Found that PERL module DBD::mysql is available.</p>
<p>Checking for Compress::Zlib PERL module…             #要安装libcompress-zlib-perl</p>
<p>Found that PERL module Compress::Zlib is available.</p>
<p>Checking for XML::Simple PERL module…                #要安装libxml-simple-perl</p>
<p>Found that PERL module XML::Simple is available.</p>
<p>Checking for Net::IP PERL module…                         #要安装libnet-ip-perl</p>
<p>Found that PERL module Net::IP is available.</p>
<p>+———————————————————-+</p>
<p>| Checking for optional Perl Modules…                    |</p>
<p>+———————————————————-+</p>
<p>Checking for SOAP::Lite PERL module…                  #要安装libsoap-lite-perl</p>
<p>Found that PERL module SOAP::Lite is available.</p>
<p>Checking for XML::Entities PERL module…               #要安装XML-Entities</p>
<p>Found that PERL module XML::Entities is available.</p>
<p>+———————————————————-+</p>
<p>| OK, looks good ;-)                                       |</p>
<p>|                                                          |</p>
<p>| Configuring Communication server Perl modules…         |</p>
<p>+———————————————————-+</p>
<p>Checking if your kit is complete…</p>
<p>Looks good</p>
<p>Writing Makefile for Apache::Ocsinventory</p>
<p>+———————————————————-+</p>
<p>| OK, looks good ;-)                                       |</p>
<p>|                                                          |</p>
<p>| Preparing Communication server Perl modules…           |</p>
<p>+———————————————————-+</p>
<p>+———————————————————-+</p>
<p>| OK, prepare finshed ;-)                                  |</p>
<p>|                                                          |</p>
<p>| Installing Communication server Perl modules…          |</p>
<p>+———————————————————-+</p>
<p>+———————————————————-+</p>
<p>| OK, Communication server Perl modules install finished;-)|</p>
<p>|                                                          |</p>
<p>| Creating Communication server log directory…           |</p>
<p>+———————————————————-+</p>
<p>Creating Communication server log directory /var/log/ocsinventory-server.</p>
<p>Fixing Communication server log directory files permissions.</p>
<p>Configuring logrotate for Communication server.</p>
<p>Removing old communication server logrotate file /etc/logrotate.d/ocsinventory-NG</p>
<p>Writing communication server logrotate to file /etc/logrotate.d/ocsinventory-server</p>
<p>#做communication server的轮替 /etc/logrotate.d/ocsinventory-server</p>
<p>+———————————————————-+</p>
<p>| OK, Communication server log directory created ;-)       |</p>
<p>|                                                          |</p>
<p>| Now configuring Apache web server…                     |</p>
<p>+———————————————————-+</p>
<p>To ensure Apache loads mod_perl before OCS Inventory NG Communication Server,</p>
<p>Setup can name Communication Server Apache configuration file</p>
<p>‘z-ocsinventory-server.conf’ instead of ‘ocsinventory-server.conf’.</p>
<p>Do you allow Setup renaming Communication Server Apache configuration file</p>
<p>to ‘z-ocsinventory-server.conf’ ([y]/n) ?y</p>
<p>OK, using ‘z-ocsinventory-server.conf’ as Communication Server Apache configuration file</p>
<p>Removing old communication server configuration to file //etc/apache2/conf.d//ocsinventory.conf</p>
<p>Writing communication server configuration to file //etc/apache2/conf.d//z-ocsinventory-server.conf</p>
<p>#communication server的配置文件/etc/apache2/conf.d/ocsinventory.conf</p>
<p>+———————————————————-+</p>
<p>| OK, Communication server setup sucessfully finished ;-)  |</p>
<p>|                                                          |</p>
<p>| Please, review //etc/apache2/conf.d//z-ocsinventory-server.conf</p>
<p>| to ensure all is good. Then restart Apache daemon.       |</p>
<p>+———————————————————-+</p>
<p>Do you wish to setup Administration Server (Web Administration Console)</p>
<p>on this computer ([y]/n)?y</p>
<p>#3、安装Administration Server</p>
<p>+———————————————————-+</p>
<p>| Checking for Administration Server directories…        |</p>
<p>+———————————————————-+</p>
<p>CAUTION: Setup now install files in accordance with Filesystem Hierarchy</p>
<p>Standard. So, no file is installed under Apache root document directory</p>
<p>(Refer to Apache configuration files to locate it). </p>
<p>#文件不放在/var/www下，放在/usr/share/ocsinventory-reports</p>
<p>#具体查看apache2的配置文件在/etc/apache2/apache2.conf和/etc/apache2/conf.d/</p>
<p>If you’re upgrading from OCS Inventory NG Server 1.01 and previous, YOU</p>
<p>MUST REMOVE (or move) directories ‘ocsreports’ and ‘download’ from Apache</p>
<p>root document directory.</p>
<p>If you choose to move directory, YOU MUST MOVE ‘download’ directory to</p>
<p>Administration Server writable/cache directory (by default</p>
<p>/var/lib/ocsinventory-reports), especialy if you use deployement feature.</p>
<p>#download文件夹要放在/var/lib/ocsinventory-reports下以做部署用</p>
<p>Do you wish to continue ([y]/n)?y</p>
<p>Assuming directories ‘ocsreports’ and ‘download’ removed from</p>
<p>Apache root document directory.</p>
<p>Where to copy Administration Server static files for PHP Web Console</p>
<p>[/usr/share/ocsinventory-reports] ?</p>
<p>#ocsinventory的控制端放在/usr/share/ocsinventory-reports</p>
<p>OK, using directory /usr/share/ocsinventory-reports to install static files ;-)</p>
<p>Where to create writable/cache directories for deployement packages,</p>
<p>IPDiscover and SNMP [/var/lib/ocsinventory-reports] ?</p>
<p>OK, writable/cache directory is /var/lib/ocsinventory-reports ;-)</p>
<p>#部署文件,IPDiscover and SNMP的相关文件放在/var/lib/ocsinventory-reports</p>
<p>+———————————————————-+</p>
<p>| Checking for required Perl Modules…                    |</p>
<p>+———————————————————-+</p>
<p>Checking for DBI PERL module…</p>
<p>Found that PERL module DBI is available.</p>
<p>Checking for DBD::mysql PERL module…</p>
<p>Found that PERL module DBD::mysql is available.</p>
<p>Checking for XML::Simple PERL module…</p>
<p>Found that PERL module XML::Simple is available.</p>
<p>Checking for Net::IP PERL module…</p>
<p>Found that PERL module Net::IP is available.</p>
<p>+———————————————————-+</p>
<p>| Installing files for Administration server…            |</p>
<p>+———————————————————-+</p>
<p>Creating PHP directory /usr/share/ocsinventory-reports/ocsreports.</p>
<p>Copying PHP files to /usr/share/ocsinventory-reports/ocsreports.</p>
<p>Fixing permissions on directory /usr/share/ocsinventory-reports/ocsreports.</p>
<p>#php文件放在/usr/share/ocsinventory-reports/ocsreports</p>
<p>Creating database configuration file /usr/share/ocsinventory-reports/ocsreports/dbconfig.inc.php.</p>
<p>#数据库配置文件放在/usr/share/ocsinventory-reports/ocsreports/dbconfig.inc.php</p>
<p>Creating IPDiscover directory /var/lib/ocsinventory-reports/ipd.</p>
<p>Fixing permissions on directory /var/lib/ocsinventory-reports/ipd.</p>
<p>#ipd文件夹放在/var/lib/ocsinventory-reports/ipd</p>
<p>Creating packages directory /var/lib/ocsinventory-reports/download.</p>
<p>Fixing permissions on directory /var/lib/ocsinventory-reports/download.</p>
<p>#部署文件放在/var/lib/ocsinventory-reports/download</p>
<p>Creating packages directory /var/lib/ocsinventory-reports/snmp.</p>
<p>Fixing permissions on directory /var/lib/ocsinventory-reports/snmp.</p>
<p>#snmp文件放在/var/lib/ocsinventory-reports/snmp</p>
<p>Configuring snmp_com.txt file</p>
<p>Configuring IPDISCOVER-UTIL Perl script.</p>
<p>Installing IPDISCOVER-UTIL Perl script.</p>
<p>Fixing permissions on IPDISCOVER-UTIL Perl script.</p>
<p>Writing Administration server configuration to file //etc/apache2/conf.d//ocsinventory-reports.conf</p>
<p>#控制端配置文件放在/etc/apache2/conf.d//ocsinventory-reports.conf</p>
<p>+———————————————————-+</p>
<p>| OK, Administration server installation finished ;-)      |</p>
<p>|                                                          |</p>
<p>| Please, review //etc/apache2/conf.d//ocsinventory-reports.conf</p>
<p>| to ensure all is good and restart Apache daemon.         |</p>
<p>|                                                          |</p>
<p>| Then, point your browser to <a href="http://server//ocsreports">http://server//ocsreports</a></p>
<p>| to configure database server and create/update schema.   |</p>
<p>+———————————————————-+</p>
<p>#网页打开<a href="http://server//ocsreports">http://server//ocsreports</a> 来配置数据库和架构</p>
<p>Setup has created a log file /home/ywz/XML-Entities/OCSNG_UNIX_SERVER-2.0rc4/ocs_server_setup.log. Please, save this file.    # 安装记录放在ocs_server_setup.log</p>
<p>If you encounter error while running OCS Inventory NG Management server,</p>
<p>we can ask you to show us his content !</p>
<p>DON’T FORGET TO RESTART APACHE DAEMON !</p>
<p>#重启apache服务</p>
<p>Enjoy OCS Inventory NG ;-)</p>
<p>总结：</p>
<p>1、要安装的软件</p>
<p>      make、mysql5、apache2、php</p>
<p>      perl、libapache2-mod-perl2、libdbi-perl、libapache-dbi-perl、libdbd-mysql-perl、</p>
<p>      libcompress-zlib-perl、libxml-simple-perl、libnet-ip-perl、libsoap-lite-perl、XML-Entities</p>
<p>2、apache的配置文件</p>
<p>      /etc/apache2/apache2.conf和/etc/apache2/conf.d/</p>
<p>3、communication server</p>
<p>     communication server的配置文件/etc/apache2/conf.d/ocsinventory.conf</p>
<p>     Communication server的log放在/var/log/ocsinventory-server</p>
<p>     communication server的轮替 /etc/logrotate.d/ocsinventory-server</p>
<p>4、Administration Server </p>
<p>     控制端配置文件放在/etc/apache2/conf.d/ocsinventory-reports.conf</p>
<p>     数据库配置文件放在/usr/share/ocsinventory-reports/ocsreports/dbconfig.inc.php</p>
<p>     文件放在/usr/share/ocsinventory-reports</p>
<p>      php文件放在/usr/share/ocsinventory-reports/ocsreports</p>
<p>      部署文件放在/var/lib/ocsinventory-reports/download</p>
<p>      ipd文件夹放在/var/lib/ocsinventory-reports/ipd</p>
<p>      snmp文件放在/var/lib/ocsinventory-reports/snmp</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>【引用】net命令用法</title>
    <url>/posts/1736813283/</url>
    <content><![CDATA[<p>大家在操作Windows 9X/NT/2000/XP/2003系统的过程中，都会或多或少会遇到这样或那样的问题；特别是网管员在维护单位的局域网或广域网时候，如果能掌握一些Windows 系统的网络命令使用技巧，常常会给工作带来极大的方便，有时能起到事倍功半的效果；本文就Net 网络命令在实际操作中使用技巧，供大家参考。</p>
<p>本</p>
<p>文</p>
<p>主</p>
<p>要</p>
<p>内</p>
<p>容</p>
<p>NET View</p>
<p>NET User</p>
<p>NET Use</p>
<p>NET Time</p>
<p>Net Start</p>
<p>Net Pause</p>
<p>Net Continue</p>
<p>NET Stop</p>
<p>Net Statistics</p>
<p>Net Share</p>
<p>Net Session</p>
<p>Net Send</p>
<p>Net Print</p>
<p>Net Name</p>
<p>Net Localgroup</p>
<p>Net Group</p>
<p>Net File</p>
<p>Net Config</p>
<p>Net Computer</p>
<p>Net Accounts</p>
<p>　我们知道NET命令是一个命令行命令，Net 命令有很多函数用于实用和核查计算机之间的NetBIOS连接，可以查看我们的管理网络环境、服务、用户、登陆等信息内容；要想获得Net 的HELP可以(1)在Windows下可以用图形的方式，开始-&gt;帮助-&gt;索引-&gt;输入NET；(2)在COMMAND下可以用字符方式：NET /?或NET或NET HELP取得相应的方法的帮助。所有Net命令接受选项/yes和/no(可缩写为/y和/n)。</p>
<p>　　下面对NET命令的不同参数的使用技巧介绍如下：</p>
<p>　　1、Net ViewI</p>
<p>　　作 用：显示域列表、计算机列表或指定计算机的共享资源列表。</p>
<p>　　命令格式：Net view [\\computername | /domain[:domainname]]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net view显示当前域的计算机列表</p>
<p>　　·\\computername 指定要查看其共享资源的计算机</p>
<p>　　·/domain[:domainname]指定要查看其可用计算机的域</p>
<p>　　例如：Net view <a href="file://ghq/">\\GHQ</a>查看GHQ计算机的共享资源列表。</p>
<p>　　　　　Net view /domain:XYZ 查看XYZ域中的机器列表。</p>
<p>　　2、Net User</p>
<p>　　作 用：添加或更改用户帐号或显示用户帐号信息。</p>
<p>　　命令格式：Net user [username [password | *] [options]] [/domain]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net user查看计算机上的用户帐号列表</p>
<p>　　·username添加、删除、更改或查看用户帐号名</p>
<p>　　·password为用户帐号分配或更改密码</p>
<p>　　·提示输入密码</p>
<p>　　·/domain在计算机主域的主域控制器中执行操作。该参数仅在 Windows NT Server 域成员的 Windows NT Workstation 计算机上可用。默认情况下，Windows NT Server 计算机在主域控制器中执行操作。注意：在计算机主域的主域控制器发生该动作。它可能不是登录域。</p>
<p>　　例如：Net user ghq123查看用户GHQ123的信息。</p>
<p>　　3、Net Use</p>
<p>　　作 用：连接计算机或断开计算机与共享资源的连接，或显示计算机的连接信息。</p>
<p>　　命令格式：Net use [devicename | *] [\\computername\sharename[\volume]] [password|*]][/user:[domainname\]username][[/delete]| [/persistent:{yes | no}]]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net use列出网络连接</p>
<p>　　·devicename指定要连接到的资源名称或要断开的设备名称</p>
<p>　　·\\computername\sharename服务器及共享资源的名称</p>
<p>　　·password访问共享资源的密码</p>
<p>　　·*提示键入密码</p>
<p>　　·/user指定进行连接的另外一个用户</p>
<p>　　·domainname指定另一个域</p>
<p>　　·username指定登录的用户名</p>
<p>　　·/home将用户连接到其宿主目录</p>
<p>　　·/delete取消指定网络连接</p>
<p>　　·/persistent控制永久网络连接的使用。</p>
<p>　　例如：Net use f: <a href="file://ghq/TEMP">\\GHQ\TEMP</a> 将<a href="file://ghq/TEMP">\\GHQ\TEMP</a>目录建立为F盘</p>
<p>　　　　　Net use f: \GHQ\TEMP /delete 断开连接。</p>
<p>　　4、Net Time</p>
<p>　　作 用：使计算机的时钟与另一台计算机或域的时间同步。</p>
<p>　　命令格式：Net time [\\computername | /domain[:name]] [/set]</p>
<p>　　有关参数说明：</p>
<p>　　·\\computername要检查或同步的服务器名</p>
<p>　　·/domain[:name]指定要与其时间同步的域</p>
<p>　　·/set使本计算机时钟与指定计算机或域的时钟同步。</p>
<p>　　5、Net Start</p>
<p>　　作 用：启动服务，或显示已启动服务的列表。</p>
<p>　　命令格式：Net start service</p>
<p>　　6、Net Pause</p>
<p>　　作 用：暂停正在运行的服务。</p>
<p>　　命令格式：Net pause service</p>
<p>　　7、Net Continue</p>
<p>　　作 用：重新激活挂起的服务。</p>
<p>　　命令格式：Net continue service 　　</p>
<p>　　8、Net Stop</p>
<p>　　作 用：停止 Windows NT/2000/2003 网络服务。</p>
<p>　　命令格式：Net stop service</p>
<p>　　下面我们来看看上面四条命令里服务包含哪些服务：</p>
<p>　　(1)alerter(警报)；</p>
<p>　　(2)client service for Netware(Netware 客户端服务)</p>
<p>　　(3)clipbook server(剪贴簿服务器)</p>
<p>　　(4)computer browser(计算机浏览器)</p>
<p>　　(5)directory replicator(目录复制器)</p>
<p>　　(6)ftp publishing service (ftp )(ftp 发行服务)</p>
<p>　　(7)lpdsvc</p>
<p>　　(8)Net logon(网络登录)</p>
<p>　　(9)Network dde(网络 dde)</p>
<p>　　(10)Network dde dsdm(网络 dde dsdm)</p>
<p>　　(11)Network monitor agent(网络监控代理)</p>
<p>　　(12)ole(对象链接与嵌入)</p>
<p>　　(13)remote access connection manager(远程访问连接管理器)</p>
<p>　　(14)remote access isnsap service(远程访问 isnsap 服务)</p>
<p>　　(15)remote access server(远程访问服务器)</p>
<p>　　(16)remote procedure call (rpc) locator(远程过程调用定位器)</p>
<p>　　(17)remote procedure call (rpc) service(远程过程调用服务)</p>
<p>　　(18)schedule(调度)</p>
<p>　　(19)server(服务器)</p>
<p>　　(20)simple tcp/ip services(简单 TCP/IP 服务)</p>
<p>　　(21)snmp</p>
<p>　　(22)spooler(后台打印程序)</p>
<p>　　(23)tcp/ip Netbios helper(TCP/IP NETBIOS 辅助工具)</p>
<p>　　(24)ups</p>
<p>　　(25)workstation(工作站)</p>
<p>　　(26)messenger(信使)</p>
<p>　　(27)dhcp client</p>
<p>　　9、Net Statistics</p>
<p>　　作 用：显示本地工作站或服务器服务的统计记录。</p>
<p>　　命令格式：Net statistics [workstation | server]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net statistics列出其统计信息可用的运行服务</p>
<p>　　·workstation显示本地工作站服务的统计信息</p>
<p>　　·server显示本地服务器服务的统计信息</p>
<p>　　例如：Net statistics server | more显示服务器服务的统计信息。</p>
<p>　　10、Net Share</p>
<p>　　作 用：创建、删除或显示共享资源。</p>
<p>　　命令格式：Net share sharename=drive:path [/users:number | /unlimited] [/remark:”text”]</p>
<p>　　有关参数说明：</p>
<p>　　· 键入不带参数的Net share显示本地计算机上所有共享资源的信息</p>
<p>　　· sharename是共享资源的网络名称</p>
<p>　　· drive:path指定共享目录的绝对路径</p>
<p>　　· /users:number设置可同时访问共享资源的最大用户数</p>
<p>　　· /unlimited不限制同时访问共享资源的用户数</p>
<p>　　· /remark:”text “添加关于资源的注释，注释文字用引号引住</p>
<p>　　例如： Net share yesky=c:\temp /remark:”my first share”</p>
<p>　　以yesky为共享名共享C:\temp</p>
<p>　　Net share yesky /delete停止共享yesky目录</p>
<p>　　11、Net Session</p>
<p>　　作 用：列出或断开本地计算机和与之连接的客户端的会话。</p>
<p>　　命令格式：Net session [\\computername] [/delete]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net session显示所有与本地计算机的会话的信息。</p>
<p>　　·\\computername标识要列出或断开会话的计算机。</p>
<p>　　·/delete结束与 \computername 计算机会话并关闭本次会话期间计算机的所有打开文件。如果省略\computername 参数，将取消与本地计算机的所有会话。</p>
<p>　　例如：Net session <a href="file://ghq/">\\GHQ</a>要显示计算机名为GHQ的客户端会话信息列表。</p>
<p>　12、Net Send</p>
<p>　　作 用：向网络的其他用户、计算机或通信名发送消息。</p>
<p>　　命令格式：Net send {name | * | /domain[:name] | /users} message</p>
<p>　　有关参数说明：</p>
<p>　　·name要接收发送消息的用户名、计算机名或通信名</p>
<p>　　·* 将消息发送到组中所有名称</p>
<p>　　·/domain[:name]将消息发送到计算机域中的所有名称</p>
<p>　　·/users将消息发送到与服务器连接的所有用户</p>
<p>　　·message作为消息发送的文本</p>
<p>　　例如：Net send /users server will shutdown in 10 minutes.给所有连接到服务器的用户发送消息。</p>
<p>　　13、Net Print</p>
<p>　　作 用：显示或控制打印作业及打印队列。</p>
<p>　　命令格式：Net print [\\computername ] job# [/hold | /release | /delete]</p>
<p>　　有关参数说明：</p>
<p>　　·computername共享打印机队列的计算机名</p>
<p>　　·sharename打印队列名称</p>
<p>　　·job#在打印机队列中分配给打印作业的标识号</p>
<p>　　·/hold使用 job# 时，在打印机队列中使打印作业等待</p>
<p>　　·/release释放保留的打印作业</p>
<p>　　·/delete从打印机队列中删除打印作业</p>
<p>　　例如：Net print <a href="file://ghq/HP8000">\\GHQ\HP8000</a>列出<a href="file://ghq/">\\GHQ</a>计算机上HP8000打印机队列的目录。</p>
<p>　　14、Net Name</p>
<p>　　作 用：添加或删除消息名（有时也称别名），或显示计算机接收消息的名称列表。</p>
<p>　　命令格式：Net name [name [/add | /delete]]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net name列出当前使用的名称</p>
<p>　　·name指定接收消息的名称</p>
<p>　　·/add将名称添加到计算机中</p>
<p>　　·/delete从计算机中删除名称</p>
<p>　　15、Net Localgroup</p>
<p>　　作 用：添加、显示或更改本地组。</p>
<p>　　命令格式：Net localgroup groupname {/add [/comment:”text “] | /delete} [/domain]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net localgroup显示服务器名称和计算机的本地组名称</p>
<p>　　·groupname要添加、扩充或删除的本地组名称</p>
<p>　　·/comment: “text “为新建或现有组添加注释</p>
<p>　　·/domain在当前域的主域控制器中执行操作，否则仅在本地计算机上执行操作</p>
<p>　　·name [ …]列出要添加到本地组或从本地组中删除的一个或多个用户名或组名</p>
<p>　　·/add将全局组名或用户名添加到本地组中</p>
<p>　　·/delete从本地组中删除组名或用户名</p>
<p>　　例如：Net localgroup ggg /add 将名为ggg的本地组添加到本地用户帐号数据库；</p>
<p>　　Net localgroup ggg 显示ggg本地组中的用户。</p>
<p>　　16、Net Group</p>
<p>　　作 用：在 Windows NT/2000/2003 Server 域中添加、显示或更改全局组。</p>
<p>　　命令格式：Net group groupname {/add [/comment:”text “] | /delete} [/domain]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net group显示服务器名称及服务器的组名称</p>
<p>　　·groupname要添加、扩展或删除的组</p>
<p>　　·/comment:”text “为新建组或现有组添加注释</p>
<p>　　·/domain在当前域的主域控制器中执行该操作，否则在本地计算机上执行操作</p>
<p>　　·username[ …]列表显示要添加到组或从组中删除的一个或多个用户</p>
<p>　　·/add添加组或在组中添加用户名</p>
<p>　　·/delete删除组或从组中删除用户名</p>
<p>　　例如：Net group ggg GHQ1 GHQ2 /add将现有用户帐号GHQ1和GHQ2添加到本地计算机的ggg组。</p>
<p>　　17、Net File</p>
<p>　　作 用：显示某服务器上所有打开的共享文件名及锁定文件数。</p>
<p>　　命令格式：Net file [id [/close]]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net file获得服务器上打开文件的列表</p>
<p>　　·id文件标识号</p>
<p>　　·/close关闭打开的文件并释放锁定记录</p>
<p>　　18、Net Config</p>
<p>　　作 用：显示当前运行的可配置服务，或显示并更改某项服务的设置。</p>
<p>　　命令格式：Net config [service [options]]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net config显示可配置服务的列表</p>
<p>　　·service通过Net config命令进行配置的服务(server或workstation)</p>
<p>　　·options服务的特定选项</p>
<p>　　19、Net Computer</p>
<p>　　作 用：从域数据库中添加或删除计算机。</p>
<p>　　命令格式：Net computer <a href="file://computername/">\\computername</a> {/add | /del}</p>
<p>　　有关参数说明：</p>
<p>　　·\\computername指定要添加到域或从域中删除的计算机</p>
<p>　　·/add将指定计算机添加到域</p>
<p>　　·/del将指定计算机从域中删除</p>
<p>　　例如：Net computer <a href="file://js/">\\js</a> /add将计算机js 添加到登录域。</p>
<p>　　20、Net Accounts</p>
<p>　　作 用：更新用户帐号数据库、更改密码及所有帐号的登录要求。</p>
<p>　　命令格式：Net accounts [/forcelogoff:{minutes | no}] [/minpwlen:length] [/maxpwage:{days | unlimited}] [/minpwage:days] [/uniquepw:number] [/domain]</p>
<p>　　有关参数说明：</p>
<p>　　·键入不带参数的Net accounts显示当前密码设置、登录时限及域信息</p>
<p>　　·/forcelogoff:{minutes | no}设置当用户帐号或有效登录时间过期时</p>
<p>　　·/minpwlen:length设置用户帐号密码的最少字符数</p>
<p>　　·/maxpwage:{days | unlimited}设置用户帐号密码有效的最大天数</p>
<p>　　·/minpwage:days设置用户必须保持原密码的最小天数</p>
<p>　　·/uniquepw:number要求用户更改密码时，必须在经过number次后才能重复使用与之相同的密码</p>
<p>　　·/domain在当前域的主域控制器上执行该操作</p>
<p>　　·/sync当用于主域控制器时，该命令使域中所有备份域控制器同步</p>
<p>　　例如：Net accounts /minpwlen:8 将用户帐号密码的最少字符数设置为8。</p>
<p>　　当然Net命令具体在Win98/NT/2000/XP/2003环境中使用，可能会存在一些差异，请大家参考有关的资料说明，在此就不多说了。</p>
<p>　　下面是一个将Net、ping 和ipconfig 命令组合起来使用，测试局域网的连通性，判定远程计算机Microsoft 网络服务的文件和打印机有无共享的实际例子。仅供同志们在学习操作Net网络命令做参考，具体步骤如下：</p>
<p>　　1）首先我们要使用 Ping 命令测试 TCP/IP 的连接性，然后用 ipconfig 命令的显示，以确保网卡不处于“媒体已断开”状态。</p>
<p>　　2）打开DOS命令提示符，然后使用IP地址对所需主机进行 Ping 命令测试。</p>
<p>　　如果 Ping 命令失败，出现“Request timed out”消息，请验证主机 IP 地址是否正确，主机是否运行，以及该计算机和主机之间的所有网关（路由器）是否运行。</p>
<p>　　3）要使用 Ping 命令测试主机名称解析功能，请使用主机名称 ping 所需的主机。</p>
<p>如果 Ping 命令失败，出现“Unable to resolve target system name”消息，请验证主机名称是否正确，以及主机名称是否能被 DNS 服务器解析。</p>
<p>　　4）要使用Net view 命令测试 TCP/IP 连接，请打开命令提示符，然后键入 Net view\\计算机名称。Net view 命令将通过建立临时连接，列出使用 Windows XP/NT/2000/2003 的计算机上的文件和打印共享。如果在指定的计算机上没有文件或打印共享， Net view 命令将显示“There are no entries in the list”消息。</p>
<p>如果 Net view 命令失败，出现“System error 53 has occurred”消息，请验证计算机名称是否正确，使用 Windows XP/NT/2000/2003 的计算机是否运行，以及该计算机和使用 Windows XP/NT/2000/2003 的计算机之间的所有网关（路由器）是否运行。</p>
<p>　　如果Net view 命令失败，出现“System error 5 has occurred.Access is denied.”消息，请验证您登录所用的帐户是否具有查看远程计算机上共享的权限。</p>
<p>　　要进一步解决连通性问题，请执行以下操作：</p>
<p>　　a)使用 Ping 命令 ping 计算机名称。</p>
<p>　　如果 Ping 命令失败，出现“Unable to resolve target system name”消息，则计算机名称无法解析为 IP 地址。</p>
<p>　　b)使用Net view 命令和运行 Windows XP/NT/2000/2003 的计算机的 IP 地址，如下所示：</p>
<p>　　Net view <a href="file://ip/">\\IP</a> 地址；如果Net view 命令成功，那么计算机名称 解析成错误的 IP 地址。</p>
<p>　　如果Net view 命令失败，出现“System error 53 has occurred”消息，则说明远程计算机可能没有运行 Microsoft 网络服务的文件和打印机共享</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]百万级访问网站前期的技术准备</title>
    <url>/posts/1844117346/</url>
    <content><![CDATA[<p>转载自：<a href="http://zhiyi.us/category/internet">http://zhiyi.us/category/internet</a><br>对互联网有了解的人都有自己的想法，有人就把想法付诸实现，做个网站然后开始运营。其实从纯网站技术上来说，因为开源模式的发展，现在建一个小网站已经很简单也很便宜。当访问量到达一定数量级的时候成本就开始飙升了，问题也开始显现了。因为带宽的增加、硬件的扩展、人员的扩张所带来的成本提高是显而易见的，而还有相当大的一部分成本是因为代码重构、架构重构，甚至底层开发语言更换引起的，最惨的就是数据丢失，辛辛苦苦好几年，一夜回到创业前。  </p>
<p>减少成本就是增加利润。很多事情，我们在一开始就可以避免，先打好基础，往后可以省很多精力，少操很多心。  </p>
<p>假设你是一个参与创业的技术人员，当前一穷二白，什么都要自己做，自己出钱，初期几十万的资金，做一个应用不是特别复杂的网站，那么就要注意以下几点：<br>一、开发语言  </p>
<p>一般来说，技术人员（程序员）创业都是根据自己技术背景选择自己最熟悉的语言，不过考虑到不可能永远是您一个人写程序，这点还得仔细想想。无论用什么语言，最终代码质量是看管理，所以我们还是从纯语言层面来说实际一点。现在流行的java、php、.net、python、ruby都有自己的优劣，python和ruby，现在人员还是相对难招一些，性能优化也会费些力气，.net平台买不起windows server。java、php用的还是最多。对于初期，应用几乎都是靠前端支撑的网站来说，php的优势稍大一些，入门简单、设计模式简单、写起来快、性能足够等，不过不注重设计模式也是它的劣势，容易变得松散，隐藏bug稍多、难以维护。java的优势在于整套管理流程已经有很多成熟工具来辅助，强类型也能避免一些弱智BUG，大多数JAVA程序员比较注重设计模式，别管实不实际，代码格式看起来还是不错的。这也是个劣势，初学者可能太注重模式而很难解决实际需求。  </p>
<p>前端不只是html、css这类。整个负责跟用户交互的部分都是前端，包括处理程序。这类程序还是建议用php，主要原因就是开发迅速、从业人员广泛。至于后端例如行为分析、银行接口、异步消息处理等，随便用什么程序，那个只能是根据不同业务需求来选择不同语言了。<br>二、代码版本管理  </p>
<p>如果开发人员之间的网络速度差不多，就SVN；比较分散例如跨国，就hg。大多数人还是svn的.  </p>
<p>假设选了svn，那么有几点考虑。一是采用什么树结构。初期可能只有一条主干，往后就需要建立分支，例如一条开发分支，一条上线分支，再往后，可能要每个小组一个分支。建议一开始人少时选择两条分支，开发和线上，每个功能本地测试无误后提交到开发分支，最后统一测试，可以上线时合并到上线分支。如果喜欢把svn当做移动硬盘用，写一点就commit一次也无所谓，就是合并的时候头大一些，这些人可以自己建个分支甚至建立个本地代码仓库，随便往自己的分支提交，测试完毕后再提交到开发分支上。  </p>
<p>部署，可以手工部署也可以自动部署。手工部署相对简单，一般是直接在服务器上svn update，或者找个新目录svn checkout，再把web root给ln -s过去。应用越复杂，部署越复杂，没有什么统一标准，只要别再用ftp上传那种形式就好，一是上传时文件引用不一致错误率增加，二是很容易出现开发人员的版本跟线上版本不一致，导致本来想改个错字结果变成回滚的杯具。如果有多台服务器还是建议自动部署，更换代码的机器从当前服务池中临时撤出，更新完毕后再重新加入。  </p>
<p>不管项目多小，养成使用版本管理的好习惯，最起码还可以当做你的备份，我的 <a href="http://zhiyi.us/">http://zhiyi.us</a> 虽然就是一个wordpress，可还是svn了，只改动一两句css那也是劳动成果。<br>三、服务器硬件  </p>
<p>别羡慕大客户和有钱人，看看机房散户区，一台服务器孤独的支撑的网站数不清。如果资金稍微充足，建议至少三台的标准配置，分别用作web处理、数据库、备份。web服务器至少要8G内存，双sata raid1，如果经济稍微宽松，或静态文件或图片多，则15k sas raid1+0。数据库至少16G内存，15k sas raid 1+0。备份服务器最好跟数据库服务器同等配置。硬件可以自己买品牌的底板，也就是机箱配主板和硬盘盒，CPU内存硬盘都自己配，也可以上整套品牌，也可以兼容机。三台机器，市场行情6、7万也就配齐了。  </p>
<p>web服务器可以既跑程序又当内存缓存，数据库服务器则只跑主数据库（假如是MySQL的话），备份服务器干的活就相对多一些，web配置、缓存配置、数据库配置都要跟前两台一致，这样WEB和数据库任意一台出问题，把备份服务器换个ip就切换上去了。备份策略，可以drbd，可以rsync，或者其他的很多很多的开源备份方案可选择。rsync最简单，放cron里自己跑就行。备份和切换，建议多做测试，选最安全最适合业务的，并且尽可能异地备份。<br>四、机房  </p>
<p>三种机房尽量不要选：联通访问特别慢的电信机房、电信访问特别慢的联通机房、电信联通访问特别慢的移动或铁通机房。那网通机房呢？亲，网通联通N久以前合并改叫联通了。多多寻找，实地参观，多多测试，多方打探，北京、上海、广州等各个主节点城市，还是有很多优质机房的，找个网络质量好，管理严格的机房，特别是管理要严格，千万别网站无法访问了，打个电话过去才知道别人维护时把你网线碰掉了，这比DOS都头疼。自己扯了几根光纤就称为机房的，看您抗风险程度和心理素质了。机房可以说是非常重要，直接关系到网站访问速度，网站访问速度直接关系到用户体验，我可以翻墙看风景，但买个网游vpn才能打开你这个还不怎么知名的网站就有难度了。或许您网站的ajax很出色，可是document怎么也不ready，一些代码永远绝缘于用户。<br>五、架构  </p>
<p>初期架构一般比较简单，web负载均衡+数据库主从+缓存+分布式存储+队列。大方向上也确实就这几样东西，细节上也无数文章都重复过了，按照将来会有N多WEB，N多主从关系，N多缓存，N多xxx设计就行，基本方案都是现成的，只是您比其他人厉害之处就在于设计上考虑到缓存失效时的雪崩效应、主从同步的数据一致性和时间差、队列的稳定性和失败后的重试策略、文件存储的效率和备份方式等等意外情况。缓存总有一天会失效，数据库复制总有一天会断掉，队列总有一天会写不进去，电源总有一天会烧坏。根据墨菲定律，如果不考虑这些，网站早晚会成为茶几。<br>六、服务器软件  </p>
<p>Linux、nginx、php、mysql，几乎是标配，我们除了看名字，还得选版本。Linux发行版众多，只要没特殊要求，就选个用的人最多的，社区最活跃的，配置最方便的，软件包最全最新的，例如debian、ubuntu。至于RHEL之类的嘛，你用只能在RHEL上才能运行的软件么？剩下的nginx、php、mysql、activemq、其他的等等，除非你改过这些软件或你的程序真的不兼容新版本，否则尽量版本越新越好，版本新，意味着新特性增多、BUG减少、性能增加。总有些道听途说的人跟你说老的版本稳定。所谓稳定，是相对于特殊业务来说的，而就一个php写的网站，大多数人都没改过任何服务器软件源代码，绝大多数情况是能平稳的升级到新版本的。类似于jdk5到 jdk6，python2到python3这类变动比较大的升级还是比较少见的。看看ChangeLog，看看升级说明，结合自己情况评估一下，越早升级越好，别人家都用php6写程序了这边还php4的逛游呢。优秀的开源程序升级还是很负责任的，看好文档，别怕。  </p>
<p>以上这六点准备完毕，现在我们有了运行环境，有了基本架构骨架，有了备份和切换方案，应该开始着手设计开发方面的事情了。开发方面的事情无数，下一篇会先说一些重点。  </p>
<p>七、数据库  </p>
<p>几乎所有操作最后都要落到数据库身上，它又最难扩展（存储也挺难）。对于mysql，什么样的表用myisam，什么样的表用innodb，在开发之前要确定。复制策略、分片策略，也要确定。表引擎方面，一般，更新不多、不需要事务的表可以用myisam，需要行锁定、事务支持的，用innodb。 myisam的锁表不一定是性能低下的根源，innodb也不一定全是行锁，具体细节要多看相关的文档，熟悉了引擎特性才能用的更好。现代WEB应用越来越复杂了，我们设计表结构时常常设计很多冗余，虽然不符合传统范式，但为了速度考虑还是值得的，要求高的情况下甚至要杜绝联合查询。编程时得多注意数据一致性。  </p>
<p>复制策略方面，多主多从结构也最好一开始就设计好，代码直接按照多主多从来编写，用一些小技巧来避免复制延时问题，并且还要解决多数据库数据是否一致，可以自己写或者找现成的运维工具。  </p>
<p>分片策略。总会有那么几个表数据量超大，这时分片必不可免。分片有很多策略，从简单的分区到根据热度自动调整，依照具体业务选择一个适合自己的。避免自增ID作为主键，不利于分片。  </p>
<p>用存储过程是比较难扩展的，这种情形多发生于传统C/S，特别是OA系统转换过来的开发人员。低成本网站不是一两台小型机跑一个数据库处理所有业务的模式，是机海作战。方便水平扩展比那点预分析时间和网络传输流量要重要的多的多。  </p>
<p>NoSQL。这只是一个概念。实际应用中，网站有着越来越多的密集写操作、上亿的简单关系数据读取、热备等，这都不是传统关系数据库所擅长的，于是就产生了很多非关系型数据库，比如Redis/TC&amp;TT/MongoDB/Memcachedb等，在测试中，这些几乎都达到了每秒至少一万次的写操作，内存型的甚至5万以上。例如MongoDB，几句配置就可以组建一个复制+自动分片+failover的环境，文档化的存储也简化了传统设计库结构再开发的模式。很多业务是可以用这类数据库来替代mysql的。<br>八、缓存。  </p>
<p>数据库很脆弱，一定要有缓存在前面挡着，其实我们优化速度，几乎就是优化缓存，能用缓存的地方，就不要再跑到后端数据库那折腾。缓存有持久化缓存、内存缓存，生成静态页面是最容易理解的持久化缓存了，还有很多比如varnish的分块缓存、前面提到的memcachedb等，内存缓存，memcached首当其冲。缓存更新可用被动更新和主动更新。被动更新的好处是设计简单，缓存空了就自动去数据库取数据再把缓存填上，但容易引发雪崩效应，一旦缓存大面积失效，数据库的压力直线上升很可能挂掉。主动缓存可避免这点但是可能引发程序取不到数据的问题。这两者之间如何配合，程序设计要多动脑筋。<br>九、队列。  </p>
<p>用户一个操作很可能引发一系列资源和功能的调动，这些调动如果同时发生，压力无法控制，用户体验也不好，可以把这样一些操作放入队列，由另几个模块去异步执行，例如发送邮件，发送手机短信。开源队列服务器很多，性能要求不高用数据库当做队列也可以，只要保证程序读写队列的接口不变，底层队列服务可随时更换就可以，类似Zend Framework里的Zend_Queue类，java.util.Queue接口等。<br>十、文件存储。  </p>
<p>除了结构化数据，我们经常要存放其他的数据，像图片之类的。这类数据数量繁多、访问量大。典型的就是图片，从用户头像到用户上传的照片，还要生成不同的缩略图尺寸。存储的分布几乎跟数据库扩展一样艰难。不使用专业存储的情况下，基本都是靠自己的NAS。这就涉及到结构。拿图片存储举例，图片是非常容易产生热点的，有些图片上传后就不再有人看，有些可能每天被访问数十万次，而且大量小文件的异步备份也很耗费时间。  </p>
<p>为了将来图片走cdn做准备，一开始最好就将图片的域名分开，且不用主域名。很多网站都将cookie设置到了.domain.ltd，如果图片也在这个域名下，很可能因为cookie而造成缓存失效，并且占多余流量，还可能因为浏览器并发线程限制造成访问缓慢。  </p>
<p>如果用普通的文件系统存储图片，有一个简单的方法。计算文件的hash值，比如md5，以结果第一位作为第一级目录，这样第一级有16个目录。从0 到F，可以把这个字母作为域名，0.yourimg.com到f.yourimg.com（客户端dns压力会增大），还可以扩展到最多16个NAS集群上。第二级可用年月例如，201011，第三级用日，第四级可选，根据上传量，比如am/pm，甚至小时。最终的目录结构可能会是 e/201008/25/am/e43ae391c839d82801920cf.jpg。rsync备份时可以用脚本只同步某年某日某时的文件，避免计算大量文件带来的开销。当然最好是能用专门的分布式文件系统或更专业点的存储解决方案。  </p>
<p>下面，我们要谈谈代码了。  </p>
<p>这一系列的最后一篇写给普通编程人员，如果不感兴趣可直接看本文最后几段。  </p>
<p>开始设计代码结构之前，先回顾一下之前准备过的事情：我们有负载均衡的WEB服务器，有主从DB服务器并可能分片，有缓存，有可扩展的存储。在组织代码的各个方面，跟这些准备息息相关，我一二三的列出来分别说，并且每一条都以“前面讲到”这个经典句式开头，为了方便对照。  </p>
<p>别着急看经典句式，我思维跳跃了，插一段。实际开发中，我们总会在性能和代码优雅性上作折中。对于当今的计算机和语言解释器，多几层少几层对象调用、声明变量为Map还是HashMap这种问题是最后才需要考虑的问题，永远要考虑系统最慢的部分，从最慢的部分解决。例如看看你用的ORM是不是做了很多你用不到的事情，是不是有重复的数据调用。我们做的是web应用开发，不是底层框架API，代码易读易懂是保证质量很重要的一方面，你的程序是为了什么而设计，有不同的方法……算了，这个话题另起一篇文章来说，扯远了，想交流可关注我的微博 <a href="http://t.sina.com.cn/liuzhiyi%EF%BC%8C%E5%92%B1%E7%BB%A7%E7%BB%AD%E2%80%A6%E2%80%A6">http://t.sina.com.cn/liuzhiyi，咱继续……</a>  </p>
<p>前面讲到，WEB服务器是要做负载均衡的，图片服务器是要分开的。对于这点，代码在处理客户端状态时，不要把状态放到单机上，举例，不要用文件 session，嗯，常识。如果有可能，最好在一开始就做好用户单点认证的统一接口，包括跨域如何判断状态、静态页面如何判断状态，需要登录时的跳转和返回参数定义，底层给好接口，应用层直接就用（可参考GAE的 user服务）。登录方面的设计要考虑移动设备的特性，比如电脑可以用浮动层窗口，但NOKIA自带的浏览器或UCWEB就无法处理这种表现形式，程序一定既能处理AJAX请求又能直接通过URL来处理请求。图片服务器分开，资源文件最好也布局到图片服务器，也就是WEB服务器只服务动态程序。虽然开发测试时稍微复杂（因为需要绝对URI才能访问），但将来页面前端优化上会轻松许多，并且你的WEB服务器IO优化也轻松许多。程序引用资源文件时，要有一个统一的处理方法，在方法内部可以自动完成很多事情，例如将css/js根据组合，拼成一个文件，或者自动在生成的URI后面加上QUERYSTRING，如果将来前端用了缓存服务，那生成QUERYSTRING是最简单的刷新服务端缓存和客户端缓存的办法。  </p>
<p>前面讲到，数据库会有复制，可能会多主多从，可能会分片。我们程序在处理数据的过程中，最好能抽象出来单独放做一层。拿现在流行的MVC模式来说，就是在M层下方再放一个数据层，这个数据层不是通常所说的JDBC/PDO/ActiveRecord等，而是你自己的存取数据层，仅对外暴露方法，隐藏数据存取细节。这个数据层内部不要怕写的难看，但一定要提供所有的数据存储功能，其他任何层次不要看到跟数据库打交道的字眼。之所以这样做，是因为在单关系数据库的情况下，可能会SELECT…JOIN…或直接INSERT…INTO…，可你可能会将一些表放到key-value数据库里存储，或者分片，这么做之后原来的语句和方式要全部改变，如果过于分散，则移植时会耗费很大精力，或得到一个很大的Model。在数据层面的设计上，尽量避免JOIN查询，我们可以多做冗余，多做缓存，每种数据尽量只需要一次查询，然后在你的程序里面进行组合。对于比较复杂的数据组合，在实时性要求不高的情况下，可采用异步处理，用户访问时只取处理后的结果。在对于主键的处理上，避免使用自增ID，可以用一定规则生成的唯一值当做主键，这种主键是最简单的分片分布策略。即使用自增ID，也最好用一个自增ID发生器，否则从数据库不小心被写了一下，那主键很容易冲突。  </p>
<p>前面讲到，咱数据库前面还有某些缓存挡着。别把mysql的query cache当缓存，应用稍复杂的时候QUERY CACHE反而会成为累赘。缓存跟数据库和业务结合的很紧密，正因为跟业务关系紧密，所以这点没有放之四海而皆准的方法。但我们还是有一些规则可参照。规则一：越接近前端，缓存的颗粒度越大。例如在WEB最前端缓存整个页面，再往后一层缓存部分页面区域，再往后缓存区域内的单条记录。因为越靠近后端，我们的可操作性越灵活，并且变化最多的前端代码也比较方便编写。在实践中，因为产品需求变化速度非常快，迭代周期越来越短，有时很难将Controller和 Model分的那么清楚，Controller层面处理部分缓存必不可免，但要保证如果出现这种情况，Controller所操作的缓存一定不要影响其他数据需求方，也就是要保证这个缓存数据只有这一个Controller在用。规则二：没有缓存时程序不能出错。在不考虑缓存失效引发的雪崩效应时，你的程序要有缓存跟没缓存一个样，不能像新浪微博一样，缓存一失效，粉丝微博全空，整个应用都乱套了。在缓存必不可少的情况下，给用户出错信息都比给一个让人误解的信息强。规则三，缓存更新要保证原子性或称作线程安全，特别是采用被动缓存的方式时，很可能两个用户访问时导致同一个缓存被更新，通常情况这不是大问题，可缓存失效后重建时很可能是引发连锁反应的原因之一。规则四：缓存也是有成本的。不只是技术成本，还有人工时间成本。如果一个功能使用缓存和不使用，在可预见的访问量情况下区别微小，但使用缓存会使复杂度增加，那就不用，我们可以加个TODO标注，在下次迭代的时候加上缓存处理。  </p>
<p>前面讲到，文件存储是独立的，那么所有的文件操作就都是远程调用。可以在文件服务器上提供一个很简单的RESTful接口，也可以提供xmlrpc 或json serveice，WEB服务器端所生成和处理的文件，全部通过接口通知文件服务器去处理，WEB服务器本身不要提供任何文件存储。你会发现很多大网站的上传图片跟保存文章是分两步完成的，就是基于这个原因。  </p>
<p>以上几条“前面讲到”，其实无数人都讲过，我也只是结合前几篇文章用自己的话重复了一遍，真正分析起来精髓很简单——除了良好的功能逻辑分层，我们还要为数据库存储、缓存、队列、文件服务等程序外层资源调用单独设计接口，你可以把你的程序想象成是运行在 Amazon EC2 上并用他的所有web service服务，你的数据库就是它的SimpleDB，你的队列就是他的SQS，你的存储就是他的S3，唯一不同是amazon的接口是远程调用，你的是内部调用。  </p>
<p>将支撑服务接口化，意味着将MySQL更换到PostgreSQL不需要更改业务处理程序，移植团队甚至不需要跟业务开发团队过多沟通；意味着业务开发团队是对接口编程而不是对数据库编程；意味着不会因为某个业务开发人员的失误而拖垮性能。  </p>
<p>对程序扫盲不感兴趣的直接看这里——  </p>
<p>产品设计完了，程序框架搭完了，可能有矛盾在这个节骨眼儿产生了。不断有产品设计抱怨说他的创意没实现到预期效果，有程序员抱怨说产品设计不切实际。这种抱怨多缘于产品人员不懂技术，技术人员不理解产品。从广义上来讲，产品包含市场策略、营销手段、功能设计，产品和技术在争论时往往把焦点放在功能上，而实际重点是，实现这个功能所消耗的成本跟能这个功能带来的利益能否换算，能否取其轻重。若可以，争议解决。若不能，则抛硬币看运气。因为一个功能的加强而引发指标井喷，或因项目拖延而导致贻误战机的例子比比皆是。激进的决策者注重利益，保守的决策者注重损失，聪明的决策者会考虑这个问题是否真的那么严重。  </p>
<p>关系到未来的事情谁都说不准，要不怎么说创业一半靠运气呢。不过总有能说的准的事情，那就得靠数据说话。  </p>
<p>没有100%也有99.9%的网站安装了访问统计代码，连我的 <a href="http://zhiyi.us/">http://zhiyi.us</a> 也不例外，新闻联播也总说科学决策科学发展的。有了统计，能确定的事情就很多了。例如，可以根据来源-目标转化率来分析哪类渠道的人均获取成本低，根据来源-内容访问猜测用户跳出率原因，根据用户点击行为判断链接位置是否合理等。将数据以不同方式组合起来，找到内在联系，分析内因外因，制定对应策略，减少拍脑门决策。靠数据支撑运营是个非常专业的事情，虽然不懂深奥的数学模型不会复杂的公式计算，渐渐学会因为A所以B，因为A和B所以C还是相对简单的。</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
  <entry>
    <title>2、mac启动过程</title>
    <url>/posts/1407524629/</url>
    <content><![CDATA[<p>白苹果的启动<br>-——————-  </p>
<blockquote>
<p>UEFI自检—–&gt;  </p>
<blockquote>
<p>SMC芯片验证和识别信息——–&gt;  </p>
<blockquote>
<p>mac启动  </p>
</blockquote>
</blockquote>
</blockquote>
<p>黑苹果的启动<br>-——————-  </p>
<blockquote>
<p>UEFI自检—–&gt;  </p>
<blockquote>
<p>变色龙引导—–&gt;  </p>
<blockquote>
<p>变色龙读取配置文件org.apple.Boot.plist—–&gt;  </p>
<blockquote>
<p>解压核心—&gt;  </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>变色龙读取DSDT.aml——-&gt;<br>变色龙调用SMBIOS添加机型信息——-&gt;  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>变色龙调用FakeSMC添加模拟的BIOS信息和硬件信息—–&gt;  </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>变色龙调用DSDT.aml并添加硬件信息—&gt;  </p>
<blockquote>
<p>变色龙调用SSDT.aml并应用——&gt;  </p>
<blockquote>
<p>核心加载模块———&gt;  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>mac启动  </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
</blockquote>
<p>#这里我们可以看到，我们直接修改FakeSMC就可以使mac识别，如果不改FakeSMC则可以添加DSDT等使mac识别  </p>
<p>附变色龙引导log<br>-——————-<br>Chameleon 2.2svn (svn-r2187) [2013-02-21 13:57:37]<br>msr(383): platform_info 60011f00<br>msr(387): flex_ratio 00000000<br>Sticking with [BCLK: 103Mhz, Bus-Ratio: 310]<br>CPU: Brand String:             Intel(R) Core(TM) i3-2100 CPU @ 3.10GHz<br>CPU: Vendor/Family/ExtFamily:  0x756e6547/0x6/0x0<br>CPU: Model/ExtModel/Stepping:  0x2a/0x2/0x7<br>CPU: MaxCoef/CurrCoef:         0x0/0x1f<br>CPU: MaxDiv/CurrDiv:           0x0/0x0<br>CPU: TSCFreq:                  3193MHz<br>CPU: FSBFreq:                  103MHz<br>CPU: CPUFreq:                  3193MHz<br>CPU: NoCores/NoThreads:        2/4<br>CPU: Features:                 0x000002ff<br>Attempting to read GPT<br>Read GPT<br>Reading GPT partition 1, type C12A7328-F81F-11D2-BA4B-00A0C93EC93B<br>Reading GPT partition 2, type 48465300-0000-11AA-AA11-00306543ECAC<br>Read HFS+ file: [hd(0,2)/System/Library/CoreServices/SystemVersion.plist] 478 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/org.chameleon.Boot.plist] 476 bytes.<br>Module ‘Symbols.dylib’ by ‘Chameleon’ Loaded.<br>    Description: Chameleon symbols for linking<br>    Version: 0<br>    Compat:  0<br>Read HFS+ file: [hd(0,2)/Extra/modules/klibc.dylib] 44252 bytes.<br>Module ‘klibc.dylib’ by ‘Unknown’ Loaded.<br>    Description:<br>    Version: 0<br>    Compat:  0<br>Read HFS+ file: [hd(0,2)/Extra/modules/uClibcxx.dylib] 77808 bytes.<br>Module ‘uClibcxx.dylib’ by ‘Unknown’ Loaded.<br>    Description:<br>    Version: 0<br>    Compat:  0<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/theme.plist] 2787 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/background.png] 160 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/logo.png] 9791 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_generic.png] 30749 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_generic_o.png] 31641 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus.png] 33224 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_o.png] 34030 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_ml.png] 29768 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_ml_o.png] 30578 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_lion.png] 28223 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_lion_o.png] 28963 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_sl.png] 29902 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_sl_o.png] 30684 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_leo.png] 28892 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_leo_o.png] 29666 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_tiger.png] 28400 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsplus_tiger_o.png] 29157 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid.png] 33806 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_o.png] 34633 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_ml.png] 30436 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_ml_o.png] 31257 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_lion.png] 28949 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_lion_o.png] 29725 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_sl.png] 30605 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_sl_o.png] 31378 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_leo.png] 29649 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_leo_o.png] 30429 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_tiger.png] 29104 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_hfsraid_tiger_o.png] 29917 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_ext3.png] 33010 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_ext3_o.png] 33943 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_freebsd.png] 27264 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_freebsd_o.png] 28018 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_openbsd.png] 28850 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_openbsd_o.png] 29596 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_befs.png] 27817 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_befs_o.png] 28529 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_fat.png] 32113 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_fat_o.png] 33007 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_ntfs.png] 34190 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_ntfs_o.png] 34992 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_cdrom.png] 31453 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_cdrom_o.png] 31312 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_selection.png] 148 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_scroll_prev.png] 3995 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/device_scroll_next.png] 3898 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_boot.png] 137 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_verbose.png] 137 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_ignore_caches.png] 137 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_single_user.png] 137 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_memory_info.png] 136 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_video_info.png] 136 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_help.png] 136 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_verbose_disabled.png] 135 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_ignore_caches_disabled.png] 135 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_single_user_disabled.png] 135 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/menu_selection.png] 158 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/progress_bar.png] 292 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/progress_bar_background.png] 139 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/text_scroll_prev.png] 562 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/text_scroll_next.png] 557 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/font_console.png] 2931 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/Themes/Default/font_small.png] 3371 bytes.<br>Read HFS+ file: [hd(0,2)/Library/Preferences/SystemConfiguration/com.apple.Boot.plist] 232 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/org.chameleon.Boot.plist] 476 bytes.<br>Loading Darwin 10.8<br>No Kernel Cache File ‘/System/Library/Caches/com.apple.kext.caches/Startup/kernelcache’ found<br>Loading kernel /mach_kernel<br>Read HFS+ file: [hd(0,2)/mach_kernel] 4096 bytes.<br>Read HFS+ file: [hd(0,2)/mach_kernel] 8188064 bytes.<br>Read HFS+ file: [hd(0,2)/Extra/dadt.aml] 102813 bytes.<br>Using PCI-Root-UID value: 0<br>LAN Controller [10ec:8168] :: PciRoot(0x0)/Pci(0x1c,0x2)/Pci(0x0,0x0)<br>Setting up lan keys<br>Read HFS+ file: [hd(0,2)/Extra/SMBios.plist] 687 bytes.<br>SMBus CmdReg: 0x3<br>Scanning SMBus [8086:1c22], mmio: 0xfe604004, ioport: 0xf040, hostc: 0x1<br>SPD[0] (size): 146 @0x50<br>Slot: 0 Type 24 2048MB (DDR3 SDRAM) 1333MHz Vendor=Apacer Technology<br>      PartNo=78.A1GC6.9LZ SerialNo=02010212<br>SPD[0] (size): 255 @0x51<br>SPD[0] (size): 146 @0x52<br>Slot: 2 Type 24 2048MB (DDR3 SDRAM) 1333MHz Vendor=Apacer Technology<br>      PartNo=78.A1GC6.9LZ SerialNo=02010212<br>SPD[0] (size): 255 @0x53<br>SPD[0] (size): 255 @0x54<br>SPD[0] (size): 255 @0x55<br>SPD[0] (size): 255 @0x56<br>SPD[0] (size): 255 @0x57<br>CPU is Intel(R) Core(TM) i3-2100 CPU @ 3.10GHz, family 0x6, model 0x2a  </p>
<p>Type: 0, Length: 24, Handle: 0x0<br>BIOSInformation:<br>    vendor: Apple Inc.<br>    version: IM121.88Z.0047.B0A.1104221555<br>    releaseDate: 04/22/11  </p>
<p>Type: 1, Length: 27, Handle: 0x1<br>SystemInformation:<br>    manufacturer: Apple Inc.<br>    productName: iMac12,1<br>    version: 1.0<br>    serialNumber: C02JL367DHJT<br>    uuid: 4093C112-8064-E011-816C-F46D0423CA64<br>    wakeupReason: 0x6<br>    skuNumber: To be filled by O.E.M.<br>    family: iMac  </p>
<p>Type: 2, Length: 15, Handle: 0x2<br>BaseBoard:<br>    manufacturer: Apple Inc.<br>    product: Mac-942B5BF58194151B<br>    version: Rev x.0x<br>    serialNumber: 109424350001705<br>    assetTagNumber: To be filled by O.E.M.<br>    locationInChassis: To be filled by O.E.M.<br>    boardType: 0xA  </p>
<p>Type: 3, Length: 21, Handle: 0x3<br>SystemEnclosure:<br>    manufacturer: Chassis Manufacture<br>    type: 3<br>    version: Chassis Version<br>    serialNumber: Chassis Serial Number<br>    assetTagNumber: Asset-1234567890  </p>
<p>Type: 4, Length: 42, Handle: 0x4<br>ProcessorInformation:<br>    socketDesignation: LGA1155<br>    processorType: 3<br>    processorFamily: 0xBF<br>    manufacturer: Intel<br>    processorID: 0x206A7<br>    processorVersion: Intel(R) Core(TM) i3-2100 CPU @ 3.10GHz<br>    externalClock: 0MHz<br>    maximumClock: 3193MHz<br>    currentClock: 3223MHz<br>    serialNumber: To Be Filled By O.E.M.<br>    assetTag: To Be Filled By O.E.M.<br>    partNumber: To Be Filled By O.E.M.  </p>
<p>Type: 7, Length: 19, Handle: 0x5<br>Type: 7, Length: 19, Handle: 0x6<br>Type: 7, Length: 19, Handle: 0x7<br>Type: 8, Length: 9, Handle: 0x8<br>Type: 8, Length: 9, Handle: 0x9<br>Type: 8, Length: 9, Handle: 0xa<br>Type: 8, Length: 9, Handle: 0xb<br>Type: 8, Length: 9, Handle: 0xc<br>Type: 8, Length: 9, Handle: 0xd<br>Type: 8, Length: 9, Handle: 0xe<br>Type: 8, Length: 9, Handle: 0xf<br>Type: 8, Length: 9, Handle: 0x10<br>Type: 8, Length: 9, Handle: 0x11<br>Type: 8, Length: 9, Handle: 0x12<br>Type: 8, Length: 9, Handle: 0x13<br>Type: 8, Length: 9, Handle: 0x14<br>Type: 8, Length: 9, Handle: 0x15<br>Type: 8, Length: 9, Handle: 0x16<br>Type: 8, Length: 9, Handle: 0x17<br>Type: 8, Length: 9, Handle: 0x18<br>Type: 8, Length: 9, Handle: 0x19<br>Type: 8, Length: 9, Handle: 0x1a<br>Type: 9, Length: 17, Handle: 0x1b<br>Type: 9, Length: 17, Handle: 0x1c<br>Type: 9, Length: 17, Handle: 0x1d<br>Type: 9, Length: 17, Handle: 0x1e<br>Type: 10, Length: 6, Handle: 0x1f<br>Type: 11, Length: 5, Handle: 0x20<br>Type: 12, Length: 5, Handle: 0x21<br>Type: 16, Length: 15, Handle: 0x22<br>Type: 18, Length: 23, Handle: 0x23<br>Type: 19, Length: 15, Handle: 0x24<br>Type: 17, Length: 28, Handle: 0x25<br>MemoryDevice:<br>    deviceLocator: DIMM0<br>    bankLocator: BANK0<br>    memoryType: DDR3<br>    memorySpeed: 1333MHz<br>    manufacturer: Apacer Technology<br>    serialNumber: 02010212<br>    assetTag: AssetTagNum0<br>    partNumber: 78.A1GC6.9LZ  </p>
<p>Type: 18, Length: 23, Handle: 0x26<br>Type: 20, Length: 19, Handle: 0x27<br>Type: 17, Length: 28, Handle: 0x28<br>MemoryDevice:<br>    deviceLocator: DIMM1<br>    bankLocator: BANK1<br>    memoryType: DDR3<br>    memorySpeed: 1333MHz<br>    manufacturer: Apacer Technology<br>    serialNumber: 02010212<br>    assetTag: AssetTagNum1<br>    partNumber: 78.A1GC6.9LZ  </p>
<p>Type: 18, Length: 23, Handle: 0x29<br>Type: 20, Length: 19, Handle: 0x2a<br>Type: 32, Length: 20, Handle: 0x2b<br>Type: 34, Length: 11, Handle: 0x2c<br>Type: 26, Length: 22, Handle: 0x2d<br>Type: 36, Length: 16, Handle: 0x2e<br>Type: 35, Length: 11, Handle: 0x2f<br>Type: 28, Length: 22, Handle: 0x30<br>Type: 36, Length: 16, Handle: 0x31<br>Type: 35, Length: 11, Handle: 0x32<br>Type: 27, Length: 14, Handle: 0x33<br>Type: 36, Length: 16, Handle: 0x34<br>Type: 35, Length: 11, Handle: 0x35<br>Type: 27, Length: 14, Handle: 0x36<br>Type: 36, Length: 16, Handle: 0x37<br>Type: 35, Length: 11, Handle: 0x38<br>Type: 29, Length: 22, Handle: 0x39<br>Type: 36, Length: 16, Handle: 0x3a<br>Type: 35, Length: 11, Handle: 0x3b<br>Type: 39, Length: 22, Handle: 0x3c<br>Type: 34, Length: 16, Handle: 0x3d<br>Type: 26, Length: 22, Handle: 0x3e<br>Type: 36, Length: 16, Handle: 0x3f<br>Type: 35, Length: 11, Handle: 0x40<br>Type: 26, Length: 22, Handle: 0x41<br>Type: 36, Length: 16, Handle: 0x42<br>Type: 35, Length: 11, Handle: 0x43<br>Type: 28, Length: 22, Handle: 0x44<br>Type: 36, Length: 16, Handle: 0x45<br>Type: 35, Length: 11, Handle: 0x46<br>Type: 27, Length: 14, Handle: 0x47<br>Type: 36, Length: 16, Handle: 0x48<br>Type: 35, Length: 11, Handle: 0x49<br>Type: 28, Length: 22, Handle: 0x4a<br>Type: 36, Length: 16, Handle: 0x4b<br>Type: 35, Length: 11, Handle: 0x4c<br>Type: 27, Length: 14, Handle: 0x4d<br>Type: 36, Length: 16, Handle: 0x4e<br>Type: 35, Length: 11, Handle: 0x4f<br>Type: 29, Length: 22, Handle: 0x50<br>Type: 36, Length: 16, Handle: 0x51<br>Type: 35, Length: 11, Handle: 0x52<br>Type: 29, Length: 22, Handle: 0x53<br>Type: 36, Length: 16, Handle: 0x54<br>Type: 35, Length: 11, Handle: 0x55<br>Type: 39, Length: 22, Handle: 0x56<br>Type: 41, Length: 11, Handle: 0x57<br>Type: 41, Length: 11, Handle: 0x58<br>Type: 41, Length: 11, Handle: 0x59<br>Type: 139, Length: 94, Handle: 0x5a<br>Type: 13, Length: 22, Handle: 0x5b<br>Type: 131, Length: 6, Handle: 0x5b<br>AppleProcessorType:<br>    ProcessorType: 0x901  </p>
<p>Type: 127, Length: 4, Handle: 0x5c  </p>
<p>Customizing SystemID with : 4093c112-8064-e011-816c-f46d0423ca64<br>Read HFS+ file: [hd(0,2)/Extra/dadt.aml] 102813 bytes.<br>ACPI table not found: SSDT.aml<br>FADT: Using custom DSDT!<br>FADT: Using custom DSDT!<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/Accusys6xxxx.kext/Contents/Info.plist] 2409 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/acfs.kext/Contents/Info.plist] 1319 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/acfsctl.kext/Contents/Info.plist] 1197 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ALF.kext/Contents/Info.plist] 1659 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AMDRadeonAccelerator.kext/Contents/Info.plist] 15314 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/Apple16X50Serial.kext/Contents/Info.plist] 2047 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/Apple16X50Serial.kext/Contents/PlugIns/Apple16X50ACPI.kext/Contents/Info.plist] 1912 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/Apple_iSight.kext/Contents/Info.plist] 2033 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleACPIPlatform.kext/Contents/Info.plist] 3715 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleACPIPlatform.kext/Contents/PlugIns/AppleACPIButtons.kext/Contents/Info.plist] 2964 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleACPIPlatform.kext/Contents/PlugIns/AppleACPIEC.kext/Contents/Info.plist] 2141 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleAHCIPort.kext/Contents/Info.plist] 6744 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleAPIC.kext/Contents/Info.plist] 1818 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleAVBAudio.kext/Contents/Info.plist] 2306 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleAVBAudio.kext/Contents/PlugIns/AppleAVBAudioPlugin.kext/Contents/Info.plist] 2459 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleBacklight.kext/Contents/Info.plist] 17087 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleBacklightExpert.kext/Info.plist] 1923 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleBluetoothMultitouch.kext/Contents/Info.plist] 56598 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleBMC.kext/Contents/Info.plist] 2140 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleEFIRuntime.kext/Contents/Info.plist] 2077 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleEFIRuntime.kext/Contents/PlugIns/AppleEFINVRAM.kext/Contents/Info.plist] 2073 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleFileSystemDriver.kext/Contents/Info.plist] 3067 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleFSCompressionTypeDataless.kext/Contents/Info.plist] 2405 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleFSCompressionTypeZlib.kext/Contents/Info.plist] 2379 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleFWAudio.kext/Contents/Info.plist] 7590 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleGraphicsControl.kext/Contents/Info.plist] 2024 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleGraphicsControl.kext/Contents/PlugIns/AppleMuxControl.kext/Contents/Info.plist] 13227 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleGraphicsControl.kext/Contents/PlugIns/ApplePolicyControl.kext/Contents/Info.plist] 2557 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleGraphicsPowerManagement.kext/Contents/Info.plist] 79681 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHDA.kext/Contents/Info.plist] 3213 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHDA.kext/Contents/PlugIns/AppleHDAController.kext/Contents/Info.plist] 4807 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHDA.kext/Contents/PlugIns/AppleHDAHardwareConfigDriver.kext/Contents/Info.plist] 12558 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHDA.kext/Contents/PlugIns/AppleMikeyDriver.kext/Contents/Info.plist] 2207 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHDA.kext/Contents/PlugIns/DspFuncLib.kext/Contents/Info.plist] 1859 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHDA.kext/Contents/PlugIns/IOHDAFamily.kext/Contents/Info.plist] 1995 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHIDKeyboard.kext/Contents/Info.plist] 41939 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHIDKeyboard.kext/Contents/PlugIns/AppleBluetoothHIDKeyboard.kext/Contents/Info.plist] 45724 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHIDKeyboard.kext/Contents/PlugIns/AppleUSBHIDKeyboard.kext/Contents/Info.plist] 14763 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHIDMouse.kext/Contents/Info.plist] 1606 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHIDMouse.kext/Contents/PlugIns/AppleBluetoothHIDMouse.kext/Contents/Info.plist] 17736 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHIDMouse.kext/Contents/PlugIns/AppleUSBHIDMouse.kext/Contents/Info.plist] 10106 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHPET.kext/Contents/Info.plist] 1985 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleHWSensor.kext/Contents/Info.plist] 2265 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleIRController.kext/Contents/Info.plist] 5668 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleKeyStore.kext/Contents/Info.plist] 2245 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleKeyswitch.kext/Contents/Info.plist] 2720 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleLPC.kext/Contents/Info.plist] 4043 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleLSIFusionMPT.kext/Contents/Info.plist] 4038 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleMatch.kext/Contents/Info.plist] 1411 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleMCCSControl.kext/Contents/Info.plist] 3525 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleMCEDriver.kext/Contents/Info.plist] 1800 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleMCP89RootPortPM.kext/Contents/Info.plist] 2117 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleMikeyHIDDriver.kext/Contents/Info.plist] 1972 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleMobileDevice.kext/Contents/Info.plist] 3618 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleMultitouchDriver.kext/Contents/Info.plist] 1695 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ApplePlatformEnabler.kext/Contents/Info.plist] 1857 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleRAID.kext/Contents/Info.plist] 2294 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleRAIDCard.kext/Contents/Info.plist] 4292 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleRTC.kext/Contents/Info.plist] 1969 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleSDXC.kext/Contents/Info.plist] 2915 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleSEP.kext/Contents/Info.plist] 2970 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleSmartBatteryManager.kext/Contents/Info.plist] 2063 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleSMBIOS.kext/Contents/Info.plist] 1929 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleSMBusController.kext/Contents/Info.plist] 2912 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleSMBusPCI.kext/Contents/Info.plist] 1999 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleSMC.kext/Contents/Info.plist] 1940 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleSMCLMU.kext/Contents/Info.plist] 2053 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleSRP.kext/Contents/Info.plist] 1352 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/Info.plist] 1159 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/AppleATAPIStorage.kext/Contents/Info.plist] 3097 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/AppleFireWireStorage.kext/Contents/Info.plist] 2619 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/AppleHollywood.kext/Contents/Info.plist] 16755 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/AppleMemorexCDROMDriver.kext/Contents/Info.plist] 2314 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/AppleUSBCardReader.kext/Contents/Info.plist] 5123 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/AppleUSBODD.kext/Contents/Info.plist] 2620 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/AppleXserveRAID.kext/Contents/Info.plist] 2495 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/CanonEOS1D.kext/Contents/Info.plist] 2727 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/FireWireStorageDeviceSpecifics.kext/Contents/Info.plist] 7367 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/FWPreferredProtocolSpeed.kext/Contents/Info.plist] 2775 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/initioFWBridge.kext/Contents/Info.plist] 2703 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/IOFireWireSerialBusProtocolSansPhysicalUnit.kext/Contents/Info.plist] 2757 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/LSI-FW-500.kext/Contents/Info.plist] 3865 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/MaxTranserSizeOverrideDriver.kext/Contents/Info.plist] 3088 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/MKE-LF-D211A.kext/Contents/Info.plist] 2844 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/MKE-SR-8171.kext/Contents/Info.plist] 2261 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/OxfordSemiconductor.kext/Contents/Info.plist] 2719 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/PioneerSuperDrive.kext/Contents/Info.plist] 2208 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/PlasmonUDO.kext/Contents/Info.plist] 2218 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/PreventMediaMountDriver.kext/Contents/Info.plist] 2693 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/QPSQueFire.kext/Contents/Info.plist] 2661 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/SanyoIDShot.kext/Contents/Info.plist] 2798 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/SonyXDCAMDriver.kext/Contents/Info.plist] 2698 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/StorageLynx.kext/Contents/Info.plist] 2565 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/UFIWriteProtectedMediaDriver.kext/Contents/Info.plist] 3108 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/USBStorageDeviceSpecifics.kext/Contents/Info.plist] 112471 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleStorageDrivers.kext/Contents/PlugIns/WriteProtectedMediaDriver.kext/Contents/Info.plist] 6905 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltDPAdapters.kext/Contents/Info.plist] 1289 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltDPAdapters.kext/Contents/PlugIns/AppleThunderboltDPAdapterFamily.kext/Contents/Info.plist] 1867 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltDPAdapters.kext/Contents/PlugIns/AppleThunderboltDPInAdapter.kext/Contents/Info.plist] 2396 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltDPAdapters.kext/Contents/PlugIns/AppleThunderboltDPOutAdapter.kext/Contents/Info.plist] 2485 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltEDMService.kext/Contents/Info.plist] 1296 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltEDMService.kext/Contents/PlugIns/AppleThunderboltEDMSink.kext/Contents/Info.plist] 2557 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltEDMService.kext/Contents/PlugIns/AppleThunderboltEDMSource.kext/Contents/Info.plist] 2509 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltNHI.kext/Contents/Info.plist] 2392 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltPCIAdapters.kext/Contents/Info.plist] 1350 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltPCIAdapters.kext/Contents/PlugIns/AppleThunderboltPCIDownAdapter.kext/Contents/Info.plist] 2207 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltPCIAdapters.kext/Contents/PlugIns/AppleThunderboltPCIUpAdapter.kext/Contents/Info.plist] 2281 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleThunderboltUTDM.kext/Contents/Info.plist] 2914 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleTyMCEDriver.kext/Contents/Info.plist] 2301 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUpstreamUserClient.kext/Contents/Info.plist] 2238 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUSBAudio.kext/Contents/Info.plist] 4033 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUSBDisplays.kext/Contents/Info.plist] 26094 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUSBEthernetHost.kext/Contents/Info.plist] 2693 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUSBMultitouch.kext/Contents/Info.plist] 386012 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUSBTopCase.kext/Contents/Info.plist] 1523 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUSBTopCase.kext/Contents/PlugIns/AppleUSBTCButtons.kext/Contents/Info.plist] 87849 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUSBTopCase.kext/Contents/PlugIns/AppleUSBTCKeyboard.kext/Contents/Info.plist] 53670 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUSBTopCase.kext/Contents/PlugIns/AppleUSBTCKeyEventDriver.kext/Contents/Info.plist] 127228 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleUSBTopCase.kext/Contents/PlugIns/AppleUSBTrackpad.kext/Contents/Info.plist] 40192 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleWWANAutoEject.kext/Contents/Info.plist] 4296 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AppleXsanFilter.kext/Contents/Info.plist] 2258 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ArcMSR.kext/Contents/Info.plist] 2803 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATI4600Controller.kext/Contents/Info.plist] 2037 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATIFramebuffer.kext/Contents/Info.plist] 22576 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATIRadeonX2000.kext/Contents/Info.plist] 3532 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATISupport.kext/Contents/Info.plist] 2030 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATTOCelerityFC.kext/Contents/Info.plist] 3046 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATTOCelerityFC8.kext/Contents/Info.plist] 3000 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATTOExpressPCI4.kext/Contents/Info.plist] 2487 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATTOExpressSASHBA.kext/Contents/Info.plist] 2945 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATTOExpressSASHBA2.kext/Contents/Info.plist] 3018 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATTOExpressSASHBA3.kext/Contents/Info.plist] 2893 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATTOExpressSASRAID.kext/Contents/Info.plist] 2955 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ATTOExpressSASRAID2.kext/Contents/Info.plist] 3028 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/AudioAUUC.kext/Info.plist] 2194 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/autofs.kext/Contents/Info.plist] 1740 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/BJUSBLoad.kext/Contents/Info.plist] 125615 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/BootCache.kext/Contents/Info.plist] 2093 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/CalDigitHDProDrv.kext/Contents/Info.plist] 2364 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/cd9660.kext/Contents/Info.plist] 1666 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/cddafs.kext/Contents/Info.plist] 1587 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/CellPhoneHelper.kext/Contents/Info.plist] 100096 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/corecrypto.kext/Contents/Info.plist] 1978 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/CoreStorage.kext/Contents/Info.plist] 3004 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/CoreStorage.kext/Contents/PlugIns/CoreStorageFsck.kext/Contents/Info.plist] 2419 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/Dont Steal Mac OS X.kext/Contents/Info.plist] 2453 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/EVOenabler.kext/Contents/Info.plist] 101757 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/exfat.kext/Contents/Info.plist] 1637 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/FakeSMC.kext/Contents/Info.plist] 2452 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/GeForce.kext/Contents/Info.plist] 2335 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/HDAEnabler1.kext/Contents/Info.plist] 1953 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/HighPointIOP.kext/Contents/Info.plist] 3180 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/HighPointRR.kext/Contents/Info.plist] 4538 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IO80211Family.kext/Contents/Info.plist] 1869 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IO80211Family.kext/Contents/PlugIns/AirPortAtheros40.kext/Contents/Info.plist] 2545 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IO80211Family.kext/Contents/PlugIns/AirPortBrcm4331.kext/Contents/Info.plist] 2480 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IO80211Family.kext/Contents/PlugIns/AppleAirPortBrcm43224.kext/Contents/Info.plist] 2827 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IO80211Family.kext/Contents/PlugIns/IO80211NetBooter.kext/Contents/Info.plist] 2013 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOAcceleratorFamily.kext/Contents/Info.plist] 1876 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOACPIFamily.kext/Contents/Info.plist] 1678 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOAHCIFamily.kext/Contents/Info.plist] 1603 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOAHCIFamily.kext/Contents/PlugIns/IOAHCIBlockStorage.kext/Contents/Info.plist] 2180 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOAHCIFamily.kext/Contents/PlugIns/IOAHCISerialATAPI.kext/Contents/Info.plist] 2429 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOATAFamily.kext/Contents/Info.plist] 1641 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOATAFamily.kext/Contents/PlugIns/AppleIntelPIIXATA.kext/Contents/Info.plist] 6218 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOATAFamily.kext/Contents/PlugIns/IOATABlockStorage.kext/Contents/Info.plist] 2120 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOATAFamily.kext/Contents/PlugIns/IOATAPIProtocolTransport.kext/Contents/Info.plist] 2493 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOAudioFamily.kext/Contents/Info.plist] 1753 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOAVBFamily.kext/Contents/Info.plist] 2355 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOAVBFamily.kext/Contents/PlugIns/IOAVBDiscoveryPlugin.kext/Contents/Info.plist] 2719 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOAVBFamily.kext/Contents/PlugIns/IOAVBPlugin.kext/Contents/Info.plist] 4867 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOAVBFamily.kext/Contents/PlugIns/IOMRPPlugin.kext/Contents/Info.plist] 5578 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOBDStorageFamily.kext/Contents/Info.plist] 2578 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOBluetoothFamily.kext/Contents/PlugIns/IOBluetoothUSBDFU.kext/Contents/Info.plist] 8250 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOCDStorageFamily.kext/Contents/Info.plist] 3079 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IODVDStorageFamily.kext/Contents/Info.plist] 2525 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOFireWireAVC.kext/Contents/Info.plist] 3968 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOFireWireFamily.kext/Contents/Info.plist] 2368 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOFireWireFamily.kext/Contents/PlugIns/AppleFWOHCI.kext/Contents/Info.plist] 2835 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOFireWireIP.kext/Contents/Info.plist] 2110 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOFireWireIP.kext/Contents/PlugIns/IOFireWireIPPrivate.kext/Contents/Info.plist] 2554 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOFireWireSBP2.kext/Contents/Info.plist] 2875 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOFireWireSerialBusProtocolTransport.kext/Contents/Info.plist] 2643 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOGraphicsFamily.kext/Info.plist] 3289 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/Info.plist] 2253 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/PlugIns/AppleDiskImagesCryptoEncoding.kext/Contents/Info.plist] 2548 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/PlugIns/AppleDiskImagesFileBackingStore.kext/Contents/Info.plist] 2325 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/PlugIns/AppleDiskImagesHTTPBackingStore.kext/Contents/Info.plist] 2322 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/PlugIns/AppleDiskImagesKernelBacked.kext/Contents/Info.plist] 2558 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/PlugIns/AppleDiskImagesPartitionBackingStore.kext/Contents/Info.plist] 2549 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/PlugIns/AppleDiskImagesRAMBackingStore.kext/Contents/Info.plist] 2307 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/PlugIns/AppleDiskImagesReadWriteDiskImage.kext/Contents/Info.plist] 2291 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/PlugIns/AppleDiskImagesSparseDiskImage.kext/Contents/Info.plist] 2273 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHDIXController.kext/Contents/PlugIns/AppleDiskImagesUDIFDiskImage.kext/Contents/Info.plist] 2573 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHIDFamily.kext/Contents/Info.plist] 2839 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHIDFamily.kext/Contents/PlugIns/IOHIDEventDriver.kext/Contents/Info.plist] 2420 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHIDFamily.kext/Contents/PlugIns/IOHIDEventDriverSafeBoot.kext/Contents/Info.plist] 11673 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHIDFamily.kext/Contents/PlugIns/IOHIDSystem.kext/Contents/Info.plist] 1787 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOHIDFamily.kext/Contents/PlugIns/IOHIDUserClient.kext/Contents/Info.plist] 4016 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONDRVSupport.kext/Info.plist] 3073 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/Info.plist] 2529 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/AppleBCM5701Ethernet.kext/Contents/Info.plist] 4168 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/AppleIntel8254XEthernet.kext/Contents/Info.plist] 3180 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/AppleRTL8169Ethernet.kext/Contents/Info.plist] 4309 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/AppleUSBEthernet.kext/Contents/Info.plist] 5309 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/AppleUSBGigEthernet.kext/Contents/Info.plist] 4984 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/AppleYukon2.kext/Contents/Info.plist] 23266 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/Intel82574L.kext/Contents/Info.plist] 3147 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/IOEthernetAVBController.kext/Contents/Info.plist] 1738 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/nvenet.kext/Contents/Info.plist] 2431 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOPCIFamily.kext/Info.plist] 2780 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/Info.plist] 1866 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/PlugIns/ACPI_SMC_PlatformPlugin.kext/Contents/Info.plist] 2642 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/PlugIns/AppleSMCPDRC.kext/Contents/Info.plist] 2170 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/PlugIns/IOPlatformPluginLegacy.kext/Contents/Info.plist] 1941 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/PlugIns/X86PlatformPlugin.kext/Contents/Info.plist] 2811 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/PlugIns/X86PlatformShim.kext/Contents/Info.plist] 2132 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSCSIArchitectureModelFamily.kext/Contents/Info.plist] 2471 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSCSIArchitectureModelFamily.kext/Contents/PlugIns/IOSCSIBlockCommandsDevice.kext/Contents/Info.plist] 2573 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSCSIArchitectureModelFamily.kext/Contents/PlugIns/IOSCSIMultimediaCommandsDevice.kext/Contents/Info.plist] 2446 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSCSIArchitectureModelFamily.kext/Contents/PlugIns/IOSCSIReducedBlockCommandsDevice.kext/Contents/Info.plist] 2238 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSCSIArchitectureModelFamily.kext/Contents/PlugIns/SCSITaskUserClient.kext/Contents/Info.plist] 4960 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSCSIParallelFamily.kext/Contents/Info.plist] 1712 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSerialFamily.kext/Contents/Info.plist] 2542 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSerialFamily.kext/Contents/PlugIns/AppleUSBIrDA.kext/Contents/Info.plist] 2229 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSerialFamily.kext/Contents/PlugIns/AppleWWANSupport.kext/Contents/Info.plist] 4960 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSerialFamily.kext/Contents/PlugIns/AppleWWANSupport1.kext/Contents/Info.plist] 7486 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSerialFamily.kext/Contents/PlugIns/AppleWWANSupport2.kext/Contents/Info.plist] 2201 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSMBusFamily.kext/Contents/Info.plist] 1491 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOStorageFamily.kext/Contents/Info.plist] 5912 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOStreamFamily.kext/Contents/Info.plist] 1398 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOStreamFamily.kext/Contents/PlugIns/IOStreamUserClient.kext/Contents/Info.plist] 1984 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOSurface.kext/Contents/Info.plist] 2181 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOThunderboltFamily.kext/Contents/Info.plist] 1709 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOTimeSyncFamily.kext/Contents/Info.plist] 1748 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOTimeSyncFamily.kext/Contents/PlugIns/IO8021ASPlugin.kext/Contents/Info.plist] 2841 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBAttachedSCSI.kext/Contents/Info.plist] 2955 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/Info.plist] 1797 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBCDC.kext/Contents/Info.plist] 15650 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBCDCACMControl.kext/Contents/Info.plist] 1976 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBCDCACMData.kext/Contents/Info.plist] 9481 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBCDCDMM.kext/Contents/Info.plist] 1984 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBCDCECMControl.kext/Contents/Info.plist] 2049 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBCDCECMData.kext/Contents/Info.plist] 3311 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBCDCEEM.kext/Contents/Info.plist] 2013 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBCDCWCM.kext/Contents/Info.plist] 1916 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBEHCI.kext/Contents/Info.plist] 2266 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBHub.kext/Contents/Info.plist] 2388 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBMergeNub.kext/Contents/Info.plist] 54239 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBOHCI.kext/Contents/Info.plist] 2201 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBOpticalMouse.kext/Contents/Info.plist] 6821 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBUHCI.kext/Contents/Info.plist] 2219 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBVideoSupport.kext/Contents/Info.plist] 5461 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBXHCI.kext/Contents/Info.plist] 2279 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/IOUSBCompositeDriver.kext/Contents/Info.plist] 3267 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/IOUSBHIDDriver.kext/Contents/Info.plist] 2308 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/IOUSBHIDDriverSafeBoot.kext/Contents/Info.plist] 5318 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/IOUSBUserClient.kext/Contents/Info.plist] 3504 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUSBMassStorageClass.kext/Contents/Info.plist] 6148 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOUserEthernet.kext/Contents/Info.plist] 3093 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOVideoFamily.kext/Contents/Info.plist] 1462 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/IOVideoFamily.kext/Contents/PlugIns/IOVideoDeviceUserClient.kext/Contents/Info.plist] 2209 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/iPodDriver.kext/Contents/Info.plist] 3937 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/iPodDriver.kext/Contents/PlugIns/iPodSBCDriver.kext/Contents/Info.plist] 2995 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/JMicronATA.kext/Contents/Info.plist] 2231 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/mcxalr.kext/Contents/Info.plist] 1324 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/msdosfs.kext/Contents/Info.plist] 1504 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/ntfs.kext/Contents/Info.plist] 1630 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/NullCPUPowerManagement.kext/Contents/Info.plist] 1498 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/NVDAGF100Hal.kext/Contents/Info.plist] 2375 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/NVDAGK100Hal.kext/Contents/Info.plist] 1879 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/NVDANV50Hal.kext/Contents/Info.plist] 2427 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/NVDAResman.kext/Contents/Info.plist] 2607 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/NVSMU.kext/Contents/Info.plist] 1977 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/OSvKernDSPLib.kext/Contents/Info.plist] 1356 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/PPP.kext/Contents/Info.plist] 1742 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/PromiseSTEX.kext/Contents/Info.plist] 2494 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/Quarantine.kext/Contents/Info.plist] 1870 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/RadeonHD.kext/Contents/Info.plist] 2561 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/RealtekRTL81xx.kext/Contents/Info.plist] 1969 bytes.  </p>
<blockquote>
<p>…………………………………………………………………….  </p>
</blockquote>
<p>Read HFS+ file: [hd(0,2)/System/Library/Extensions/EVOenabler.kext/Contents/MacOS/EVOenabler] 4096 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/EVOenabler.kext/Contents/MacOS/EVOenabler] 36264 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/FakeSMC.kext/Contents/MacOS/fakesmc] 4096 bytes.<br>Read HFS+ file: [hd(0,2)/System/Library/Extensions/FakeSMC.kext/Contents/MacOS/fakesmc] 55992 bytes.  </p>
<blockquote>
<p>…………………………………………………………………….  </p>
</blockquote>
<p>Starting Darwin x86_64<br>Boot Args: boot-uuid=4159DDB1-8659-378A-8D3C-C8366B8B54EF rd=*uuid -v</p>
]]></content>
      <tags>
        <tag>未分类</tag>
      </tags>
  </entry>
</search>
